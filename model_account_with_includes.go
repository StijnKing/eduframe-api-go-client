/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AccountWithIncludes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountWithIncludes{}

// AccountWithIncludes struct for AccountWithIncludes
type AccountWithIncludes struct {
	// Unique identifier of the account.
	Id int32 `json:"id"`
	// Arbitrary string representing the name of the account. Is autogenerated for personal accounts.
	Name string `json:"name"`
	// A string representing the billing e-mail of the account
	Email NullableString `json:"email"`
	// A string representing the phone number of the account
	Phone NullableString `json:"phone"`
	AccountType AccountType `json:"account_type"`
	// An array of integers representing unique identifier values associated with labels. 
	LabelIds []int32 `json:"label_ids"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
	// The custom properties of the user.
	Custom map[string]interface{} `json:"custom,omitempty"`
	Address NullableAddress `json:"address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountWithIncludes AccountWithIncludes

// NewAccountWithIncludes instantiates a new AccountWithIncludes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountWithIncludes(id int32, name string, email NullableString, phone NullableString, accountType AccountType, labelIds []int32, updatedAt time.Time, createdAt time.Time) *AccountWithIncludes {
	this := AccountWithIncludes{}
	this.Id = id
	this.Name = name
	this.Email = email
	this.Phone = phone
	this.AccountType = accountType
	this.LabelIds = labelIds
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewAccountWithIncludesWithDefaults instantiates a new AccountWithIncludes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithIncludesWithDefaults() *AccountWithIncludes {
	this := AccountWithIncludes{}
	return &this
}

// GetId returns the Id field value
func (o *AccountWithIncludes) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountWithIncludes) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AccountWithIncludes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountWithIncludes) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountWithIncludes) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}

	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountWithIncludes) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// SetEmail sets field value
func (o *AccountWithIncludes) SetEmail(v string) {
	o.Email.Set(&v)
}

// GetPhone returns the Phone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountWithIncludes) GetPhone() string {
	if o == nil || o.Phone.Get() == nil {
		var ret string
		return ret
	}

	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountWithIncludes) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// SetPhone sets field value
func (o *AccountWithIncludes) SetPhone(v string) {
	o.Phone.Set(&v)
}

// GetAccountType returns the AccountType field value
func (o *AccountWithIncludes) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *AccountWithIncludes) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetLabelIds returns the LabelIds field value
func (o *AccountWithIncludes) GetLabelIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetLabelIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *AccountWithIncludes) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *AccountWithIncludes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *AccountWithIncludes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AccountWithIncludes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AccountWithIncludes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *AccountWithIncludes) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountWithIncludes) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *AccountWithIncludes) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *AccountWithIncludes) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountWithIncludes) GetAddress() Address {
	if o == nil || IsNil(o.Address.Get()) {
		var ret Address
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountWithIncludes) GetAddressOk() (*Address, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *AccountWithIncludes) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableAddress and assigns it to the Address field.
func (o *AccountWithIncludes) SetAddress(v Address) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *AccountWithIncludes) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *AccountWithIncludes) UnsetAddress() {
	o.Address.Unset()
}

func (o AccountWithIncludes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountWithIncludes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["email"] = o.Email.Get()
	toSerialize["phone"] = o.Phone.Get()
	toSerialize["account_type"] = o.AccountType
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountWithIncludes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"email",
		"phone",
		"account_type",
		"label_ids",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountWithIncludes := _AccountWithIncludes{}

	err = json.Unmarshal(data, &varAccountWithIncludes)

	if err != nil {
		return err
	}

	*o = AccountWithIncludes(varAccountWithIncludes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "email")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "account_type")
		delete(additionalProperties, "label_ids")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountWithIncludes struct {
	value *AccountWithIncludes
	isSet bool
}

func (v NullableAccountWithIncludes) Get() *AccountWithIncludes {
	return v.value
}

func (v *NullableAccountWithIncludes) Set(val *AccountWithIncludes) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountWithIncludes) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountWithIncludes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountWithIncludes(val *AccountWithIncludes) *NullableAccountWithIncludes {
	return &NullableAccountWithIncludes{value: val, isSet: true}
}

func (v NullableAccountWithIncludes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountWithIncludes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


