/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the AddLabelToOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddLabelToOrderRequest{}

// AddLabelToOrderRequest struct for AddLabelToOrderRequest
type AddLabelToOrderRequest struct {
	// Unique identifier of the label.
	LabelId int32 `json:"label_id"`
	AdditionalProperties map[string]interface{}
}

type _AddLabelToOrderRequest AddLabelToOrderRequest

// NewAddLabelToOrderRequest instantiates a new AddLabelToOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddLabelToOrderRequest(labelId int32) *AddLabelToOrderRequest {
	this := AddLabelToOrderRequest{}
	this.LabelId = labelId
	return &this
}

// NewAddLabelToOrderRequestWithDefaults instantiates a new AddLabelToOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddLabelToOrderRequestWithDefaults() *AddLabelToOrderRequest {
	this := AddLabelToOrderRequest{}
	return &this
}

// GetLabelId returns the LabelId field value
func (o *AddLabelToOrderRequest) GetLabelId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LabelId
}

// GetLabelIdOk returns a tuple with the LabelId field value
// and a boolean to check if the value has been set.
func (o *AddLabelToOrderRequest) GetLabelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelId, true
}

// SetLabelId sets field value
func (o *AddLabelToOrderRequest) SetLabelId(v int32) {
	o.LabelId = v
}

func (o AddLabelToOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddLabelToOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label_id"] = o.LabelId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddLabelToOrderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddLabelToOrderRequest := _AddLabelToOrderRequest{}

	err = json.Unmarshal(data, &varAddLabelToOrderRequest)

	if err != nil {
		return err
	}

	*o = AddLabelToOrderRequest(varAddLabelToOrderRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddLabelToOrderRequest struct {
	value *AddLabelToOrderRequest
	isSet bool
}

func (v NullableAddLabelToOrderRequest) Get() *AddLabelToOrderRequest {
	return v.value
}

func (v *NullableAddLabelToOrderRequest) Set(val *AddLabelToOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLabelToOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLabelToOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLabelToOrderRequest(val *AddLabelToOrderRequest) *NullableAddLabelToOrderRequest {
	return &NullableAddLabelToOrderRequest{value: val, isSet: true}
}

func (v NullableAddLabelToOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLabelToOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


