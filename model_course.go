/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Course type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Course{}

// Course struct for Course
type Course struct {
	// Unique identifier of the course
	Id int32 `json:"id"`
	// Sorting position of the course. Lower is higher.
	Position int32 `json:"position"`
	// Lowest price of all of its planned courses.
	StartingPrice string `json:"starting_price"`
	// URL to the signup page for this course.
	SignupUrl string `json:"signup_url"`
	// Human readable identifier, unique per educator.
	Slug string `json:"slug"`
	// List of old slugs, old calls will be redirected.
	SlugHistory []string `json:"slug_history"`
	// URL to the original avatar image file.
	Avatar string `json:"avatar"`
	// URL to a resized avatar image (300x200^).
	AvatarUrl string `json:"avatar_url"`
	// URL to a resized avatar image (748x296^).
	AvatarThumbUrl string `json:"avatar_thumb_url"`
	// Conditions for this course with a fallback to the default course conditions of the educator.
	ConditionsOrDefault NullableString `json:"conditions_or_default"`
	// Expected URL of the course on the educator website.
	WebsiteUrl NullableString `json:"website_url"`
	// Identifier of the optionally linked certificate template.
	CertificateTemplateId NullableInt32 `json:"certificate_template_id"`
	// Identifier of the category of the course.
	CategoryId int32 `json:"category_id"`
	// The name of the course.
	Name string `json:"name"`
	// The code of the course.
	Code string `json:"code"`
	// The duration of the course.
	Duration NullableString `json:"duration,omitempty"`
	// A string indicating the level of the course.
	Level NullableString `json:"level,omitempty"`
	// Meta title of the course for SEO purposes.
	MetaTitle NullableString `json:"meta_title"`
	// Meta description of the course for SEO purposes.
	MetaDescription NullableString `json:"meta_description"`
	// The result of the course
	Result NullableString `json:"result,omitempty"`
	// An array of integers representing unique identifier values associated with labels. 
	LabelIds []int32 `json:"label_ids"`
	// The price to be paid for this course.
	Cost NullableString `json:"cost"`
	CostScheme CostScheme `json:"cost_scheme"`
	// Boolean representing the publishable status of the course.
	IsPublished bool `json:"is_published"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _Course Course

// NewCourse instantiates a new Course object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCourse(id int32, position int32, startingPrice string, signupUrl string, slug string, slugHistory []string, avatar string, avatarUrl string, avatarThumbUrl string, conditionsOrDefault NullableString, websiteUrl NullableString, certificateTemplateId NullableInt32, categoryId int32, name string, code string, metaTitle NullableString, metaDescription NullableString, labelIds []int32, cost NullableString, costScheme CostScheme, isPublished bool, updatedAt time.Time, createdAt time.Time) *Course {
	this := Course{}
	this.Id = id
	this.Position = position
	this.StartingPrice = startingPrice
	this.SignupUrl = signupUrl
	this.Slug = slug
	this.SlugHistory = slugHistory
	this.Avatar = avatar
	this.AvatarUrl = avatarUrl
	this.AvatarThumbUrl = avatarThumbUrl
	this.ConditionsOrDefault = conditionsOrDefault
	this.WebsiteUrl = websiteUrl
	this.CertificateTemplateId = certificateTemplateId
	this.CategoryId = categoryId
	this.Name = name
	this.Code = code
	this.MetaTitle = metaTitle
	this.MetaDescription = metaDescription
	this.LabelIds = labelIds
	this.Cost = cost
	this.CostScheme = costScheme
	this.IsPublished = isPublished
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewCourseWithDefaults instantiates a new Course object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCourseWithDefaults() *Course {
	this := Course{}
	return &this
}

// GetId returns the Id field value
func (o *Course) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Course) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Course) SetId(v int32) {
	o.Id = v
}

// GetPosition returns the Position field value
func (o *Course) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *Course) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *Course) SetPosition(v int32) {
	o.Position = v
}

// GetStartingPrice returns the StartingPrice field value
func (o *Course) GetStartingPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartingPrice
}

// GetStartingPriceOk returns a tuple with the StartingPrice field value
// and a boolean to check if the value has been set.
func (o *Course) GetStartingPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartingPrice, true
}

// SetStartingPrice sets field value
func (o *Course) SetStartingPrice(v string) {
	o.StartingPrice = v
}

// GetSignupUrl returns the SignupUrl field value
func (o *Course) GetSignupUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignupUrl
}

// GetSignupUrlOk returns a tuple with the SignupUrl field value
// and a boolean to check if the value has been set.
func (o *Course) GetSignupUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignupUrl, true
}

// SetSignupUrl sets field value
func (o *Course) SetSignupUrl(v string) {
	o.SignupUrl = v
}

// GetSlug returns the Slug field value
func (o *Course) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *Course) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *Course) SetSlug(v string) {
	o.Slug = v
}

// GetSlugHistory returns the SlugHistory field value
func (o *Course) GetSlugHistory() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SlugHistory
}

// GetSlugHistoryOk returns a tuple with the SlugHistory field value
// and a boolean to check if the value has been set.
func (o *Course) GetSlugHistoryOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SlugHistory, true
}

// SetSlugHistory sets field value
func (o *Course) SetSlugHistory(v []string) {
	o.SlugHistory = v
}

// GetAvatar returns the Avatar field value
func (o *Course) GetAvatar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value
// and a boolean to check if the value has been set.
func (o *Course) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Avatar, true
}

// SetAvatar sets field value
func (o *Course) SetAvatar(v string) {
	o.Avatar = v
}

// GetAvatarUrl returns the AvatarUrl field value
func (o *Course) GetAvatarUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value
// and a boolean to check if the value has been set.
func (o *Course) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvatarUrl, true
}

// SetAvatarUrl sets field value
func (o *Course) SetAvatarUrl(v string) {
	o.AvatarUrl = v
}

// GetAvatarThumbUrl returns the AvatarThumbUrl field value
func (o *Course) GetAvatarThumbUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvatarThumbUrl
}

// GetAvatarThumbUrlOk returns a tuple with the AvatarThumbUrl field value
// and a boolean to check if the value has been set.
func (o *Course) GetAvatarThumbUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvatarThumbUrl, true
}

// SetAvatarThumbUrl sets field value
func (o *Course) SetAvatarThumbUrl(v string) {
	o.AvatarThumbUrl = v
}

// GetConditionsOrDefault returns the ConditionsOrDefault field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Course) GetConditionsOrDefault() string {
	if o == nil || o.ConditionsOrDefault.Get() == nil {
		var ret string
		return ret
	}

	return *o.ConditionsOrDefault.Get()
}

// GetConditionsOrDefaultOk returns a tuple with the ConditionsOrDefault field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetConditionsOrDefaultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConditionsOrDefault.Get(), o.ConditionsOrDefault.IsSet()
}

// SetConditionsOrDefault sets field value
func (o *Course) SetConditionsOrDefault(v string) {
	o.ConditionsOrDefault.Set(&v)
}

// GetWebsiteUrl returns the WebsiteUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Course) GetWebsiteUrl() string {
	if o == nil || o.WebsiteUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.WebsiteUrl.Get()
}

// GetWebsiteUrlOk returns a tuple with the WebsiteUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetWebsiteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WebsiteUrl.Get(), o.WebsiteUrl.IsSet()
}

// SetWebsiteUrl sets field value
func (o *Course) SetWebsiteUrl(v string) {
	o.WebsiteUrl.Set(&v)
}

// GetCertificateTemplateId returns the CertificateTemplateId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Course) GetCertificateTemplateId() int32 {
	if o == nil || o.CertificateTemplateId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CertificateTemplateId.Get()
}

// GetCertificateTemplateIdOk returns a tuple with the CertificateTemplateId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetCertificateTemplateIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateTemplateId.Get(), o.CertificateTemplateId.IsSet()
}

// SetCertificateTemplateId sets field value
func (o *Course) SetCertificateTemplateId(v int32) {
	o.CertificateTemplateId.Set(&v)
}

// GetCategoryId returns the CategoryId field value
func (o *Course) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *Course) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *Course) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetName returns the Name field value
func (o *Course) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Course) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Course) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value
func (o *Course) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *Course) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *Course) SetCode(v string) {
	o.Code = v
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Course) GetDuration() string {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret string
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *Course) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableString and assigns it to the Duration field.
func (o *Course) SetDuration(v string) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *Course) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *Course) UnsetDuration() {
	o.Duration.Unset()
}

// GetLevel returns the Level field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Course) GetLevel() string {
	if o == nil || IsNil(o.Level.Get()) {
		var ret string
		return ret
	}
	return *o.Level.Get()
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Level.Get(), o.Level.IsSet()
}

// HasLevel returns a boolean if a field has been set.
func (o *Course) HasLevel() bool {
	if o != nil && o.Level.IsSet() {
		return true
	}

	return false
}

// SetLevel gets a reference to the given NullableString and assigns it to the Level field.
func (o *Course) SetLevel(v string) {
	o.Level.Set(&v)
}
// SetLevelNil sets the value for Level to be an explicit nil
func (o *Course) SetLevelNil() {
	o.Level.Set(nil)
}

// UnsetLevel ensures that no value is present for Level, not even an explicit nil
func (o *Course) UnsetLevel() {
	o.Level.Unset()
}

// GetMetaTitle returns the MetaTitle field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Course) GetMetaTitle() string {
	if o == nil || o.MetaTitle.Get() == nil {
		var ret string
		return ret
	}

	return *o.MetaTitle.Get()
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetMetaTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaTitle.Get(), o.MetaTitle.IsSet()
}

// SetMetaTitle sets field value
func (o *Course) SetMetaTitle(v string) {
	o.MetaTitle.Set(&v)
}

// GetMetaDescription returns the MetaDescription field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Course) GetMetaDescription() string {
	if o == nil || o.MetaDescription.Get() == nil {
		var ret string
		return ret
	}

	return *o.MetaDescription.Get()
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaDescription.Get(), o.MetaDescription.IsSet()
}

// SetMetaDescription sets field value
func (o *Course) SetMetaDescription(v string) {
	o.MetaDescription.Set(&v)
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Course) GetResult() string {
	if o == nil || IsNil(o.Result.Get()) {
		var ret string
		return ret
	}
	return *o.Result.Get()
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result.Get(), o.Result.IsSet()
}

// HasResult returns a boolean if a field has been set.
func (o *Course) HasResult() bool {
	if o != nil && o.Result.IsSet() {
		return true
	}

	return false
}

// SetResult gets a reference to the given NullableString and assigns it to the Result field.
func (o *Course) SetResult(v string) {
	o.Result.Set(&v)
}
// SetResultNil sets the value for Result to be an explicit nil
func (o *Course) SetResultNil() {
	o.Result.Set(nil)
}

// UnsetResult ensures that no value is present for Result, not even an explicit nil
func (o *Course) UnsetResult() {
	o.Result.Unset()
}

// GetLabelIds returns the LabelIds field value
func (o *Course) GetLabelIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *Course) GetLabelIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *Course) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetCost returns the Cost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Course) GetCost() string {
	if o == nil || o.Cost.Get() == nil {
		var ret string
		return ret
	}

	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Course) GetCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// SetCost sets field value
func (o *Course) SetCost(v string) {
	o.Cost.Set(&v)
}

// GetCostScheme returns the CostScheme field value
func (o *Course) GetCostScheme() CostScheme {
	if o == nil {
		var ret CostScheme
		return ret
	}

	return o.CostScheme
}

// GetCostSchemeOk returns a tuple with the CostScheme field value
// and a boolean to check if the value has been set.
func (o *Course) GetCostSchemeOk() (*CostScheme, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostScheme, true
}

// SetCostScheme sets field value
func (o *Course) SetCostScheme(v CostScheme) {
	o.CostScheme = v
}

// GetIsPublished returns the IsPublished field value
func (o *Course) GetIsPublished() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value
// and a boolean to check if the value has been set.
func (o *Course) GetIsPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublished, true
}

// SetIsPublished sets field value
func (o *Course) SetIsPublished(v bool) {
	o.IsPublished = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Course) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Course) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Course) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Course) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Course) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Course) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Course) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Course) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["position"] = o.Position
	toSerialize["starting_price"] = o.StartingPrice
	toSerialize["signup_url"] = o.SignupUrl
	toSerialize["slug"] = o.Slug
	toSerialize["slug_history"] = o.SlugHistory
	toSerialize["avatar"] = o.Avatar
	toSerialize["avatar_url"] = o.AvatarUrl
	toSerialize["avatar_thumb_url"] = o.AvatarThumbUrl
	toSerialize["conditions_or_default"] = o.ConditionsOrDefault.Get()
	toSerialize["website_url"] = o.WebsiteUrl.Get()
	toSerialize["certificate_template_id"] = o.CertificateTemplateId.Get()
	toSerialize["category_id"] = o.CategoryId
	toSerialize["name"] = o.Name
	toSerialize["code"] = o.Code
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.Level.IsSet() {
		toSerialize["level"] = o.Level.Get()
	}
	toSerialize["meta_title"] = o.MetaTitle.Get()
	toSerialize["meta_description"] = o.MetaDescription.Get()
	if o.Result.IsSet() {
		toSerialize["result"] = o.Result.Get()
	}
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["cost"] = o.Cost.Get()
	toSerialize["cost_scheme"] = o.CostScheme
	toSerialize["is_published"] = o.IsPublished
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *Course) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"position",
		"starting_price",
		"signup_url",
		"slug",
		"slug_history",
		"avatar",
		"avatar_url",
		"avatar_thumb_url",
		"conditions_or_default",
		"website_url",
		"certificate_template_id",
		"category_id",
		"name",
		"code",
		"meta_title",
		"meta_description",
		"label_ids",
		"cost",
		"cost_scheme",
		"is_published",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCourse := _Course{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCourse)

	if err != nil {
		return err
	}

	*o = Course(varCourse)

	return err
}

type NullableCourse struct {
	value *Course
	isSet bool
}

func (v NullableCourse) Get() *Course {
	return v.value
}

func (v *NullableCourse) Set(val *Course) {
	v.value = val
	v.isSet = true
}

func (v NullableCourse) IsSet() bool {
	return v.isSet
}

func (v *NullableCourse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCourse(val *Course) *NullableCourse {
	return &NullableCourse{value: val, isSet: true}
}

func (v NullableCourse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCourse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


