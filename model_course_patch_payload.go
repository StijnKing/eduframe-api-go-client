/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the CoursePatchPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoursePatchPayload{}

// CoursePatchPayload struct for CoursePatchPayload
type CoursePatchPayload struct {
	// Identifier of the category of the course.
	CategoryId *int32 `json:"category_id,omitempty"`
	// The name of the course.
	Name *string `json:"name,omitempty"`
	// The code of the course.
	Code *string `json:"code,omitempty"`
	// The duration of the course.
	Duration NullableString `json:"duration,omitempty"`
	// A string indicating the level of the course.
	Level NullableString `json:"level,omitempty"`
	// Meta title of the course for SEO purposes.
	MetaTitle NullableString `json:"meta_title,omitempty"`
	// Meta description of the course for SEO purposes.
	MetaDescription NullableString `json:"meta_description,omitempty"`
	// The result of the course
	Result NullableString `json:"result,omitempty"`
	// The price to be paid for this course.
	Cost NullableString `json:"cost,omitempty"`
	// How should the course be paid by default.
	CostScheme *string `json:"cost_scheme,omitempty"`
	// Boolean representing the publishable status of the course.
	IsPublished *bool `json:"is_published,omitempty"`
	// The conditions of the course.
	Conditions *string `json:"conditions,omitempty"`
	// The custom properties of the program.
	Custom map[string]interface{} `json:"custom,omitempty"`
	// The new set of custom records linked to a course.  ![Custom Objects](https://img.shields.io/badge/Feature-Custom_objects-1d8127) 
	CustomAssociations []CustomAssociationsRecordsPayload `json:"custom_associations,omitempty"`
	CourseTabContentsAttributes []CoursePatchPayloadCourseTabContentsAttributesInner `json:"course_tab_contents_attributes,omitempty"`
}

// NewCoursePatchPayload instantiates a new CoursePatchPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoursePatchPayload() *CoursePatchPayload {
	this := CoursePatchPayload{}
	return &this
}

// NewCoursePatchPayloadWithDefaults instantiates a new CoursePatchPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoursePatchPayloadWithDefaults() *CoursePatchPayload {
	this := CoursePatchPayload{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetCategoryId() int32 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int32
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int32 and assigns it to the CategoryId field.
func (o *CoursePatchPayload) SetCategoryId(v int32) {
	o.CategoryId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoursePatchPayload) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CoursePatchPayload) SetCode(v string) {
	o.Code = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CoursePatchPayload) GetDuration() string {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret string
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoursePatchPayload) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableString and assigns it to the Duration field.
func (o *CoursePatchPayload) SetDuration(v string) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *CoursePatchPayload) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *CoursePatchPayload) UnsetDuration() {
	o.Duration.Unset()
}

// GetLevel returns the Level field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CoursePatchPayload) GetLevel() string {
	if o == nil || IsNil(o.Level.Get()) {
		var ret string
		return ret
	}
	return *o.Level.Get()
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoursePatchPayload) GetLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Level.Get(), o.Level.IsSet()
}

// HasLevel returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasLevel() bool {
	if o != nil && o.Level.IsSet() {
		return true
	}

	return false
}

// SetLevel gets a reference to the given NullableString and assigns it to the Level field.
func (o *CoursePatchPayload) SetLevel(v string) {
	o.Level.Set(&v)
}
// SetLevelNil sets the value for Level to be an explicit nil
func (o *CoursePatchPayload) SetLevelNil() {
	o.Level.Set(nil)
}

// UnsetLevel ensures that no value is present for Level, not even an explicit nil
func (o *CoursePatchPayload) UnsetLevel() {
	o.Level.Unset()
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CoursePatchPayload) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle.Get()) {
		var ret string
		return ret
	}
	return *o.MetaTitle.Get()
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoursePatchPayload) GetMetaTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaTitle.Get(), o.MetaTitle.IsSet()
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasMetaTitle() bool {
	if o != nil && o.MetaTitle.IsSet() {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given NullableString and assigns it to the MetaTitle field.
func (o *CoursePatchPayload) SetMetaTitle(v string) {
	o.MetaTitle.Set(&v)
}
// SetMetaTitleNil sets the value for MetaTitle to be an explicit nil
func (o *CoursePatchPayload) SetMetaTitleNil() {
	o.MetaTitle.Set(nil)
}

// UnsetMetaTitle ensures that no value is present for MetaTitle, not even an explicit nil
func (o *CoursePatchPayload) UnsetMetaTitle() {
	o.MetaTitle.Unset()
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CoursePatchPayload) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetaDescription.Get()
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoursePatchPayload) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaDescription.Get(), o.MetaDescription.IsSet()
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasMetaDescription() bool {
	if o != nil && o.MetaDescription.IsSet() {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given NullableString and assigns it to the MetaDescription field.
func (o *CoursePatchPayload) SetMetaDescription(v string) {
	o.MetaDescription.Set(&v)
}
// SetMetaDescriptionNil sets the value for MetaDescription to be an explicit nil
func (o *CoursePatchPayload) SetMetaDescriptionNil() {
	o.MetaDescription.Set(nil)
}

// UnsetMetaDescription ensures that no value is present for MetaDescription, not even an explicit nil
func (o *CoursePatchPayload) UnsetMetaDescription() {
	o.MetaDescription.Unset()
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CoursePatchPayload) GetResult() string {
	if o == nil || IsNil(o.Result.Get()) {
		var ret string
		return ret
	}
	return *o.Result.Get()
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoursePatchPayload) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result.Get(), o.Result.IsSet()
}

// HasResult returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasResult() bool {
	if o != nil && o.Result.IsSet() {
		return true
	}

	return false
}

// SetResult gets a reference to the given NullableString and assigns it to the Result field.
func (o *CoursePatchPayload) SetResult(v string) {
	o.Result.Set(&v)
}
// SetResultNil sets the value for Result to be an explicit nil
func (o *CoursePatchPayload) SetResultNil() {
	o.Result.Set(nil)
}

// UnsetResult ensures that no value is present for Result, not even an explicit nil
func (o *CoursePatchPayload) UnsetResult() {
	o.Result.Unset()
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CoursePatchPayload) GetCost() string {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret string
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CoursePatchPayload) GetCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableString and assigns it to the Cost field.
func (o *CoursePatchPayload) SetCost(v string) {
	o.Cost.Set(&v)
}
// SetCostNil sets the value for Cost to be an explicit nil
func (o *CoursePatchPayload) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *CoursePatchPayload) UnsetCost() {
	o.Cost.Unset()
}

// GetCostScheme returns the CostScheme field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetCostScheme() string {
	if o == nil || IsNil(o.CostScheme) {
		var ret string
		return ret
	}
	return *o.CostScheme
}

// GetCostSchemeOk returns a tuple with the CostScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetCostSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.CostScheme) {
		return nil, false
	}
	return o.CostScheme, true
}

// HasCostScheme returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCostScheme() bool {
	if o != nil && !IsNil(o.CostScheme) {
		return true
	}

	return false
}

// SetCostScheme gets a reference to the given string and assigns it to the CostScheme field.
func (o *CoursePatchPayload) SetCostScheme(v string) {
	o.CostScheme = &v
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetIsPublished() bool {
	if o == nil || IsNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetIsPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublished) {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasIsPublished() bool {
	if o != nil && !IsNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *CoursePatchPayload) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetConditions() string {
	if o == nil || IsNil(o.Conditions) {
		var ret string
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetConditionsOk() (*string, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given string and assigns it to the Conditions field.
func (o *CoursePatchPayload) SetConditions(v string) {
	o.Conditions = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *CoursePatchPayload) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetCustomAssociations returns the CustomAssociations field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetCustomAssociations() []CustomAssociationsRecordsPayload {
	if o == nil || IsNil(o.CustomAssociations) {
		var ret []CustomAssociationsRecordsPayload
		return ret
	}
	return o.CustomAssociations
}

// GetCustomAssociationsOk returns a tuple with the CustomAssociations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetCustomAssociationsOk() ([]CustomAssociationsRecordsPayload, bool) {
	if o == nil || IsNil(o.CustomAssociations) {
		return nil, false
	}
	return o.CustomAssociations, true
}

// HasCustomAssociations returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCustomAssociations() bool {
	if o != nil && !IsNil(o.CustomAssociations) {
		return true
	}

	return false
}

// SetCustomAssociations gets a reference to the given []CustomAssociationsRecordsPayload and assigns it to the CustomAssociations field.
func (o *CoursePatchPayload) SetCustomAssociations(v []CustomAssociationsRecordsPayload) {
	o.CustomAssociations = v
}

// GetCourseTabContentsAttributes returns the CourseTabContentsAttributes field value if set, zero value otherwise.
func (o *CoursePatchPayload) GetCourseTabContentsAttributes() []CoursePatchPayloadCourseTabContentsAttributesInner {
	if o == nil || IsNil(o.CourseTabContentsAttributes) {
		var ret []CoursePatchPayloadCourseTabContentsAttributesInner
		return ret
	}
	return o.CourseTabContentsAttributes
}

// GetCourseTabContentsAttributesOk returns a tuple with the CourseTabContentsAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoursePatchPayload) GetCourseTabContentsAttributesOk() ([]CoursePatchPayloadCourseTabContentsAttributesInner, bool) {
	if o == nil || IsNil(o.CourseTabContentsAttributes) {
		return nil, false
	}
	return o.CourseTabContentsAttributes, true
}

// HasCourseTabContentsAttributes returns a boolean if a field has been set.
func (o *CoursePatchPayload) HasCourseTabContentsAttributes() bool {
	if o != nil && !IsNil(o.CourseTabContentsAttributes) {
		return true
	}

	return false
}

// SetCourseTabContentsAttributes gets a reference to the given []CoursePatchPayloadCourseTabContentsAttributesInner and assigns it to the CourseTabContentsAttributes field.
func (o *CoursePatchPayload) SetCourseTabContentsAttributes(v []CoursePatchPayloadCourseTabContentsAttributesInner) {
	o.CourseTabContentsAttributes = v
}

func (o CoursePatchPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoursePatchPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.Level.IsSet() {
		toSerialize["level"] = o.Level.Get()
	}
	if o.MetaTitle.IsSet() {
		toSerialize["meta_title"] = o.MetaTitle.Get()
	}
	if o.MetaDescription.IsSet() {
		toSerialize["meta_description"] = o.MetaDescription.Get()
	}
	if o.Result.IsSet() {
		toSerialize["result"] = o.Result.Get()
	}
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	if !IsNil(o.CostScheme) {
		toSerialize["cost_scheme"] = o.CostScheme
	}
	if !IsNil(o.IsPublished) {
		toSerialize["is_published"] = o.IsPublished
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.CustomAssociations) {
		toSerialize["custom_associations"] = o.CustomAssociations
	}
	if !IsNil(o.CourseTabContentsAttributes) {
		toSerialize["course_tab_contents_attributes"] = o.CourseTabContentsAttributes
	}
	return toSerialize, nil
}

type NullableCoursePatchPayload struct {
	value *CoursePatchPayload
	isSet bool
}

func (v NullableCoursePatchPayload) Get() *CoursePatchPayload {
	return v.value
}

func (v *NullableCoursePatchPayload) Set(val *CoursePatchPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCoursePatchPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCoursePatchPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoursePatchPayload(val *CoursePatchPayload) *NullableCoursePatchPayload {
	return &NullableCoursePatchPayload{value: val, isSet: true}
}

func (v NullableCoursePatchPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoursePatchPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


