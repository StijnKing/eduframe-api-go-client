/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAccountRequest{}

// CreateAccountRequest struct for CreateAccountRequest
type CreateAccountRequest struct {
	// Arbitrary string representing the name of the account. Is autogenerated for personal accounts.
	Name string `json:"name"`
	// A string representing the billing e-mail of the account
	Email NullableString `json:"email,omitempty"`
	// A string representing the phone number of the account
	Phone NullableString `json:"phone,omitempty"`
	// IDs of the labels
	LabelIds []int32 `json:"label_ids,omitempty"`
	// The custom properties of the account.
	Custom map[string]interface{} `json:"custom,omitempty"`
	AddressAttributes NullableAddressPayload `json:"address_attributes,omitempty"`
	SignupAnswersAttributes []CreateAccountRequestSignupAnswersAttributesInner `json:"signup_answers_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAccountRequest CreateAccountRequest

// NewCreateAccountRequest instantiates a new CreateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccountRequest(name string) *CreateAccountRequest {
	this := CreateAccountRequest{}
	this.Name = name
	return &this
}

// NewCreateAccountRequestWithDefaults instantiates a new CreateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccountRequestWithDefaults() *CreateAccountRequest {
	this := CreateAccountRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAccountRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAccountRequest) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccountRequest) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccountRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *CreateAccountRequest) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *CreateAccountRequest) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *CreateAccountRequest) UnsetEmail() {
	o.Email.Unset()
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccountRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccountRequest) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *CreateAccountRequest) SetPhone(v string) {
	o.Phone.Set(&v)
}
// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *CreateAccountRequest) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *CreateAccountRequest) UnsetPhone() {
	o.Phone.Unset()
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetLabelIds() []int32 {
	if o == nil || IsNil(o.LabelIds) {
		var ret []int32
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetLabelIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.LabelIds) {
		return nil, false
	}
	return o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasLabelIds() bool {
	if o != nil && !IsNil(o.LabelIds) {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given []int32 and assigns it to the LabelIds field.
func (o *CreateAccountRequest) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *CreateAccountRequest) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetAddressAttributes returns the AddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccountRequest) GetAddressAttributes() AddressPayload {
	if o == nil || IsNil(o.AddressAttributes.Get()) {
		var ret AddressPayload
		return ret
	}
	return *o.AddressAttributes.Get()
}

// GetAddressAttributesOk returns a tuple with the AddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccountRequest) GetAddressAttributesOk() (*AddressPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressAttributes.Get(), o.AddressAttributes.IsSet()
}

// HasAddressAttributes returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasAddressAttributes() bool {
	if o != nil && o.AddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetAddressAttributes gets a reference to the given NullableAddressPayload and assigns it to the AddressAttributes field.
func (o *CreateAccountRequest) SetAddressAttributes(v AddressPayload) {
	o.AddressAttributes.Set(&v)
}
// SetAddressAttributesNil sets the value for AddressAttributes to be an explicit nil
func (o *CreateAccountRequest) SetAddressAttributesNil() {
	o.AddressAttributes.Set(nil)
}

// UnsetAddressAttributes ensures that no value is present for AddressAttributes, not even an explicit nil
func (o *CreateAccountRequest) UnsetAddressAttributes() {
	o.AddressAttributes.Unset()
}

// GetSignupAnswersAttributes returns the SignupAnswersAttributes field value if set, zero value otherwise.
func (o *CreateAccountRequest) GetSignupAnswersAttributes() []CreateAccountRequestSignupAnswersAttributesInner {
	if o == nil || IsNil(o.SignupAnswersAttributes) {
		var ret []CreateAccountRequestSignupAnswersAttributesInner
		return ret
	}
	return o.SignupAnswersAttributes
}

// GetSignupAnswersAttributesOk returns a tuple with the SignupAnswersAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccountRequest) GetSignupAnswersAttributesOk() ([]CreateAccountRequestSignupAnswersAttributesInner, bool) {
	if o == nil || IsNil(o.SignupAnswersAttributes) {
		return nil, false
	}
	return o.SignupAnswersAttributes, true
}

// HasSignupAnswersAttributes returns a boolean if a field has been set.
func (o *CreateAccountRequest) HasSignupAnswersAttributes() bool {
	if o != nil && !IsNil(o.SignupAnswersAttributes) {
		return true
	}

	return false
}

// SetSignupAnswersAttributes gets a reference to the given []CreateAccountRequestSignupAnswersAttributesInner and assigns it to the SignupAnswersAttributes field.
func (o *CreateAccountRequest) SetSignupAnswersAttributes(v []CreateAccountRequestSignupAnswersAttributesInner) {
	o.SignupAnswersAttributes = v
}

func (o CreateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}
	if !IsNil(o.LabelIds) {
		toSerialize["label_ids"] = o.LabelIds
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if o.AddressAttributes.IsSet() {
		toSerialize["address_attributes"] = o.AddressAttributes.Get()
	}
	if !IsNil(o.SignupAnswersAttributes) {
		toSerialize["signup_answers_attributes"] = o.SignupAnswersAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAccountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAccountRequest := _CreateAccountRequest{}

	err = json.Unmarshal(data, &varCreateAccountRequest)

	if err != nil {
		return err
	}

	*o = CreateAccountRequest(varCreateAccountRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "email")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "label_ids")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "address_attributes")
		delete(additionalProperties, "signup_answers_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAccountRequest struct {
	value *CreateAccountRequest
	isSet bool
}

func (v NullableCreateAccountRequest) Get() *CreateAccountRequest {
	return v.value
}

func (v *NullableCreateAccountRequest) Set(val *CreateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccountRequest(val *CreateAccountRequest) *NullableCreateAccountRequest {
	return &NullableCreateAccountRequest{value: val, isSet: true}
}

func (v NullableCreateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


