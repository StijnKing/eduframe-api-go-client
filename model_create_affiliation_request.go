/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAffiliationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAffiliationRequest{}

// CreateAffiliationRequest struct for CreateAffiliationRequest
type CreateAffiliationRequest struct {
	// Unique identifier of the associated user
	UserId int32 `json:"user_id"`
	// Unique identifier of the associated account
	AccountId int32 `json:"account_id"`
	// Boolean indicating if this user is a key contact of the account.
	KeyContact *bool `json:"key_contact,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAffiliationRequest CreateAffiliationRequest

// NewCreateAffiliationRequest instantiates a new CreateAffiliationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAffiliationRequest(userId int32, accountId int32) *CreateAffiliationRequest {
	this := CreateAffiliationRequest{}
	this.UserId = userId
	this.AccountId = accountId
	var keyContact bool = false
	this.KeyContact = &keyContact
	return &this
}

// NewCreateAffiliationRequestWithDefaults instantiates a new CreateAffiliationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAffiliationRequestWithDefaults() *CreateAffiliationRequest {
	this := CreateAffiliationRequest{}
	var keyContact bool = false
	this.KeyContact = &keyContact
	return &this
}

// GetUserId returns the UserId field value
func (o *CreateAffiliationRequest) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CreateAffiliationRequest) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CreateAffiliationRequest) SetUserId(v int32) {
	o.UserId = v
}

// GetAccountId returns the AccountId field value
func (o *CreateAffiliationRequest) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CreateAffiliationRequest) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CreateAffiliationRequest) SetAccountId(v int32) {
	o.AccountId = v
}

// GetKeyContact returns the KeyContact field value if set, zero value otherwise.
func (o *CreateAffiliationRequest) GetKeyContact() bool {
	if o == nil || IsNil(o.KeyContact) {
		var ret bool
		return ret
	}
	return *o.KeyContact
}

// GetKeyContactOk returns a tuple with the KeyContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAffiliationRequest) GetKeyContactOk() (*bool, bool) {
	if o == nil || IsNil(o.KeyContact) {
		return nil, false
	}
	return o.KeyContact, true
}

// HasKeyContact returns a boolean if a field has been set.
func (o *CreateAffiliationRequest) HasKeyContact() bool {
	if o != nil && !IsNil(o.KeyContact) {
		return true
	}

	return false
}

// SetKeyContact gets a reference to the given bool and assigns it to the KeyContact field.
func (o *CreateAffiliationRequest) SetKeyContact(v bool) {
	o.KeyContact = &v
}

func (o CreateAffiliationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAffiliationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["account_id"] = o.AccountId
	if !IsNil(o.KeyContact) {
		toSerialize["key_contact"] = o.KeyContact
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAffiliationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
		"account_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAffiliationRequest := _CreateAffiliationRequest{}

	err = json.Unmarshal(data, &varCreateAffiliationRequest)

	if err != nil {
		return err
	}

	*o = CreateAffiliationRequest(varCreateAffiliationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "key_contact")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAffiliationRequest struct {
	value *CreateAffiliationRequest
	isSet bool
}

func (v NullableCreateAffiliationRequest) Get() *CreateAffiliationRequest {
	return v.value
}

func (v *NullableCreateAffiliationRequest) Set(val *CreateAffiliationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAffiliationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAffiliationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAffiliationRequest(val *CreateAffiliationRequest) *NullableCreateAffiliationRequest {
	return &NullableCreateAffiliationRequest{value: val, isSet: true}
}

func (v NullableCreateAffiliationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAffiliationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


