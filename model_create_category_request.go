/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateCategoryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCategoryRequest{}

// CreateCategoryRequest struct for CreateCategoryRequest
type CreateCategoryRequest struct {
	// Title of the category.
	Name string `json:"name"`
	// The description of the category.
	Description NullableString `json:"description,omitempty"`
	// Boolean if the category is published on the website.
	IsPublished *bool `json:"is_published,omitempty"`
	// The meta title of the category, used for SEO (Search Engine Optimisation) purposes.
	MetaTitle NullableString `json:"meta_title,omitempty"`
	// The meta description of the category, used for SEO (Search Engine Optimisation) purposes.
	MetaDescription NullableString `json:"meta_description,omitempty"`
	// Unique identifier of the parent category
	ParentId NullableInt32 `json:"parent_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateCategoryRequest CreateCategoryRequest

// NewCreateCategoryRequest instantiates a new CreateCategoryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCategoryRequest(name string) *CreateCategoryRequest {
	this := CreateCategoryRequest{}
	this.Name = name
	return &this
}

// NewCreateCategoryRequestWithDefaults instantiates a new CreateCategoryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCategoryRequestWithDefaults() *CreateCategoryRequest {
	this := CreateCategoryRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateCategoryRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCategoryRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCategoryRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCategoryRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCategoryRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateCategoryRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateCategoryRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateCategoryRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateCategoryRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *CreateCategoryRequest) GetIsPublished() bool {
	if o == nil || IsNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCategoryRequest) GetIsPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublished) {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *CreateCategoryRequest) HasIsPublished() bool {
	if o != nil && !IsNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *CreateCategoryRequest) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCategoryRequest) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle.Get()) {
		var ret string
		return ret
	}
	return *o.MetaTitle.Get()
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCategoryRequest) GetMetaTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaTitle.Get(), o.MetaTitle.IsSet()
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *CreateCategoryRequest) HasMetaTitle() bool {
	if o != nil && o.MetaTitle.IsSet() {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given NullableString and assigns it to the MetaTitle field.
func (o *CreateCategoryRequest) SetMetaTitle(v string) {
	o.MetaTitle.Set(&v)
}
// SetMetaTitleNil sets the value for MetaTitle to be an explicit nil
func (o *CreateCategoryRequest) SetMetaTitleNil() {
	o.MetaTitle.Set(nil)
}

// UnsetMetaTitle ensures that no value is present for MetaTitle, not even an explicit nil
func (o *CreateCategoryRequest) UnsetMetaTitle() {
	o.MetaTitle.Unset()
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCategoryRequest) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetaDescription.Get()
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCategoryRequest) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaDescription.Get(), o.MetaDescription.IsSet()
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *CreateCategoryRequest) HasMetaDescription() bool {
	if o != nil && o.MetaDescription.IsSet() {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given NullableString and assigns it to the MetaDescription field.
func (o *CreateCategoryRequest) SetMetaDescription(v string) {
	o.MetaDescription.Set(&v)
}
// SetMetaDescriptionNil sets the value for MetaDescription to be an explicit nil
func (o *CreateCategoryRequest) SetMetaDescriptionNil() {
	o.MetaDescription.Set(nil)
}

// UnsetMetaDescription ensures that no value is present for MetaDescription, not even an explicit nil
func (o *CreateCategoryRequest) UnsetMetaDescription() {
	o.MetaDescription.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCategoryRequest) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret int32
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCategoryRequest) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateCategoryRequest) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableInt32 and assigns it to the ParentId field.
func (o *CreateCategoryRequest) SetParentId(v int32) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *CreateCategoryRequest) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *CreateCategoryRequest) UnsetParentId() {
	o.ParentId.Unset()
}

func (o CreateCategoryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCategoryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.IsPublished) {
		toSerialize["is_published"] = o.IsPublished
	}
	if o.MetaTitle.IsSet() {
		toSerialize["meta_title"] = o.MetaTitle.Get()
	}
	if o.MetaDescription.IsSet() {
		toSerialize["meta_description"] = o.MetaDescription.Get()
	}
	if o.ParentId.IsSet() {
		toSerialize["parent_id"] = o.ParentId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCategoryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCategoryRequest := _CreateCategoryRequest{}

	err = json.Unmarshal(data, &varCreateCategoryRequest)

	if err != nil {
		return err
	}

	*o = CreateCategoryRequest(varCreateCategoryRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "is_published")
		delete(additionalProperties, "meta_title")
		delete(additionalProperties, "meta_description")
		delete(additionalProperties, "parent_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCategoryRequest struct {
	value *CreateCategoryRequest
	isSet bool
}

func (v NullableCreateCategoryRequest) Get() *CreateCategoryRequest {
	return v.value
}

func (v *NullableCreateCategoryRequest) Set(val *CreateCategoryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCategoryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCategoryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCategoryRequest(val *CreateCategoryRequest) *NullableCreateCategoryRequest {
	return &NullableCreateCategoryRequest{value: val, isSet: true}
}

func (v NullableCreateCategoryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCategoryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


