/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateCourseLocationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCourseLocationRequest{}

// CreateCourseLocationRequest struct for CreateCourseLocationRequest
type CreateCourseLocationRequest struct {
	// Name of the location where the course is held.
	Name string `json:"name"`
	AddressAttributes NullableAddressPayload `json:"address_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateCourseLocationRequest CreateCourseLocationRequest

// NewCreateCourseLocationRequest instantiates a new CreateCourseLocationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCourseLocationRequest(name string) *CreateCourseLocationRequest {
	this := CreateCourseLocationRequest{}
	this.Name = name
	return &this
}

// NewCreateCourseLocationRequestWithDefaults instantiates a new CreateCourseLocationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCourseLocationRequestWithDefaults() *CreateCourseLocationRequest {
	this := CreateCourseLocationRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateCourseLocationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCourseLocationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCourseLocationRequest) SetName(v string) {
	o.Name = v
}

// GetAddressAttributes returns the AddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCourseLocationRequest) GetAddressAttributes() AddressPayload {
	if o == nil || IsNil(o.AddressAttributes.Get()) {
		var ret AddressPayload
		return ret
	}
	return *o.AddressAttributes.Get()
}

// GetAddressAttributesOk returns a tuple with the AddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCourseLocationRequest) GetAddressAttributesOk() (*AddressPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressAttributes.Get(), o.AddressAttributes.IsSet()
}

// HasAddressAttributes returns a boolean if a field has been set.
func (o *CreateCourseLocationRequest) HasAddressAttributes() bool {
	if o != nil && o.AddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetAddressAttributes gets a reference to the given NullableAddressPayload and assigns it to the AddressAttributes field.
func (o *CreateCourseLocationRequest) SetAddressAttributes(v AddressPayload) {
	o.AddressAttributes.Set(&v)
}
// SetAddressAttributesNil sets the value for AddressAttributes to be an explicit nil
func (o *CreateCourseLocationRequest) SetAddressAttributesNil() {
	o.AddressAttributes.Set(nil)
}

// UnsetAddressAttributes ensures that no value is present for AddressAttributes, not even an explicit nil
func (o *CreateCourseLocationRequest) UnsetAddressAttributes() {
	o.AddressAttributes.Unset()
}

func (o CreateCourseLocationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCourseLocationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.AddressAttributes.IsSet() {
		toSerialize["address_attributes"] = o.AddressAttributes.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCourseLocationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCourseLocationRequest := _CreateCourseLocationRequest{}

	err = json.Unmarshal(data, &varCreateCourseLocationRequest)

	if err != nil {
		return err
	}

	*o = CreateCourseLocationRequest(varCreateCourseLocationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "address_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCourseLocationRequest struct {
	value *CreateCourseLocationRequest
	isSet bool
}

func (v NullableCreateCourseLocationRequest) Get() *CreateCourseLocationRequest {
	return v.value
}

func (v *NullableCreateCourseLocationRequest) Set(val *CreateCourseLocationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCourseLocationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCourseLocationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCourseLocationRequest(val *CreateCourseLocationRequest) *NullableCreateCourseLocationRequest {
	return &NullableCreateCourseLocationRequest{value: val, isSet: true}
}

func (v NullableCreateCourseLocationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCourseLocationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


