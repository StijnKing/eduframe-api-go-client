/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateGradeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGradeRequest{}

// CreateGradeRequest struct for CreateGradeRequest
type CreateGradeRequest struct {
	// The grade awarded (at least one of grade and score is required)
	Grade NullableString `json:"grade"`
	// The score awarded (at least one of grade and score is required)
	Score NullableFloat32 `json:"score"`
	// Unique model identifier of the gradeable (enrollment / ...)
	GradeableId int32 `json:"gradeable_id"`
	// Model type of the gradeable (enrollment / ...)
	GradeableType string `json:"gradeable_type"`
	// Additional comment about the grade
	Comment NullableString `json:"comment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateGradeRequest CreateGradeRequest

// NewCreateGradeRequest instantiates a new CreateGradeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGradeRequest(grade NullableString, score NullableFloat32, gradeableId int32, gradeableType string) *CreateGradeRequest {
	this := CreateGradeRequest{}
	this.Grade = grade
	this.Score = score
	this.GradeableId = gradeableId
	this.GradeableType = gradeableType
	return &this
}

// NewCreateGradeRequestWithDefaults instantiates a new CreateGradeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGradeRequestWithDefaults() *CreateGradeRequest {
	this := CreateGradeRequest{}
	return &this
}

// GetGrade returns the Grade field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateGradeRequest) GetGrade() string {
	if o == nil || o.Grade.Get() == nil {
		var ret string
		return ret
	}

	return *o.Grade.Get()
}

// GetGradeOk returns a tuple with the Grade field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateGradeRequest) GetGradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grade.Get(), o.Grade.IsSet()
}

// SetGrade sets field value
func (o *CreateGradeRequest) SetGrade(v string) {
	o.Grade.Set(&v)
}

// GetScore returns the Score field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *CreateGradeRequest) GetScore() float32 {
	if o == nil || o.Score.Get() == nil {
		var ret float32
		return ret
	}

	return *o.Score.Get()
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateGradeRequest) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Score.Get(), o.Score.IsSet()
}

// SetScore sets field value
func (o *CreateGradeRequest) SetScore(v float32) {
	o.Score.Set(&v)
}

// GetGradeableId returns the GradeableId field value
func (o *CreateGradeRequest) GetGradeableId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GradeableId
}

// GetGradeableIdOk returns a tuple with the GradeableId field value
// and a boolean to check if the value has been set.
func (o *CreateGradeRequest) GetGradeableIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GradeableId, true
}

// SetGradeableId sets field value
func (o *CreateGradeRequest) SetGradeableId(v int32) {
	o.GradeableId = v
}

// GetGradeableType returns the GradeableType field value
func (o *CreateGradeRequest) GetGradeableType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GradeableType
}

// GetGradeableTypeOk returns a tuple with the GradeableType field value
// and a boolean to check if the value has been set.
func (o *CreateGradeRequest) GetGradeableTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GradeableType, true
}

// SetGradeableType sets field value
func (o *CreateGradeRequest) SetGradeableType(v string) {
	o.GradeableType = v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateGradeRequest) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateGradeRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *CreateGradeRequest) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *CreateGradeRequest) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *CreateGradeRequest) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *CreateGradeRequest) UnsetComment() {
	o.Comment.Unset()
}

func (o CreateGradeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGradeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["grade"] = o.Grade.Get()
	toSerialize["score"] = o.Score.Get()
	toSerialize["gradeable_id"] = o.GradeableId
	toSerialize["gradeable_type"] = o.GradeableType
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateGradeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"grade",
		"score",
		"gradeable_id",
		"gradeable_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateGradeRequest := _CreateGradeRequest{}

	err = json.Unmarshal(data, &varCreateGradeRequest)

	if err != nil {
		return err
	}

	*o = CreateGradeRequest(varCreateGradeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "grade")
		delete(additionalProperties, "score")
		delete(additionalProperties, "gradeable_id")
		delete(additionalProperties, "gradeable_type")
		delete(additionalProperties, "comment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateGradeRequest struct {
	value *CreateGradeRequest
	isSet bool
}

func (v NullableCreateGradeRequest) Get() *CreateGradeRequest {
	return v.value
}

func (v *NullableCreateGradeRequest) Set(val *CreateGradeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGradeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGradeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGradeRequest(val *CreateGradeRequest) *NullableCreateGradeRequest {
	return &NullableCreateGradeRequest{value: val, isSet: true}
}

func (v NullableCreateGradeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGradeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


