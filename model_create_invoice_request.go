/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateInvoiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInvoiceRequest{}

// CreateInvoiceRequest struct for CreateInvoiceRequest
type CreateInvoiceRequest struct {
	// Identifier of the account.
	AccountId int32 `json:"account_id"`
	// Some description of the invoice which is displayed on the invoice.
	Feature NullableString `json:"feature,omitempty"`
	// The note displayed at the bottom of the invoice.
	Footnote NullableString `json:"footnote,omitempty"`
	InvoiceItemsAttributes []CreateInvoiceRequestInvoiceItemsAttributesInner `json:"invoice_items_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateInvoiceRequest CreateInvoiceRequest

// NewCreateInvoiceRequest instantiates a new CreateInvoiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInvoiceRequest(accountId int32) *CreateInvoiceRequest {
	this := CreateInvoiceRequest{}
	this.AccountId = accountId
	return &this
}

// NewCreateInvoiceRequestWithDefaults instantiates a new CreateInvoiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInvoiceRequestWithDefaults() *CreateInvoiceRequest {
	this := CreateInvoiceRequest{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *CreateInvoiceRequest) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CreateInvoiceRequest) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CreateInvoiceRequest) SetAccountId(v int32) {
	o.AccountId = v
}

// GetFeature returns the Feature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInvoiceRequest) GetFeature() string {
	if o == nil || IsNil(o.Feature.Get()) {
		var ret string
		return ret
	}
	return *o.Feature.Get()
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInvoiceRequest) GetFeatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Feature.Get(), o.Feature.IsSet()
}

// HasFeature returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasFeature() bool {
	if o != nil && o.Feature.IsSet() {
		return true
	}

	return false
}

// SetFeature gets a reference to the given NullableString and assigns it to the Feature field.
func (o *CreateInvoiceRequest) SetFeature(v string) {
	o.Feature.Set(&v)
}
// SetFeatureNil sets the value for Feature to be an explicit nil
func (o *CreateInvoiceRequest) SetFeatureNil() {
	o.Feature.Set(nil)
}

// UnsetFeature ensures that no value is present for Feature, not even an explicit nil
func (o *CreateInvoiceRequest) UnsetFeature() {
	o.Feature.Unset()
}

// GetFootnote returns the Footnote field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInvoiceRequest) GetFootnote() string {
	if o == nil || IsNil(o.Footnote.Get()) {
		var ret string
		return ret
	}
	return *o.Footnote.Get()
}

// GetFootnoteOk returns a tuple with the Footnote field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInvoiceRequest) GetFootnoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Footnote.Get(), o.Footnote.IsSet()
}

// HasFootnote returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasFootnote() bool {
	if o != nil && o.Footnote.IsSet() {
		return true
	}

	return false
}

// SetFootnote gets a reference to the given NullableString and assigns it to the Footnote field.
func (o *CreateInvoiceRequest) SetFootnote(v string) {
	o.Footnote.Set(&v)
}
// SetFootnoteNil sets the value for Footnote to be an explicit nil
func (o *CreateInvoiceRequest) SetFootnoteNil() {
	o.Footnote.Set(nil)
}

// UnsetFootnote ensures that no value is present for Footnote, not even an explicit nil
func (o *CreateInvoiceRequest) UnsetFootnote() {
	o.Footnote.Unset()
}

// GetInvoiceItemsAttributes returns the InvoiceItemsAttributes field value if set, zero value otherwise.
func (o *CreateInvoiceRequest) GetInvoiceItemsAttributes() []CreateInvoiceRequestInvoiceItemsAttributesInner {
	if o == nil || IsNil(o.InvoiceItemsAttributes) {
		var ret []CreateInvoiceRequestInvoiceItemsAttributesInner
		return ret
	}
	return o.InvoiceItemsAttributes
}

// GetInvoiceItemsAttributesOk returns a tuple with the InvoiceItemsAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInvoiceRequest) GetInvoiceItemsAttributesOk() ([]CreateInvoiceRequestInvoiceItemsAttributesInner, bool) {
	if o == nil || IsNil(o.InvoiceItemsAttributes) {
		return nil, false
	}
	return o.InvoiceItemsAttributes, true
}

// HasInvoiceItemsAttributes returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasInvoiceItemsAttributes() bool {
	if o != nil && !IsNil(o.InvoiceItemsAttributes) {
		return true
	}

	return false
}

// SetInvoiceItemsAttributes gets a reference to the given []CreateInvoiceRequestInvoiceItemsAttributesInner and assigns it to the InvoiceItemsAttributes field.
func (o *CreateInvoiceRequest) SetInvoiceItemsAttributes(v []CreateInvoiceRequestInvoiceItemsAttributesInner) {
	o.InvoiceItemsAttributes = v
}

func (o CreateInvoiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInvoiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	if o.Feature.IsSet() {
		toSerialize["feature"] = o.Feature.Get()
	}
	if o.Footnote.IsSet() {
		toSerialize["footnote"] = o.Footnote.Get()
	}
	if !IsNil(o.InvoiceItemsAttributes) {
		toSerialize["invoice_items_attributes"] = o.InvoiceItemsAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateInvoiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInvoiceRequest := _CreateInvoiceRequest{}

	err = json.Unmarshal(data, &varCreateInvoiceRequest)

	if err != nil {
		return err
	}

	*o = CreateInvoiceRequest(varCreateInvoiceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "feature")
		delete(additionalProperties, "footnote")
		delete(additionalProperties, "invoice_items_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateInvoiceRequest struct {
	value *CreateInvoiceRequest
	isSet bool
}

func (v NullableCreateInvoiceRequest) Get() *CreateInvoiceRequest {
	return v.value
}

func (v *NullableCreateInvoiceRequest) Set(val *CreateInvoiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInvoiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInvoiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInvoiceRequest(val *CreateInvoiceRequest) *NullableCreateInvoiceRequest {
	return &NullableCreateInvoiceRequest{value: val, isSet: true}
}

func (v NullableCreateInvoiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInvoiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


