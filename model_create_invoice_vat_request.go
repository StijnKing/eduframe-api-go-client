/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateInvoiceVatRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInvoiceVatRequest{}

// CreateInvoiceVatRequest struct for CreateInvoiceVatRequest
type CreateInvoiceVatRequest struct {
	// Name of the invoice vat.
	Name string `json:"name"`
	// Number representing the VAT percentage.
	Percentage string `json:"percentage"`
	AdditionalProperties map[string]interface{}
}

type _CreateInvoiceVatRequest CreateInvoiceVatRequest

// NewCreateInvoiceVatRequest instantiates a new CreateInvoiceVatRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInvoiceVatRequest(name string, percentage string) *CreateInvoiceVatRequest {
	this := CreateInvoiceVatRequest{}
	this.Name = name
	this.Percentage = percentage
	return &this
}

// NewCreateInvoiceVatRequestWithDefaults instantiates a new CreateInvoiceVatRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInvoiceVatRequestWithDefaults() *CreateInvoiceVatRequest {
	this := CreateInvoiceVatRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateInvoiceVatRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInvoiceVatRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateInvoiceVatRequest) SetName(v string) {
	o.Name = v
}

// GetPercentage returns the Percentage field value
func (o *CreateInvoiceVatRequest) GetPercentage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value
// and a boolean to check if the value has been set.
func (o *CreateInvoiceVatRequest) GetPercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Percentage, true
}

// SetPercentage sets field value
func (o *CreateInvoiceVatRequest) SetPercentage(v string) {
	o.Percentage = v
}

func (o CreateInvoiceVatRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInvoiceVatRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["percentage"] = o.Percentage

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateInvoiceVatRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"percentage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInvoiceVatRequest := _CreateInvoiceVatRequest{}

	err = json.Unmarshal(data, &varCreateInvoiceVatRequest)

	if err != nil {
		return err
	}

	*o = CreateInvoiceVatRequest(varCreateInvoiceVatRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "percentage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateInvoiceVatRequest struct {
	value *CreateInvoiceVatRequest
	isSet bool
}

func (v NullableCreateInvoiceVatRequest) Get() *CreateInvoiceVatRequest {
	return v.value
}

func (v *NullableCreateInvoiceVatRequest) Set(val *CreateInvoiceVatRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInvoiceVatRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInvoiceVatRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInvoiceVatRequest(val *CreateInvoiceVatRequest) *NullableCreateInvoiceVatRequest {
	return &NullableCreateInvoiceVatRequest{value: val, isSet: true}
}

func (v NullableCreateInvoiceVatRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInvoiceVatRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


