/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateMeetingLocationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMeetingLocationRequest{}

// CreateMeetingLocationRequest struct for CreateMeetingLocationRequest
type CreateMeetingLocationRequest struct {
	// Name of the meeting location.
	Name string `json:"name"`
	// Unique identifier of the course location.
	CourseLocationId int32 `json:"course_location_id"`
	// Capacity of the meeting location
	Capacity NullableInt32 `json:"capacity,omitempty"`
	AddressAttributes NullableAddressPayload `json:"address_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateMeetingLocationRequest CreateMeetingLocationRequest

// NewCreateMeetingLocationRequest instantiates a new CreateMeetingLocationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMeetingLocationRequest(name string, courseLocationId int32) *CreateMeetingLocationRequest {
	this := CreateMeetingLocationRequest{}
	this.Name = name
	this.CourseLocationId = courseLocationId
	return &this
}

// NewCreateMeetingLocationRequestWithDefaults instantiates a new CreateMeetingLocationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMeetingLocationRequestWithDefaults() *CreateMeetingLocationRequest {
	this := CreateMeetingLocationRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateMeetingLocationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateMeetingLocationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateMeetingLocationRequest) SetName(v string) {
	o.Name = v
}

// GetCourseLocationId returns the CourseLocationId field value
func (o *CreateMeetingLocationRequest) GetCourseLocationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CourseLocationId
}

// GetCourseLocationIdOk returns a tuple with the CourseLocationId field value
// and a boolean to check if the value has been set.
func (o *CreateMeetingLocationRequest) GetCourseLocationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CourseLocationId, true
}

// SetCourseLocationId sets field value
func (o *CreateMeetingLocationRequest) SetCourseLocationId(v int32) {
	o.CourseLocationId = v
}

// GetCapacity returns the Capacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMeetingLocationRequest) GetCapacity() int32 {
	if o == nil || IsNil(o.Capacity.Get()) {
		var ret int32
		return ret
	}
	return *o.Capacity.Get()
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMeetingLocationRequest) GetCapacityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Capacity.Get(), o.Capacity.IsSet()
}

// HasCapacity returns a boolean if a field has been set.
func (o *CreateMeetingLocationRequest) HasCapacity() bool {
	if o != nil && o.Capacity.IsSet() {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given NullableInt32 and assigns it to the Capacity field.
func (o *CreateMeetingLocationRequest) SetCapacity(v int32) {
	o.Capacity.Set(&v)
}
// SetCapacityNil sets the value for Capacity to be an explicit nil
func (o *CreateMeetingLocationRequest) SetCapacityNil() {
	o.Capacity.Set(nil)
}

// UnsetCapacity ensures that no value is present for Capacity, not even an explicit nil
func (o *CreateMeetingLocationRequest) UnsetCapacity() {
	o.Capacity.Unset()
}

// GetAddressAttributes returns the AddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMeetingLocationRequest) GetAddressAttributes() AddressPayload {
	if o == nil || IsNil(o.AddressAttributes.Get()) {
		var ret AddressPayload
		return ret
	}
	return *o.AddressAttributes.Get()
}

// GetAddressAttributesOk returns a tuple with the AddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMeetingLocationRequest) GetAddressAttributesOk() (*AddressPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressAttributes.Get(), o.AddressAttributes.IsSet()
}

// HasAddressAttributes returns a boolean if a field has been set.
func (o *CreateMeetingLocationRequest) HasAddressAttributes() bool {
	if o != nil && o.AddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetAddressAttributes gets a reference to the given NullableAddressPayload and assigns it to the AddressAttributes field.
func (o *CreateMeetingLocationRequest) SetAddressAttributes(v AddressPayload) {
	o.AddressAttributes.Set(&v)
}
// SetAddressAttributesNil sets the value for AddressAttributes to be an explicit nil
func (o *CreateMeetingLocationRequest) SetAddressAttributesNil() {
	o.AddressAttributes.Set(nil)
}

// UnsetAddressAttributes ensures that no value is present for AddressAttributes, not even an explicit nil
func (o *CreateMeetingLocationRequest) UnsetAddressAttributes() {
	o.AddressAttributes.Unset()
}

func (o CreateMeetingLocationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMeetingLocationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["course_location_id"] = o.CourseLocationId
	if o.Capacity.IsSet() {
		toSerialize["capacity"] = o.Capacity.Get()
	}
	if o.AddressAttributes.IsSet() {
		toSerialize["address_attributes"] = o.AddressAttributes.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateMeetingLocationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"course_location_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateMeetingLocationRequest := _CreateMeetingLocationRequest{}

	err = json.Unmarshal(data, &varCreateMeetingLocationRequest)

	if err != nil {
		return err
	}

	*o = CreateMeetingLocationRequest(varCreateMeetingLocationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "course_location_id")
		delete(additionalProperties, "capacity")
		delete(additionalProperties, "address_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateMeetingLocationRequest struct {
	value *CreateMeetingLocationRequest
	isSet bool
}

func (v NullableCreateMeetingLocationRequest) Get() *CreateMeetingLocationRequest {
	return v.value
}

func (v *NullableCreateMeetingLocationRequest) Set(val *CreateMeetingLocationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMeetingLocationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMeetingLocationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMeetingLocationRequest(val *CreateMeetingLocationRequest) *NullableCreateMeetingLocationRequest {
	return &NullableCreateMeetingLocationRequest{value: val, isSet: true}
}

func (v NullableCreateMeetingLocationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMeetingLocationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


