/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrderRequest{}

// CreateOrderRequest struct for CreateOrderRequest
type CreateOrderRequest struct {
	// Decimal representing the value of the order
	Cost NullableString `json:"cost,omitempty"`
	// The cost schema that the payment will follow for the specified order.
	CostScheme *string `json:"cost_scheme,omitempty"`
	// Unique identifier of the orders CatalogVariant.
	CatalogVariantId int32 `json:"catalog_variant_id"`
	// Unique identifier of the orders Creator (User).
	CreatorId int32 `json:"creator_id"`
	// The unique identifier associated with the orders Account. If not provided, the system will default to using the personal account. 
	AccountId *int32 `json:"account_id,omitempty"`
	// *DEPRECATED*: Use catalog_variant_id instead. Unique identifier of the order's planned course. 
	PlannedCourseId *int32 `json:"planned_course_id,omitempty"`
	// Unique identifier of the orders PaymentMethod.
	PaymentMethodId *int32 `json:"payment_method_id,omitempty"`
	// Array of student ids. A non-empty array is required if there are no student ids specified in the enrollments_attributes.
	StudentIds []int32 `json:"student_ids,omitempty"`
	// Unique identifier of the orders PaymentOption.
	PaymentOptionId *int32 `json:"payment_option_id,omitempty"`
	// The custom properties of the order.
	Custom map[string]interface{} `json:"custom,omitempty"`
	// Optional: If the order should be approved or not. When omitted will default to false
	Approve *bool `json:"approve,omitempty"`
	// Optional: Assign labels to the order.
	LabelIds []int32 `json:"label_ids,omitempty"`
	// Optional: Identifier of the referral.
	ReferralId *int32 `json:"referral_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateOrderRequest CreateOrderRequest

// NewCreateOrderRequest instantiates a new CreateOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderRequest(catalogVariantId int32, creatorId int32) *CreateOrderRequest {
	this := CreateOrderRequest{}
	this.CatalogVariantId = catalogVariantId
	this.CreatorId = creatorId
	return &this
}

// NewCreateOrderRequestWithDefaults instantiates a new CreateOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderRequestWithDefaults() *CreateOrderRequest {
	this := CreateOrderRequest{}
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrderRequest) GetCost() string {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret string
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrderRequest) GetCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableString and assigns it to the Cost field.
func (o *CreateOrderRequest) SetCost(v string) {
	o.Cost.Set(&v)
}
// SetCostNil sets the value for Cost to be an explicit nil
func (o *CreateOrderRequest) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *CreateOrderRequest) UnsetCost() {
	o.Cost.Unset()
}

// GetCostScheme returns the CostScheme field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetCostScheme() string {
	if o == nil || IsNil(o.CostScheme) {
		var ret string
		return ret
	}
	return *o.CostScheme
}

// GetCostSchemeOk returns a tuple with the CostScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetCostSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.CostScheme) {
		return nil, false
	}
	return o.CostScheme, true
}

// HasCostScheme returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasCostScheme() bool {
	if o != nil && !IsNil(o.CostScheme) {
		return true
	}

	return false
}

// SetCostScheme gets a reference to the given string and assigns it to the CostScheme field.
func (o *CreateOrderRequest) SetCostScheme(v string) {
	o.CostScheme = &v
}

// GetCatalogVariantId returns the CatalogVariantId field value
func (o *CreateOrderRequest) GetCatalogVariantId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogVariantId
}

// GetCatalogVariantIdOk returns a tuple with the CatalogVariantId field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetCatalogVariantIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogVariantId, true
}

// SetCatalogVariantId sets field value
func (o *CreateOrderRequest) SetCatalogVariantId(v int32) {
	o.CatalogVariantId = v
}

// GetCreatorId returns the CreatorId field value
func (o *CreateOrderRequest) GetCreatorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *CreateOrderRequest) SetCreatorId(v int32) {
	o.CreatorId = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetAccountId() int32 {
	if o == nil || IsNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *CreateOrderRequest) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetPlannedCourseId returns the PlannedCourseId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetPlannedCourseId() int32 {
	if o == nil || IsNil(o.PlannedCourseId) {
		var ret int32
		return ret
	}
	return *o.PlannedCourseId
}

// GetPlannedCourseIdOk returns a tuple with the PlannedCourseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetPlannedCourseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PlannedCourseId) {
		return nil, false
	}
	return o.PlannedCourseId, true
}

// HasPlannedCourseId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasPlannedCourseId() bool {
	if o != nil && !IsNil(o.PlannedCourseId) {
		return true
	}

	return false
}

// SetPlannedCourseId gets a reference to the given int32 and assigns it to the PlannedCourseId field.
func (o *CreateOrderRequest) SetPlannedCourseId(v int32) {
	o.PlannedCourseId = &v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetPaymentMethodId() int32 {
	if o == nil || IsNil(o.PaymentMethodId) {
		var ret int32
		return ret
	}
	return *o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetPaymentMethodIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentMethodId) {
		return nil, false
	}
	return o.PaymentMethodId, true
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasPaymentMethodId() bool {
	if o != nil && !IsNil(o.PaymentMethodId) {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given int32 and assigns it to the PaymentMethodId field.
func (o *CreateOrderRequest) SetPaymentMethodId(v int32) {
	o.PaymentMethodId = &v
}

// GetStudentIds returns the StudentIds field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetStudentIds() []int32 {
	if o == nil || IsNil(o.StudentIds) {
		var ret []int32
		return ret
	}
	return o.StudentIds
}

// GetStudentIdsOk returns a tuple with the StudentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetStudentIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.StudentIds) {
		return nil, false
	}
	return o.StudentIds, true
}

// HasStudentIds returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasStudentIds() bool {
	if o != nil && !IsNil(o.StudentIds) {
		return true
	}

	return false
}

// SetStudentIds gets a reference to the given []int32 and assigns it to the StudentIds field.
func (o *CreateOrderRequest) SetStudentIds(v []int32) {
	o.StudentIds = v
}

// GetPaymentOptionId returns the PaymentOptionId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetPaymentOptionId() int32 {
	if o == nil || IsNil(o.PaymentOptionId) {
		var ret int32
		return ret
	}
	return *o.PaymentOptionId
}

// GetPaymentOptionIdOk returns a tuple with the PaymentOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetPaymentOptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentOptionId) {
		return nil, false
	}
	return o.PaymentOptionId, true
}

// HasPaymentOptionId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasPaymentOptionId() bool {
	if o != nil && !IsNil(o.PaymentOptionId) {
		return true
	}

	return false
}

// SetPaymentOptionId gets a reference to the given int32 and assigns it to the PaymentOptionId field.
func (o *CreateOrderRequest) SetPaymentOptionId(v int32) {
	o.PaymentOptionId = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *CreateOrderRequest) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetApprove returns the Approve field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetApprove() bool {
	if o == nil || IsNil(o.Approve) {
		var ret bool
		return ret
	}
	return *o.Approve
}

// GetApproveOk returns a tuple with the Approve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetApproveOk() (*bool, bool) {
	if o == nil || IsNil(o.Approve) {
		return nil, false
	}
	return o.Approve, true
}

// HasApprove returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasApprove() bool {
	if o != nil && !IsNil(o.Approve) {
		return true
	}

	return false
}

// SetApprove gets a reference to the given bool and assigns it to the Approve field.
func (o *CreateOrderRequest) SetApprove(v bool) {
	o.Approve = &v
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetLabelIds() []int32 {
	if o == nil || IsNil(o.LabelIds) {
		var ret []int32
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetLabelIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.LabelIds) {
		return nil, false
	}
	return o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasLabelIds() bool {
	if o != nil && !IsNil(o.LabelIds) {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given []int32 and assigns it to the LabelIds field.
func (o *CreateOrderRequest) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetReferralId returns the ReferralId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetReferralId() int32 {
	if o == nil || IsNil(o.ReferralId) {
		var ret int32
		return ret
	}
	return *o.ReferralId
}

// GetReferralIdOk returns a tuple with the ReferralId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetReferralIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ReferralId) {
		return nil, false
	}
	return o.ReferralId, true
}

// HasReferralId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasReferralId() bool {
	if o != nil && !IsNil(o.ReferralId) {
		return true
	}

	return false
}

// SetReferralId gets a reference to the given int32 and assigns it to the ReferralId field.
func (o *CreateOrderRequest) SetReferralId(v int32) {
	o.ReferralId = &v
}

func (o CreateOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	if !IsNil(o.CostScheme) {
		toSerialize["cost_scheme"] = o.CostScheme
	}
	toSerialize["catalog_variant_id"] = o.CatalogVariantId
	toSerialize["creator_id"] = o.CreatorId
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.PlannedCourseId) {
		toSerialize["planned_course_id"] = o.PlannedCourseId
	}
	if !IsNil(o.PaymentMethodId) {
		toSerialize["payment_method_id"] = o.PaymentMethodId
	}
	if !IsNil(o.StudentIds) {
		toSerialize["student_ids"] = o.StudentIds
	}
	if !IsNil(o.PaymentOptionId) {
		toSerialize["payment_option_id"] = o.PaymentOptionId
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.Approve) {
		toSerialize["approve"] = o.Approve
	}
	if !IsNil(o.LabelIds) {
		toSerialize["label_ids"] = o.LabelIds
	}
	if !IsNil(o.ReferralId) {
		toSerialize["referral_id"] = o.ReferralId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateOrderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"catalog_variant_id",
		"creator_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrderRequest := _CreateOrderRequest{}

	err = json.Unmarshal(data, &varCreateOrderRequest)

	if err != nil {
		return err
	}

	*o = CreateOrderRequest(varCreateOrderRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cost")
		delete(additionalProperties, "cost_scheme")
		delete(additionalProperties, "catalog_variant_id")
		delete(additionalProperties, "creator_id")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "planned_course_id")
		delete(additionalProperties, "payment_method_id")
		delete(additionalProperties, "student_ids")
		delete(additionalProperties, "payment_option_id")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "approve")
		delete(additionalProperties, "label_ids")
		delete(additionalProperties, "referral_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateOrderRequest struct {
	value *CreateOrderRequest
	isSet bool
}

func (v NullableCreateOrderRequest) Get() *CreateOrderRequest {
	return v.value
}

func (v *NullableCreateOrderRequest) Set(val *CreateOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderRequest(val *CreateOrderRequest) *NullableCreateOrderRequest {
	return &NullableCreateOrderRequest{value: val, isSet: true}
}

func (v NullableCreateOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


