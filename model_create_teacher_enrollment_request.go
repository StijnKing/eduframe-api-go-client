/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateTeacherEnrollmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTeacherEnrollmentRequest{}

// CreateTeacherEnrollmentRequest struct for CreateTeacherEnrollmentRequest
type CreateTeacherEnrollmentRequest struct {
	// Unique identifier of the planned course.
	PlannedCourseId int32 `json:"planned_course_id"`
	// Unique identifier of the teacher.
	TeacherId int32 `json:"teacher_id"`
	// Unique identifier of the teacher role.  ![Teacher Roles](https://img.shields.io/badge/Feature-Teacher_Roles-blue) 
	TeacherRoleId *int32 `json:"teacher_role_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateTeacherEnrollmentRequest CreateTeacherEnrollmentRequest

// NewCreateTeacherEnrollmentRequest instantiates a new CreateTeacherEnrollmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTeacherEnrollmentRequest(plannedCourseId int32, teacherId int32) *CreateTeacherEnrollmentRequest {
	this := CreateTeacherEnrollmentRequest{}
	this.PlannedCourseId = plannedCourseId
	this.TeacherId = teacherId
	return &this
}

// NewCreateTeacherEnrollmentRequestWithDefaults instantiates a new CreateTeacherEnrollmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTeacherEnrollmentRequestWithDefaults() *CreateTeacherEnrollmentRequest {
	this := CreateTeacherEnrollmentRequest{}
	return &this
}

// GetPlannedCourseId returns the PlannedCourseId field value
func (o *CreateTeacherEnrollmentRequest) GetPlannedCourseId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PlannedCourseId
}

// GetPlannedCourseIdOk returns a tuple with the PlannedCourseId field value
// and a boolean to check if the value has been set.
func (o *CreateTeacherEnrollmentRequest) GetPlannedCourseIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlannedCourseId, true
}

// SetPlannedCourseId sets field value
func (o *CreateTeacherEnrollmentRequest) SetPlannedCourseId(v int32) {
	o.PlannedCourseId = v
}

// GetTeacherId returns the TeacherId field value
func (o *CreateTeacherEnrollmentRequest) GetTeacherId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TeacherId
}

// GetTeacherIdOk returns a tuple with the TeacherId field value
// and a boolean to check if the value has been set.
func (o *CreateTeacherEnrollmentRequest) GetTeacherIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeacherId, true
}

// SetTeacherId sets field value
func (o *CreateTeacherEnrollmentRequest) SetTeacherId(v int32) {
	o.TeacherId = v
}

// GetTeacherRoleId returns the TeacherRoleId field value if set, zero value otherwise.
func (o *CreateTeacherEnrollmentRequest) GetTeacherRoleId() int32 {
	if o == nil || IsNil(o.TeacherRoleId) {
		var ret int32
		return ret
	}
	return *o.TeacherRoleId
}

// GetTeacherRoleIdOk returns a tuple with the TeacherRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTeacherEnrollmentRequest) GetTeacherRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TeacherRoleId) {
		return nil, false
	}
	return o.TeacherRoleId, true
}

// HasTeacherRoleId returns a boolean if a field has been set.
func (o *CreateTeacherEnrollmentRequest) HasTeacherRoleId() bool {
	if o != nil && !IsNil(o.TeacherRoleId) {
		return true
	}

	return false
}

// SetTeacherRoleId gets a reference to the given int32 and assigns it to the TeacherRoleId field.
func (o *CreateTeacherEnrollmentRequest) SetTeacherRoleId(v int32) {
	o.TeacherRoleId = &v
}

func (o CreateTeacherEnrollmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTeacherEnrollmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["planned_course_id"] = o.PlannedCourseId
	toSerialize["teacher_id"] = o.TeacherId
	if !IsNil(o.TeacherRoleId) {
		toSerialize["teacher_role_id"] = o.TeacherRoleId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateTeacherEnrollmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"planned_course_id",
		"teacher_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTeacherEnrollmentRequest := _CreateTeacherEnrollmentRequest{}

	err = json.Unmarshal(data, &varCreateTeacherEnrollmentRequest)

	if err != nil {
		return err
	}

	*o = CreateTeacherEnrollmentRequest(varCreateTeacherEnrollmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "planned_course_id")
		delete(additionalProperties, "teacher_id")
		delete(additionalProperties, "teacher_role_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateTeacherEnrollmentRequest struct {
	value *CreateTeacherEnrollmentRequest
	isSet bool
}

func (v NullableCreateTeacherEnrollmentRequest) Get() *CreateTeacherEnrollmentRequest {
	return v.value
}

func (v *NullableCreateTeacherEnrollmentRequest) Set(val *CreateTeacherEnrollmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTeacherEnrollmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTeacherEnrollmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTeacherEnrollmentRequest(val *CreateTeacherEnrollmentRequest) *NullableCreateTeacherEnrollmentRequest {
	return &NullableCreateTeacherEnrollmentRequest{value: val, isSet: true}
}

func (v NullableCreateTeacherEnrollmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTeacherEnrollmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


