/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRequest{}

// CreateUserRequest struct for CreateUserRequest
type CreateUserRequest struct {
	// First name of the user.
	FirstName string `json:"first_name"`
	// Middle name of the user.
	MiddleName NullableString `json:"middle_name,omitempty"`
	// Last name of the user.
	LastName string `json:"last_name"`
	// The e-mail of the user.
	Email string `json:"email"`
	Locale NullableLocale `json:"locale,omitempty"`
	// Boolean representing the possibility of the user to receive newsletters.
	WantsNewsletter *bool `json:"wants_newsletter,omitempty"`
	// If the user should be able to login and thus receive login details by mail. Only relevant when creating the user.
	WithAuthentication *bool `json:"with_authentication,omitempty"`
	// The custom properties of the user.
	Custom map[string]interface{} `json:"custom,omitempty"`
	AddressAttributes NullableAddressPayload `json:"address_attributes,omitempty"`
	InvoiceAddressAttributes NullableAddressPayload `json:"invoice_address_attributes,omitempty"`
	// An array containing the identifiers of the labels associated with the user. When updating this array, the existing labels are replaced with the new ones provided. 
	LabelIds []int32 `json:"label_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateUserRequest CreateUserRequest

// NewCreateUserRequest instantiates a new CreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRequest(firstName string, lastName string, email string) *CreateUserRequest {
	this := CreateUserRequest{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	return &this
}

// NewCreateUserRequestWithDefaults instantiates a new CreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRequestWithDefaults() *CreateUserRequest {
	this := CreateUserRequest{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *CreateUserRequest) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CreateUserRequest) SetFirstName(v string) {
	o.FirstName = v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateUserRequest) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName.Get()) {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateUserRequest) GetMiddleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *CreateUserRequest) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *CreateUserRequest) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *CreateUserRequest) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *CreateUserRequest) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetLastName returns the LastName field value
func (o *CreateUserRequest) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CreateUserRequest) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *CreateUserRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateUserRequest) SetEmail(v string) {
	o.Email = v
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateUserRequest) GetLocale() Locale {
	if o == nil || IsNil(o.Locale.Get()) {
		var ret Locale
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateUserRequest) GetLocaleOk() (*Locale, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *CreateUserRequest) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableLocale and assigns it to the Locale field.
func (o *CreateUserRequest) SetLocale(v Locale) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *CreateUserRequest) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *CreateUserRequest) UnsetLocale() {
	o.Locale.Unset()
}

// GetWantsNewsletter returns the WantsNewsletter field value if set, zero value otherwise.
func (o *CreateUserRequest) GetWantsNewsletter() bool {
	if o == nil || IsNil(o.WantsNewsletter) {
		var ret bool
		return ret
	}
	return *o.WantsNewsletter
}

// GetWantsNewsletterOk returns a tuple with the WantsNewsletter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetWantsNewsletterOk() (*bool, bool) {
	if o == nil || IsNil(o.WantsNewsletter) {
		return nil, false
	}
	return o.WantsNewsletter, true
}

// HasWantsNewsletter returns a boolean if a field has been set.
func (o *CreateUserRequest) HasWantsNewsletter() bool {
	if o != nil && !IsNil(o.WantsNewsletter) {
		return true
	}

	return false
}

// SetWantsNewsletter gets a reference to the given bool and assigns it to the WantsNewsletter field.
func (o *CreateUserRequest) SetWantsNewsletter(v bool) {
	o.WantsNewsletter = &v
}

// GetWithAuthentication returns the WithAuthentication field value if set, zero value otherwise.
func (o *CreateUserRequest) GetWithAuthentication() bool {
	if o == nil || IsNil(o.WithAuthentication) {
		var ret bool
		return ret
	}
	return *o.WithAuthentication
}

// GetWithAuthenticationOk returns a tuple with the WithAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetWithAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.WithAuthentication) {
		return nil, false
	}
	return o.WithAuthentication, true
}

// HasWithAuthentication returns a boolean if a field has been set.
func (o *CreateUserRequest) HasWithAuthentication() bool {
	if o != nil && !IsNil(o.WithAuthentication) {
		return true
	}

	return false
}

// SetWithAuthentication gets a reference to the given bool and assigns it to the WithAuthentication field.
func (o *CreateUserRequest) SetWithAuthentication(v bool) {
	o.WithAuthentication = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *CreateUserRequest) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *CreateUserRequest) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *CreateUserRequest) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetAddressAttributes returns the AddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateUserRequest) GetAddressAttributes() AddressPayload {
	if o == nil || IsNil(o.AddressAttributes.Get()) {
		var ret AddressPayload
		return ret
	}
	return *o.AddressAttributes.Get()
}

// GetAddressAttributesOk returns a tuple with the AddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateUserRequest) GetAddressAttributesOk() (*AddressPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressAttributes.Get(), o.AddressAttributes.IsSet()
}

// HasAddressAttributes returns a boolean if a field has been set.
func (o *CreateUserRequest) HasAddressAttributes() bool {
	if o != nil && o.AddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetAddressAttributes gets a reference to the given NullableAddressPayload and assigns it to the AddressAttributes field.
func (o *CreateUserRequest) SetAddressAttributes(v AddressPayload) {
	o.AddressAttributes.Set(&v)
}
// SetAddressAttributesNil sets the value for AddressAttributes to be an explicit nil
func (o *CreateUserRequest) SetAddressAttributesNil() {
	o.AddressAttributes.Set(nil)
}

// UnsetAddressAttributes ensures that no value is present for AddressAttributes, not even an explicit nil
func (o *CreateUserRequest) UnsetAddressAttributes() {
	o.AddressAttributes.Unset()
}

// GetInvoiceAddressAttributes returns the InvoiceAddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateUserRequest) GetInvoiceAddressAttributes() AddressPayload {
	if o == nil || IsNil(o.InvoiceAddressAttributes.Get()) {
		var ret AddressPayload
		return ret
	}
	return *o.InvoiceAddressAttributes.Get()
}

// GetInvoiceAddressAttributesOk returns a tuple with the InvoiceAddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateUserRequest) GetInvoiceAddressAttributesOk() (*AddressPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceAddressAttributes.Get(), o.InvoiceAddressAttributes.IsSet()
}

// HasInvoiceAddressAttributes returns a boolean if a field has been set.
func (o *CreateUserRequest) HasInvoiceAddressAttributes() bool {
	if o != nil && o.InvoiceAddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetInvoiceAddressAttributes gets a reference to the given NullableAddressPayload and assigns it to the InvoiceAddressAttributes field.
func (o *CreateUserRequest) SetInvoiceAddressAttributes(v AddressPayload) {
	o.InvoiceAddressAttributes.Set(&v)
}
// SetInvoiceAddressAttributesNil sets the value for InvoiceAddressAttributes to be an explicit nil
func (o *CreateUserRequest) SetInvoiceAddressAttributesNil() {
	o.InvoiceAddressAttributes.Set(nil)
}

// UnsetInvoiceAddressAttributes ensures that no value is present for InvoiceAddressAttributes, not even an explicit nil
func (o *CreateUserRequest) UnsetInvoiceAddressAttributes() {
	o.InvoiceAddressAttributes.Unset()
}

// GetLabelIds returns the LabelIds field value if set, zero value otherwise.
func (o *CreateUserRequest) GetLabelIds() []int32 {
	if o == nil || IsNil(o.LabelIds) {
		var ret []int32
		return ret
	}
	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetLabelIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.LabelIds) {
		return nil, false
	}
	return o.LabelIds, true
}

// HasLabelIds returns a boolean if a field has been set.
func (o *CreateUserRequest) HasLabelIds() bool {
	if o != nil && !IsNil(o.LabelIds) {
		return true
	}

	return false
}

// SetLabelIds gets a reference to the given []int32 and assigns it to the LabelIds field.
func (o *CreateUserRequest) SetLabelIds(v []int32) {
	o.LabelIds = v
}

func (o CreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["first_name"] = o.FirstName
	if o.MiddleName.IsSet() {
		toSerialize["middle_name"] = o.MiddleName.Get()
	}
	toSerialize["last_name"] = o.LastName
	toSerialize["email"] = o.Email
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if !IsNil(o.WantsNewsletter) {
		toSerialize["wants_newsletter"] = o.WantsNewsletter
	}
	if !IsNil(o.WithAuthentication) {
		toSerialize["with_authentication"] = o.WithAuthentication
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if o.AddressAttributes.IsSet() {
		toSerialize["address_attributes"] = o.AddressAttributes.Get()
	}
	if o.InvoiceAddressAttributes.IsSet() {
		toSerialize["invoice_address_attributes"] = o.InvoiceAddressAttributes.Get()
	}
	if !IsNil(o.LabelIds) {
		toSerialize["label_ids"] = o.LabelIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateUserRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"first_name",
		"last_name",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUserRequest := _CreateUserRequest{}

	err = json.Unmarshal(data, &varCreateUserRequest)

	if err != nil {
		return err
	}

	*o = CreateUserRequest(varCreateUserRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "first_name")
		delete(additionalProperties, "middle_name")
		delete(additionalProperties, "last_name")
		delete(additionalProperties, "email")
		delete(additionalProperties, "locale")
		delete(additionalProperties, "wants_newsletter")
		delete(additionalProperties, "with_authentication")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "address_attributes")
		delete(additionalProperties, "invoice_address_attributes")
		delete(additionalProperties, "label_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateUserRequest struct {
	value *CreateUserRequest
	isSet bool
}

func (v NullableCreateUserRequest) Get() *CreateUserRequest {
	return v.value
}

func (v *NullableCreateUserRequest) Set(val *CreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRequest(val *CreateUserRequest) *NullableCreateUserRequest {
	return &NullableCreateUserRequest{value: val, isSet: true}
}

func (v NullableCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


