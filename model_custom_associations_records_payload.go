/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomAssociationsRecordsPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomAssociationsRecordsPayload{}

// CustomAssociationsRecordsPayload struct for CustomAssociationsRecordsPayload
type CustomAssociationsRecordsPayload struct {
	// The unique identifier of the association.
	CustomAssociationId int32 `json:"custom_association_id"`
	// List of custom record identifiers linked.
	CustomRecordIds []int32 `json:"custom_record_ids"`
}

type _CustomAssociationsRecordsPayload CustomAssociationsRecordsPayload

// NewCustomAssociationsRecordsPayload instantiates a new CustomAssociationsRecordsPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomAssociationsRecordsPayload(customAssociationId int32, customRecordIds []int32) *CustomAssociationsRecordsPayload {
	this := CustomAssociationsRecordsPayload{}
	this.CustomAssociationId = customAssociationId
	this.CustomRecordIds = customRecordIds
	return &this
}

// NewCustomAssociationsRecordsPayloadWithDefaults instantiates a new CustomAssociationsRecordsPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomAssociationsRecordsPayloadWithDefaults() *CustomAssociationsRecordsPayload {
	this := CustomAssociationsRecordsPayload{}
	return &this
}

// GetCustomAssociationId returns the CustomAssociationId field value
func (o *CustomAssociationsRecordsPayload) GetCustomAssociationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CustomAssociationId
}

// GetCustomAssociationIdOk returns a tuple with the CustomAssociationId field value
// and a boolean to check if the value has been set.
func (o *CustomAssociationsRecordsPayload) GetCustomAssociationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomAssociationId, true
}

// SetCustomAssociationId sets field value
func (o *CustomAssociationsRecordsPayload) SetCustomAssociationId(v int32) {
	o.CustomAssociationId = v
}

// GetCustomRecordIds returns the CustomRecordIds field value
func (o *CustomAssociationsRecordsPayload) GetCustomRecordIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.CustomRecordIds
}

// GetCustomRecordIdsOk returns a tuple with the CustomRecordIds field value
// and a boolean to check if the value has been set.
func (o *CustomAssociationsRecordsPayload) GetCustomRecordIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomRecordIds, true
}

// SetCustomRecordIds sets field value
func (o *CustomAssociationsRecordsPayload) SetCustomRecordIds(v []int32) {
	o.CustomRecordIds = v
}

func (o CustomAssociationsRecordsPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomAssociationsRecordsPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["custom_association_id"] = o.CustomAssociationId
	toSerialize["custom_record_ids"] = o.CustomRecordIds
	return toSerialize, nil
}

func (o *CustomAssociationsRecordsPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"custom_association_id",
		"custom_record_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomAssociationsRecordsPayload := _CustomAssociationsRecordsPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomAssociationsRecordsPayload)

	if err != nil {
		return err
	}

	*o = CustomAssociationsRecordsPayload(varCustomAssociationsRecordsPayload)

	return err
}

type NullableCustomAssociationsRecordsPayload struct {
	value *CustomAssociationsRecordsPayload
	isSet bool
}

func (v NullableCustomAssociationsRecordsPayload) Get() *CustomAssociationsRecordsPayload {
	return v.value
}

func (v *NullableCustomAssociationsRecordsPayload) Set(val *CustomAssociationsRecordsPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAssociationsRecordsPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAssociationsRecordsPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAssociationsRecordsPayload(val *CustomAssociationsRecordsPayload) *NullableCustomAssociationsRecordsPayload {
	return &NullableCustomAssociationsRecordsPayload{value: val, isSet: true}
}

func (v NullableCustomAssociationsRecordsPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAssociationsRecordsPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


