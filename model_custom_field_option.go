/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomFieldOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldOption{}

// CustomFieldOption struct for CustomFieldOption
type CustomFieldOption struct {
	// Unique identifier of the custom field.
	Id int32 `json:"id"`
	// The value of the option
	Value string `json:"value"`
	// Whether the option can be chosen or not
	Enabled bool `json:"enabled"`
}

type _CustomFieldOption CustomFieldOption

// NewCustomFieldOption instantiates a new CustomFieldOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldOption(id int32, value string, enabled bool) *CustomFieldOption {
	this := CustomFieldOption{}
	this.Id = id
	this.Value = value
	this.Enabled = enabled
	return &this
}

// NewCustomFieldOptionWithDefaults instantiates a new CustomFieldOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldOptionWithDefaults() *CustomFieldOption {
	this := CustomFieldOption{}
	return &this
}

// GetId returns the Id field value
func (o *CustomFieldOption) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomFieldOption) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomFieldOption) SetId(v int32) {
	o.Id = v
}

// GetValue returns the Value field value
func (o *CustomFieldOption) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CustomFieldOption) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CustomFieldOption) SetValue(v string) {
	o.Value = v
}

// GetEnabled returns the Enabled field value
func (o *CustomFieldOption) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CustomFieldOption) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CustomFieldOption) SetEnabled(v bool) {
	o.Enabled = v
}

func (o CustomFieldOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["value"] = o.Value
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

func (o *CustomFieldOption) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"value",
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomFieldOption := _CustomFieldOption{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomFieldOption)

	if err != nil {
		return err
	}

	*o = CustomFieldOption(varCustomFieldOption)

	return err
}

type NullableCustomFieldOption struct {
	value *CustomFieldOption
	isSet bool
}

func (v NullableCustomFieldOption) Get() *CustomFieldOption {
	return v.value
}

func (v *NullableCustomFieldOption) Set(val *CustomFieldOption) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldOption) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldOption(val *CustomFieldOption) *NullableCustomFieldOption {
	return &NullableCustomFieldOption{value: val, isSet: true}
}

func (v NullableCustomFieldOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


