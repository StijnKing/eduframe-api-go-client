/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Grade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Grade{}

// Grade struct for Grade
type Grade struct {
	// Unique identifier of the grade
	Id int32 `json:"id"`
	// Unique identifier of the user that awarded this grade
	GraderId int32 `json:"grader_id"`
	// The actual grade which is either the grade or the score
	Result string `json:"result"`
	// The grade awarded (at least one of grade and score is required)
	Grade NullableString `json:"grade"`
	// The score awarded (at least one of grade and score is required)
	Score NullableString `json:"score"`
	// Unique model identifier of the gradeable (enrollment / ...)
	GradeableId int32 `json:"gradeable_id"`
	// Model type of the gradeable (enrollment / ...)
	GradeableType string `json:"gradeable_type"`
	// Additional comment about the grade
	Comment NullableString `json:"comment"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _Grade Grade

// NewGrade instantiates a new Grade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrade(id int32, graderId int32, result string, grade NullableString, score NullableString, gradeableId int32, gradeableType string, comment NullableString, updatedAt time.Time, createdAt time.Time) *Grade {
	this := Grade{}
	this.Id = id
	this.GraderId = graderId
	this.Result = result
	this.Grade = grade
	this.Score = score
	this.GradeableId = gradeableId
	this.GradeableType = gradeableType
	this.Comment = comment
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewGradeWithDefaults instantiates a new Grade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGradeWithDefaults() *Grade {
	this := Grade{}
	return &this
}

// GetId returns the Id field value
func (o *Grade) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Grade) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Grade) SetId(v int32) {
	o.Id = v
}

// GetGraderId returns the GraderId field value
func (o *Grade) GetGraderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GraderId
}

// GetGraderIdOk returns a tuple with the GraderId field value
// and a boolean to check if the value has been set.
func (o *Grade) GetGraderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GraderId, true
}

// SetGraderId sets field value
func (o *Grade) SetGraderId(v int32) {
	o.GraderId = v
}

// GetResult returns the Result field value
func (o *Grade) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *Grade) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *Grade) SetResult(v string) {
	o.Result = v
}

// GetGrade returns the Grade field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Grade) GetGrade() string {
	if o == nil || o.Grade.Get() == nil {
		var ret string
		return ret
	}

	return *o.Grade.Get()
}

// GetGradeOk returns a tuple with the Grade field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Grade) GetGradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grade.Get(), o.Grade.IsSet()
}

// SetGrade sets field value
func (o *Grade) SetGrade(v string) {
	o.Grade.Set(&v)
}

// GetScore returns the Score field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Grade) GetScore() string {
	if o == nil || o.Score.Get() == nil {
		var ret string
		return ret
	}

	return *o.Score.Get()
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Grade) GetScoreOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Score.Get(), o.Score.IsSet()
}

// SetScore sets field value
func (o *Grade) SetScore(v string) {
	o.Score.Set(&v)
}

// GetGradeableId returns the GradeableId field value
func (o *Grade) GetGradeableId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GradeableId
}

// GetGradeableIdOk returns a tuple with the GradeableId field value
// and a boolean to check if the value has been set.
func (o *Grade) GetGradeableIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GradeableId, true
}

// SetGradeableId sets field value
func (o *Grade) SetGradeableId(v int32) {
	o.GradeableId = v
}

// GetGradeableType returns the GradeableType field value
func (o *Grade) GetGradeableType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GradeableType
}

// GetGradeableTypeOk returns a tuple with the GradeableType field value
// and a boolean to check if the value has been set.
func (o *Grade) GetGradeableTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GradeableType, true
}

// SetGradeableType sets field value
func (o *Grade) SetGradeableType(v string) {
	o.GradeableType = v
}

// GetComment returns the Comment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Grade) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}

	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Grade) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// SetComment sets field value
func (o *Grade) SetComment(v string) {
	o.Comment.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Grade) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Grade) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Grade) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Grade) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Grade) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Grade) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Grade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Grade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["grader_id"] = o.GraderId
	toSerialize["result"] = o.Result
	toSerialize["grade"] = o.Grade.Get()
	toSerialize["score"] = o.Score.Get()
	toSerialize["gradeable_id"] = o.GradeableId
	toSerialize["gradeable_type"] = o.GradeableType
	toSerialize["comment"] = o.Comment.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *Grade) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"grader_id",
		"result",
		"grade",
		"score",
		"gradeable_id",
		"gradeable_type",
		"comment",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGrade := _Grade{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGrade)

	if err != nil {
		return err
	}

	*o = Grade(varGrade)

	return err
}

type NullableGrade struct {
	value *Grade
	isSet bool
}

func (v NullableGrade) Get() *Grade {
	return v.value
}

func (v *NullableGrade) Set(val *Grade) {
	v.value = val
	v.isSet = true
}

func (v NullableGrade) IsSet() bool {
	return v.isSet
}

func (v *NullableGrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrade(val *Grade) *NullableGrade {
	return &NullableGrade{value: val, isSet: true}
}

func (v NullableGrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


