/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Invoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Invoice{}

// Invoice struct for Invoice
type Invoice struct {
	// Unique identifier of the invoice.
	Id int32 `json:"id"`
	// Reference id of the Invoice. Is used to find the invoice.
	ReferenceId string `json:"reference_id"`
	// The invoice number converted to an integer value.
	NumberInt NullableFloat32 `json:"number_int"`
	// Unique identifier of the order the invoice belongs to.
	OrderId NullableInt32 `json:"order_id"`
	// The order number of the invoice.
	OrderNumber NullableFloat32 `json:"order_number"`
	Status InvoiceStatus `json:"status"`
	// The expiration date of the invoice. Is set when the invoice is set to open.
	ExpirationDate NullableString `json:"expiration_date"`
	// The date when the invoice status was changed to open.
	OpenedAt NullableString `json:"opened_at"`
	// Human readable description of the invoice.
	Description string `json:"description"`
	// The name of the account that is paying. Is copied to the invoice and is thus not automatically updated if the account name changes.
	AccountName string `json:"account_name"`
	Currency Currency `json:"currency"`
	// The total cost of the invoice including VAT.
	TotalIncl string `json:"total_incl"`
	// The total cost of the invoice excluding VAT.
	TotalExcl string `json:"total_excl"`
	// The open cost of the invoice including VAT.
	TotalOpen string `json:"total_open"`
	// Url to the download path of the invoice in PDF format.
	PdfUrl string `json:"pdf_url"`
	// Url to the download path of the invoice in UML format.
	XmlUrl string `json:"xml_url"`
	// The invoice number which is unique per educator. If left empty, it autoincrements.
	Number string `json:"number"`
	// Identifier of the account.
	AccountId int32 `json:"account_id"`
	// Some description of the invoice which is displayed on the invoice.
	Feature NullableString `json:"feature"`
	// The note displayed at the bottom of the invoice.
	Footnote NullableString `json:"footnote"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _Invoice Invoice

// NewInvoice instantiates a new Invoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoice(id int32, referenceId string, numberInt NullableFloat32, orderId NullableInt32, orderNumber NullableFloat32, status InvoiceStatus, expirationDate NullableString, openedAt NullableString, description string, accountName string, currency Currency, totalIncl string, totalExcl string, totalOpen string, pdfUrl string, xmlUrl string, number string, accountId int32, feature NullableString, footnote NullableString, updatedAt time.Time, createdAt time.Time) *Invoice {
	this := Invoice{}
	this.Id = id
	this.ReferenceId = referenceId
	this.NumberInt = numberInt
	this.OrderId = orderId
	this.OrderNumber = orderNumber
	this.Status = status
	this.ExpirationDate = expirationDate
	this.OpenedAt = openedAt
	this.Description = description
	this.AccountName = accountName
	this.Currency = currency
	this.TotalIncl = totalIncl
	this.TotalExcl = totalExcl
	this.TotalOpen = totalOpen
	this.PdfUrl = pdfUrl
	this.XmlUrl = xmlUrl
	this.Number = number
	this.AccountId = accountId
	this.Feature = feature
	this.Footnote = footnote
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewInvoiceWithDefaults instantiates a new Invoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceWithDefaults() *Invoice {
	this := Invoice{}
	return &this
}

// GetId returns the Id field value
func (o *Invoice) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Invoice) SetId(v int32) {
	o.Id = v
}

// GetReferenceId returns the ReferenceId field value
func (o *Invoice) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *Invoice) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetNumberInt returns the NumberInt field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *Invoice) GetNumberInt() float32 {
	if o == nil || o.NumberInt.Get() == nil {
		var ret float32
		return ret
	}

	return *o.NumberInt.Get()
}

// GetNumberIntOk returns a tuple with the NumberInt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetNumberIntOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberInt.Get(), o.NumberInt.IsSet()
}

// SetNumberInt sets field value
func (o *Invoice) SetNumberInt(v float32) {
	o.NumberInt.Set(&v)
}

// GetOrderId returns the OrderId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Invoice) GetOrderId() int32 {
	if o == nil || o.OrderId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// SetOrderId sets field value
func (o *Invoice) SetOrderId(v int32) {
	o.OrderId.Set(&v)
}

// GetOrderNumber returns the OrderNumber field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *Invoice) GetOrderNumber() float32 {
	if o == nil || o.OrderNumber.Get() == nil {
		var ret float32
		return ret
	}

	return *o.OrderNumber.Get()
}

// GetOrderNumberOk returns a tuple with the OrderNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetOrderNumberOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderNumber.Get(), o.OrderNumber.IsSet()
}

// SetOrderNumber sets field value
func (o *Invoice) SetOrderNumber(v float32) {
	o.OrderNumber.Set(&v)
}

// GetStatus returns the Status field value
func (o *Invoice) GetStatus() InvoiceStatus {
	if o == nil {
		var ret InvoiceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetStatusOk() (*InvoiceStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Invoice) SetStatus(v InvoiceStatus) {
	o.Status = v
}

// GetExpirationDate returns the ExpirationDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Invoice) GetExpirationDate() string {
	if o == nil || o.ExpirationDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExpirationDate.Get()
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetExpirationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpirationDate.Get(), o.ExpirationDate.IsSet()
}

// SetExpirationDate sets field value
func (o *Invoice) SetExpirationDate(v string) {
	o.ExpirationDate.Set(&v)
}

// GetOpenedAt returns the OpenedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Invoice) GetOpenedAt() string {
	if o == nil || o.OpenedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.OpenedAt.Get()
}

// GetOpenedAtOk returns a tuple with the OpenedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetOpenedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpenedAt.Get(), o.OpenedAt.IsSet()
}

// SetOpenedAt sets field value
func (o *Invoice) SetOpenedAt(v string) {
	o.OpenedAt.Set(&v)
}

// GetDescription returns the Description field value
func (o *Invoice) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Invoice) SetDescription(v string) {
	o.Description = v
}

// GetAccountName returns the AccountName field value
func (o *Invoice) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *Invoice) SetAccountName(v string) {
	o.AccountName = v
}

// GetCurrency returns the Currency field value
func (o *Invoice) GetCurrency() Currency {
	if o == nil {
		var ret Currency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetCurrencyOk() (*Currency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Invoice) SetCurrency(v Currency) {
	o.Currency = v
}

// GetTotalIncl returns the TotalIncl field value
func (o *Invoice) GetTotalIncl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalIncl
}

// GetTotalInclOk returns a tuple with the TotalIncl field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalInclOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalIncl, true
}

// SetTotalIncl sets field value
func (o *Invoice) SetTotalIncl(v string) {
	o.TotalIncl = v
}

// GetTotalExcl returns the TotalExcl field value
func (o *Invoice) GetTotalExcl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalExcl
}

// GetTotalExclOk returns a tuple with the TotalExcl field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalExclOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalExcl, true
}

// SetTotalExcl sets field value
func (o *Invoice) SetTotalExcl(v string) {
	o.TotalExcl = v
}

// GetTotalOpen returns the TotalOpen field value
func (o *Invoice) GetTotalOpen() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalOpen
}

// GetTotalOpenOk returns a tuple with the TotalOpen field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetTotalOpenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalOpen, true
}

// SetTotalOpen sets field value
func (o *Invoice) SetTotalOpen(v string) {
	o.TotalOpen = v
}

// GetPdfUrl returns the PdfUrl field value
func (o *Invoice) GetPdfUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PdfUrl
}

// GetPdfUrlOk returns a tuple with the PdfUrl field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetPdfUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PdfUrl, true
}

// SetPdfUrl sets field value
func (o *Invoice) SetPdfUrl(v string) {
	o.PdfUrl = v
}

// GetXmlUrl returns the XmlUrl field value
func (o *Invoice) GetXmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.XmlUrl
}

// GetXmlUrlOk returns a tuple with the XmlUrl field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetXmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.XmlUrl, true
}

// SetXmlUrl sets field value
func (o *Invoice) SetXmlUrl(v string) {
	o.XmlUrl = v
}

// GetNumber returns the Number field value
func (o *Invoice) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *Invoice) SetNumber(v string) {
	o.Number = v
}

// GetAccountId returns the AccountId field value
func (o *Invoice) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Invoice) SetAccountId(v int32) {
	o.AccountId = v
}

// GetFeature returns the Feature field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Invoice) GetFeature() string {
	if o == nil || o.Feature.Get() == nil {
		var ret string
		return ret
	}

	return *o.Feature.Get()
}

// GetFeatureOk returns a tuple with the Feature field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetFeatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Feature.Get(), o.Feature.IsSet()
}

// SetFeature sets field value
func (o *Invoice) SetFeature(v string) {
	o.Feature.Set(&v)
}

// GetFootnote returns the Footnote field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Invoice) GetFootnote() string {
	if o == nil || o.Footnote.Get() == nil {
		var ret string
		return ret
	}

	return *o.Footnote.Get()
}

// GetFootnoteOk returns a tuple with the Footnote field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Invoice) GetFootnoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Footnote.Get(), o.Footnote.IsSet()
}

// SetFootnote sets field value
func (o *Invoice) SetFootnote(v string) {
	o.Footnote.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Invoice) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Invoice) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Invoice) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Invoice) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Invoice) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Invoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Invoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["reference_id"] = o.ReferenceId
	toSerialize["number_int"] = o.NumberInt.Get()
	toSerialize["order_id"] = o.OrderId.Get()
	toSerialize["order_number"] = o.OrderNumber.Get()
	toSerialize["status"] = o.Status
	toSerialize["expiration_date"] = o.ExpirationDate.Get()
	toSerialize["opened_at"] = o.OpenedAt.Get()
	toSerialize["description"] = o.Description
	toSerialize["account_name"] = o.AccountName
	toSerialize["currency"] = o.Currency
	toSerialize["total_incl"] = o.TotalIncl
	toSerialize["total_excl"] = o.TotalExcl
	toSerialize["total_open"] = o.TotalOpen
	toSerialize["pdf_url"] = o.PdfUrl
	toSerialize["xml_url"] = o.XmlUrl
	toSerialize["number"] = o.Number
	toSerialize["account_id"] = o.AccountId
	toSerialize["feature"] = o.Feature.Get()
	toSerialize["footnote"] = o.Footnote.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *Invoice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"reference_id",
		"number_int",
		"order_id",
		"order_number",
		"status",
		"expiration_date",
		"opened_at",
		"description",
		"account_name",
		"currency",
		"total_incl",
		"total_excl",
		"total_open",
		"pdf_url",
		"xml_url",
		"number",
		"account_id",
		"feature",
		"footnote",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoice := _Invoice{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoice)

	if err != nil {
		return err
	}

	*o = Invoice(varInvoice)

	return err
}

type NullableInvoice struct {
	value *Invoice
	isSet bool
}

func (v NullableInvoice) Get() *Invoice {
	return v.value
}

func (v *NullableInvoice) Set(val *Invoice) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoice(val *Invoice) *NullableInvoice {
	return &NullableInvoice{value: val, isSet: true}
}

func (v NullableInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


