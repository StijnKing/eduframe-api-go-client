/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the InvoiceItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceItem{}

// InvoiceItem struct for InvoiceItem
type InvoiceItem struct {
	// Unique identifier of the invoice item.
	Id int32 `json:"id"`
	// The name of the invoice item.
	Name string `json:"name"`
	// Integer representing the number of units of the invoice item.
	Units int32 `json:"units"`
	// Decimal representing the price of an unit.
	UnitPrice string `json:"unit_price"`
	// Identifier of the invoice vat.
	InvoiceVatId int32 `json:"invoice_vat_id"`
	// Unique identifier of the catalog variant.
	CatalogVariantId NullableInt32 `json:"catalog_variant_id"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _InvoiceItem InvoiceItem

// NewInvoiceItem instantiates a new InvoiceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceItem(id int32, name string, units int32, unitPrice string, invoiceVatId int32, catalogVariantId NullableInt32, updatedAt time.Time, createdAt time.Time) *InvoiceItem {
	this := InvoiceItem{}
	this.Id = id
	this.Name = name
	this.Units = units
	this.UnitPrice = unitPrice
	this.InvoiceVatId = invoiceVatId
	this.CatalogVariantId = catalogVariantId
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewInvoiceItemWithDefaults instantiates a new InvoiceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceItemWithDefaults() *InvoiceItem {
	this := InvoiceItem{}
	return &this
}

// GetId returns the Id field value
func (o *InvoiceItem) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InvoiceItem) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *InvoiceItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InvoiceItem) SetName(v string) {
	o.Name = v
}

// GetUnits returns the Units field value
func (o *InvoiceItem) GetUnits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetUnitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Units, true
}

// SetUnits sets field value
func (o *InvoiceItem) SetUnits(v int32) {
	o.Units = v
}

// GetUnitPrice returns the UnitPrice field value
func (o *InvoiceItem) GetUnitPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetUnitPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitPrice, true
}

// SetUnitPrice sets field value
func (o *InvoiceItem) SetUnitPrice(v string) {
	o.UnitPrice = v
}

// GetInvoiceVatId returns the InvoiceVatId field value
func (o *InvoiceItem) GetInvoiceVatId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InvoiceVatId
}

// GetInvoiceVatIdOk returns a tuple with the InvoiceVatId field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetInvoiceVatIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceVatId, true
}

// SetInvoiceVatId sets field value
func (o *InvoiceItem) SetInvoiceVatId(v int32) {
	o.InvoiceVatId = v
}

// GetCatalogVariantId returns the CatalogVariantId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *InvoiceItem) GetCatalogVariantId() int32 {
	if o == nil || o.CatalogVariantId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CatalogVariantId.Get()
}

// GetCatalogVariantIdOk returns a tuple with the CatalogVariantId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceItem) GetCatalogVariantIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogVariantId.Get(), o.CatalogVariantId.IsSet()
}

// SetCatalogVariantId sets field value
func (o *InvoiceItem) SetCatalogVariantId(v int32) {
	o.CatalogVariantId.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *InvoiceItem) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *InvoiceItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *InvoiceItem) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *InvoiceItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *InvoiceItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o InvoiceItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["units"] = o.Units
	toSerialize["unit_price"] = o.UnitPrice
	toSerialize["invoice_vat_id"] = o.InvoiceVatId
	toSerialize["catalog_variant_id"] = o.CatalogVariantId.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *InvoiceItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"units",
		"unit_price",
		"invoice_vat_id",
		"catalog_variant_id",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceItem := _InvoiceItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceItem)

	if err != nil {
		return err
	}

	*o = InvoiceItem(varInvoiceItem)

	return err
}

type NullableInvoiceItem struct {
	value *InvoiceItem
	isSet bool
}

func (v NullableInvoiceItem) Get() *InvoiceItem {
	return v.value
}

func (v *NullableInvoiceItem) Set(val *InvoiceItem) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceItem) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceItem(val *InvoiceItem) *NullableInvoiceItem {
	return &NullableInvoiceItem{value: val, isSet: true}
}

func (v NullableInvoiceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


