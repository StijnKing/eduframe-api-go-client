/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Lead type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Lead{}

// Lead struct for Lead
type Lead struct {
	// Unique identifier of the lead
	Id int32 `json:"id"`
	// Indicates the lead was created
	CreationMethod string `json:"creation_method"`
	// Text supplied at referral
	ReferralText NullableString `json:"referral_text"`
	// Title of the lead
	Title string `json:"title"`
	// ID of the account linked to this lead
	AccountId NullableInt32 `json:"account_id"`
	// ID of the user linked to this lead
	UserId NullableInt32 `json:"user_id"`
	// An array of integers representing unique identifier values associated with labels. 
	LabelIds []int32 `json:"label_ids"`
	// Decimal representing the price of a lead
	Value NullableString `json:"value"`
	// Name of the company where this lead comes from
	CompanyName NullableString `json:"company_name"`
	// The first name of the lead
	FirstName NullableString `json:"first_name"`
	// The middle name of the lead
	MiddleName NullableString `json:"middle_name"`
	// The last name of the lead
	LastName NullableString `json:"last_name"`
	// ID of administrator that owns the lead
	AdministratorId NullableInt32 `json:"administrator_id"`
	// The email of the lead
	Email NullableString `json:"email"`
	// The phone number of the lead
	Phone NullableString `json:"phone"`
	// The status of the lead
	Status string `json:"status"`
	// Star scoring for the lead
	Quality NullableString `json:"quality"`
	// Indicates if lead wants to receive the newsletter or not
	WantsNewsletter bool `json:"wants_newsletter"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _Lead Lead

// NewLead instantiates a new Lead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLead(id int32, creationMethod string, referralText NullableString, title string, accountId NullableInt32, userId NullableInt32, labelIds []int32, value NullableString, companyName NullableString, firstName NullableString, middleName NullableString, lastName NullableString, administratorId NullableInt32, email NullableString, phone NullableString, status string, quality NullableString, wantsNewsletter bool, updatedAt time.Time, createdAt time.Time) *Lead {
	this := Lead{}
	this.Id = id
	this.CreationMethod = creationMethod
	this.ReferralText = referralText
	this.Title = title
	this.AccountId = accountId
	this.UserId = userId
	this.LabelIds = labelIds
	this.Value = value
	this.CompanyName = companyName
	this.FirstName = firstName
	this.MiddleName = middleName
	this.LastName = lastName
	this.AdministratorId = administratorId
	this.Email = email
	this.Phone = phone
	this.Status = status
	this.Quality = quality
	this.WantsNewsletter = wantsNewsletter
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewLeadWithDefaults instantiates a new Lead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeadWithDefaults() *Lead {
	this := Lead{}
	return &this
}

// GetId returns the Id field value
func (o *Lead) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Lead) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Lead) SetId(v int32) {
	o.Id = v
}

// GetCreationMethod returns the CreationMethod field value
func (o *Lead) GetCreationMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationMethod
}

// GetCreationMethodOk returns a tuple with the CreationMethod field value
// and a boolean to check if the value has been set.
func (o *Lead) GetCreationMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationMethod, true
}

// SetCreationMethod sets field value
func (o *Lead) SetCreationMethod(v string) {
	o.CreationMethod = v
}

// GetReferralText returns the ReferralText field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetReferralText() string {
	if o == nil || o.ReferralText.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReferralText.Get()
}

// GetReferralTextOk returns a tuple with the ReferralText field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetReferralTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferralText.Get(), o.ReferralText.IsSet()
}

// SetReferralText sets field value
func (o *Lead) SetReferralText(v string) {
	o.ReferralText.Set(&v)
}

// GetTitle returns the Title field value
func (o *Lead) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Lead) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Lead) SetTitle(v string) {
	o.Title = v
}

// GetAccountId returns the AccountId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Lead) GetAccountId() int32 {
	if o == nil || o.AccountId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// SetAccountId sets field value
func (o *Lead) SetAccountId(v int32) {
	o.AccountId.Set(&v)
}

// GetUserId returns the UserId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Lead) GetUserId() int32 {
	if o == nil || o.UserId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// SetUserId sets field value
func (o *Lead) SetUserId(v int32) {
	o.UserId.Set(&v)
}

// GetLabelIds returns the LabelIds field value
func (o *Lead) GetLabelIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *Lead) GetLabelIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *Lead) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetValue returns the Value field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetValue() string {
	if o == nil || o.Value.Get() == nil {
		var ret string
		return ret
	}

	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// SetValue sets field value
func (o *Lead) SetValue(v string) {
	o.Value.Set(&v)
}

// GetCompanyName returns the CompanyName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetCompanyName() string {
	if o == nil || o.CompanyName.Get() == nil {
		var ret string
		return ret
	}

	return *o.CompanyName.Get()
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyName.Get(), o.CompanyName.IsSet()
}

// SetCompanyName sets field value
func (o *Lead) SetCompanyName(v string) {
	o.CompanyName.Set(&v)
}

// GetFirstName returns the FirstName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetFirstName() string {
	if o == nil || o.FirstName.Get() == nil {
		var ret string
		return ret
	}

	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// SetFirstName sets field value
func (o *Lead) SetFirstName(v string) {
	o.FirstName.Set(&v)
}

// GetMiddleName returns the MiddleName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetMiddleName() string {
	if o == nil || o.MiddleName.Get() == nil {
		var ret string
		return ret
	}

	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetMiddleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// SetMiddleName sets field value
func (o *Lead) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}

// GetLastName returns the LastName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetLastName() string {
	if o == nil || o.LastName.Get() == nil {
		var ret string
		return ret
	}

	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// SetLastName sets field value
func (o *Lead) SetLastName(v string) {
	o.LastName.Set(&v)
}

// GetAdministratorId returns the AdministratorId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Lead) GetAdministratorId() int32 {
	if o == nil || o.AdministratorId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AdministratorId.Get()
}

// GetAdministratorIdOk returns a tuple with the AdministratorId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetAdministratorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdministratorId.Get(), o.AdministratorId.IsSet()
}

// SetAdministratorId sets field value
func (o *Lead) SetAdministratorId(v int32) {
	o.AdministratorId.Set(&v)
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}

	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// SetEmail sets field value
func (o *Lead) SetEmail(v string) {
	o.Email.Set(&v)
}

// GetPhone returns the Phone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetPhone() string {
	if o == nil || o.Phone.Get() == nil {
		var ret string
		return ret
	}

	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// SetPhone sets field value
func (o *Lead) SetPhone(v string) {
	o.Phone.Set(&v)
}

// GetStatus returns the Status field value
func (o *Lead) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Lead) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Lead) SetStatus(v string) {
	o.Status = v
}

// GetQuality returns the Quality field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Lead) GetQuality() string {
	if o == nil || o.Quality.Get() == nil {
		var ret string
		return ret
	}

	return *o.Quality.Get()
}

// GetQualityOk returns a tuple with the Quality field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Lead) GetQualityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quality.Get(), o.Quality.IsSet()
}

// SetQuality sets field value
func (o *Lead) SetQuality(v string) {
	o.Quality.Set(&v)
}

// GetWantsNewsletter returns the WantsNewsletter field value
func (o *Lead) GetWantsNewsletter() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WantsNewsletter
}

// GetWantsNewsletterOk returns a tuple with the WantsNewsletter field value
// and a boolean to check if the value has been set.
func (o *Lead) GetWantsNewsletterOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WantsNewsletter, true
}

// SetWantsNewsletter sets field value
func (o *Lead) SetWantsNewsletter(v bool) {
	o.WantsNewsletter = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Lead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Lead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Lead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Lead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Lead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Lead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Lead) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Lead) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["creation_method"] = o.CreationMethod
	toSerialize["referral_text"] = o.ReferralText.Get()
	toSerialize["title"] = o.Title
	toSerialize["account_id"] = o.AccountId.Get()
	toSerialize["user_id"] = o.UserId.Get()
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["value"] = o.Value.Get()
	toSerialize["company_name"] = o.CompanyName.Get()
	toSerialize["first_name"] = o.FirstName.Get()
	toSerialize["middle_name"] = o.MiddleName.Get()
	toSerialize["last_name"] = o.LastName.Get()
	toSerialize["administrator_id"] = o.AdministratorId.Get()
	toSerialize["email"] = o.Email.Get()
	toSerialize["phone"] = o.Phone.Get()
	toSerialize["status"] = o.Status
	toSerialize["quality"] = o.Quality.Get()
	toSerialize["wants_newsletter"] = o.WantsNewsletter
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *Lead) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"creation_method",
		"referral_text",
		"title",
		"account_id",
		"user_id",
		"label_ids",
		"value",
		"company_name",
		"first_name",
		"middle_name",
		"last_name",
		"administrator_id",
		"email",
		"phone",
		"status",
		"quality",
		"wants_newsletter",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLead := _Lead{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLead)

	if err != nil {
		return err
	}

	*o = Lead(varLead)

	return err
}

type NullableLead struct {
	value *Lead
	isSet bool
}

func (v NullableLead) Get() *Lead {
	return v.value
}

func (v *NullableLead) Set(val *Lead) {
	v.value = val
	v.isSet = true
}

func (v NullableLead) IsSet() bool {
	return v.isSet
}

func (v *NullableLead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLead(val *Lead) *NullableLead {
	return &NullableLead{value: val, isSet: true}
}

func (v NullableLead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


