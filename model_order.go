/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Order type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Order{}

// Order struct for Order
type Order struct {
	// Unique identifier of the order.
	Id int32 `json:"id"`
	// Educator specific identifier of the order which autoincrements.
	Number float32 `json:"number"`
	Status OrderStatus `json:"status"`
	// Number of students in this order.
	NumberOfStudents int32 `json:"number_of_students"`
	// Where the order originated from ex. Unknown, backend, signup.
	Origin string `json:"origin"`
	// Comment from the customer.
	CustomerComment NullableString `json:"customer_comment"`
	// Decimal representing the cost of the order excluding VAT
	TotalCostExcl NullableString `json:"total_cost_excl"`
	// Decimal representing the cost of the order including VAT
	TotalCostIncl NullableString `json:"total_cost_incl"`
	// Decimal representing the value of the order
	Cost NullableString `json:"cost"`
	CostScheme CostScheme `json:"cost_scheme"`
	// Unique identifier of the orders CatalogVariant.
	CatalogVariantId int32 `json:"catalog_variant_id"`
	// Unique identifier of the orders Creator (User).
	CreatorId NullableInt32 `json:"creator_id"`
	// Unique identifier of the orders Account.
	AccountId int32 `json:"account_id"`
	// Unique identifier of the orders PaymentMethod.
	PaymentMethodId NullableInt32 `json:"payment_method_id,omitempty"`
	// Unique identifier of the orders PaymentOption.
	PaymentOptionId NullableInt32 `json:"payment_option_id"`
	// An array of integers representing unique identifier values associated with labels. 
	LabelIds []int32 `json:"label_ids"`
	// The discount code used for this order.
	DiscountCode NullableString `json:"discount_code,omitempty"`
	// Decimal representing the total discount applied to this order.
	TotalDiscount NullableString `json:"total_discount,omitempty"`
	// Identifier of the referral.
	ReferralId NullableInt32 `json:"referral_id"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _Order Order

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder(id int32, number float32, status OrderStatus, numberOfStudents int32, origin string, customerComment NullableString, totalCostExcl NullableString, totalCostIncl NullableString, cost NullableString, costScheme CostScheme, catalogVariantId int32, creatorId NullableInt32, accountId int32, paymentOptionId NullableInt32, labelIds []int32, referralId NullableInt32, updatedAt time.Time, createdAt time.Time) *Order {
	this := Order{}
	this.Id = id
	this.Number = number
	this.Status = status
	this.NumberOfStudents = numberOfStudents
	this.Origin = origin
	this.CustomerComment = customerComment
	this.TotalCostExcl = totalCostExcl
	this.TotalCostIncl = totalCostIncl
	this.Cost = cost
	this.CostScheme = costScheme
	this.CatalogVariantId = catalogVariantId
	this.CreatorId = creatorId
	this.AccountId = accountId
	this.PaymentOptionId = paymentOptionId
	this.LabelIds = labelIds
	this.ReferralId = referralId
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetId returns the Id field value
func (o *Order) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Order) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Order) SetId(v int32) {
	o.Id = v
}

// GetNumber returns the Number field value
func (o *Order) GetNumber() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *Order) GetNumberOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *Order) SetNumber(v float32) {
	o.Number = v
}

// GetStatus returns the Status field value
func (o *Order) GetStatus() OrderStatus {
	if o == nil {
		var ret OrderStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Order) GetStatusOk() (*OrderStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Order) SetStatus(v OrderStatus) {
	o.Status = v
}

// GetNumberOfStudents returns the NumberOfStudents field value
func (o *Order) GetNumberOfStudents() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfStudents
}

// GetNumberOfStudentsOk returns a tuple with the NumberOfStudents field value
// and a boolean to check if the value has been set.
func (o *Order) GetNumberOfStudentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfStudents, true
}

// SetNumberOfStudents sets field value
func (o *Order) SetNumberOfStudents(v int32) {
	o.NumberOfStudents = v
}

// GetOrigin returns the Origin field value
func (o *Order) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *Order) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *Order) SetOrigin(v string) {
	o.Origin = v
}

// GetCustomerComment returns the CustomerComment field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Order) GetCustomerComment() string {
	if o == nil || o.CustomerComment.Get() == nil {
		var ret string
		return ret
	}

	return *o.CustomerComment.Get()
}

// GetCustomerCommentOk returns a tuple with the CustomerComment field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetCustomerCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerComment.Get(), o.CustomerComment.IsSet()
}

// SetCustomerComment sets field value
func (o *Order) SetCustomerComment(v string) {
	o.CustomerComment.Set(&v)
}

// GetTotalCostExcl returns the TotalCostExcl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Order) GetTotalCostExcl() string {
	if o == nil || o.TotalCostExcl.Get() == nil {
		var ret string
		return ret
	}

	return *o.TotalCostExcl.Get()
}

// GetTotalCostExclOk returns a tuple with the TotalCostExcl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetTotalCostExclOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCostExcl.Get(), o.TotalCostExcl.IsSet()
}

// SetTotalCostExcl sets field value
func (o *Order) SetTotalCostExcl(v string) {
	o.TotalCostExcl.Set(&v)
}

// GetTotalCostIncl returns the TotalCostIncl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Order) GetTotalCostIncl() string {
	if o == nil || o.TotalCostIncl.Get() == nil {
		var ret string
		return ret
	}

	return *o.TotalCostIncl.Get()
}

// GetTotalCostInclOk returns a tuple with the TotalCostIncl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetTotalCostInclOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCostIncl.Get(), o.TotalCostIncl.IsSet()
}

// SetTotalCostIncl sets field value
func (o *Order) SetTotalCostIncl(v string) {
	o.TotalCostIncl.Set(&v)
}

// GetCost returns the Cost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Order) GetCost() string {
	if o == nil || o.Cost.Get() == nil {
		var ret string
		return ret
	}

	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// SetCost sets field value
func (o *Order) SetCost(v string) {
	o.Cost.Set(&v)
}

// GetCostScheme returns the CostScheme field value
func (o *Order) GetCostScheme() CostScheme {
	if o == nil {
		var ret CostScheme
		return ret
	}

	return o.CostScheme
}

// GetCostSchemeOk returns a tuple with the CostScheme field value
// and a boolean to check if the value has been set.
func (o *Order) GetCostSchemeOk() (*CostScheme, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostScheme, true
}

// SetCostScheme sets field value
func (o *Order) SetCostScheme(v CostScheme) {
	o.CostScheme = v
}

// GetCatalogVariantId returns the CatalogVariantId field value
func (o *Order) GetCatalogVariantId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CatalogVariantId
}

// GetCatalogVariantIdOk returns a tuple with the CatalogVariantId field value
// and a boolean to check if the value has been set.
func (o *Order) GetCatalogVariantIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogVariantId, true
}

// SetCatalogVariantId sets field value
func (o *Order) SetCatalogVariantId(v int32) {
	o.CatalogVariantId = v
}

// GetCreatorId returns the CreatorId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Order) GetCreatorId() int32 {
	if o == nil || o.CreatorId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// SetCreatorId sets field value
func (o *Order) SetCreatorId(v int32) {
	o.CreatorId.Set(&v)
}

// GetAccountId returns the AccountId field value
func (o *Order) GetAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Order) GetAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Order) SetAccountId(v int32) {
	o.AccountId = v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetPaymentMethodId() int32 {
	if o == nil || IsNil(o.PaymentMethodId.Get()) {
		var ret int32
		return ret
	}
	return *o.PaymentMethodId.Get()
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetPaymentMethodIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethodId.Get(), o.PaymentMethodId.IsSet()
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *Order) HasPaymentMethodId() bool {
	if o != nil && o.PaymentMethodId.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given NullableInt32 and assigns it to the PaymentMethodId field.
func (o *Order) SetPaymentMethodId(v int32) {
	o.PaymentMethodId.Set(&v)
}
// SetPaymentMethodIdNil sets the value for PaymentMethodId to be an explicit nil
func (o *Order) SetPaymentMethodIdNil() {
	o.PaymentMethodId.Set(nil)
}

// UnsetPaymentMethodId ensures that no value is present for PaymentMethodId, not even an explicit nil
func (o *Order) UnsetPaymentMethodId() {
	o.PaymentMethodId.Unset()
}

// GetPaymentOptionId returns the PaymentOptionId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Order) GetPaymentOptionId() int32 {
	if o == nil || o.PaymentOptionId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.PaymentOptionId.Get()
}

// GetPaymentOptionIdOk returns a tuple with the PaymentOptionId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetPaymentOptionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentOptionId.Get(), o.PaymentOptionId.IsSet()
}

// SetPaymentOptionId sets field value
func (o *Order) SetPaymentOptionId(v int32) {
	o.PaymentOptionId.Set(&v)
}

// GetLabelIds returns the LabelIds field value
func (o *Order) GetLabelIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *Order) GetLabelIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *Order) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetDiscountCode returns the DiscountCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetDiscountCode() string {
	if o == nil || IsNil(o.DiscountCode.Get()) {
		var ret string
		return ret
	}
	return *o.DiscountCode.Get()
}

// GetDiscountCodeOk returns a tuple with the DiscountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetDiscountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscountCode.Get(), o.DiscountCode.IsSet()
}

// HasDiscountCode returns a boolean if a field has been set.
func (o *Order) HasDiscountCode() bool {
	if o != nil && o.DiscountCode.IsSet() {
		return true
	}

	return false
}

// SetDiscountCode gets a reference to the given NullableString and assigns it to the DiscountCode field.
func (o *Order) SetDiscountCode(v string) {
	o.DiscountCode.Set(&v)
}
// SetDiscountCodeNil sets the value for DiscountCode to be an explicit nil
func (o *Order) SetDiscountCodeNil() {
	o.DiscountCode.Set(nil)
}

// UnsetDiscountCode ensures that no value is present for DiscountCode, not even an explicit nil
func (o *Order) UnsetDiscountCode() {
	o.DiscountCode.Unset()
}

// GetTotalDiscount returns the TotalDiscount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Order) GetTotalDiscount() string {
	if o == nil || IsNil(o.TotalDiscount.Get()) {
		var ret string
		return ret
	}
	return *o.TotalDiscount.Get()
}

// GetTotalDiscountOk returns a tuple with the TotalDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetTotalDiscountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalDiscount.Get(), o.TotalDiscount.IsSet()
}

// HasTotalDiscount returns a boolean if a field has been set.
func (o *Order) HasTotalDiscount() bool {
	if o != nil && o.TotalDiscount.IsSet() {
		return true
	}

	return false
}

// SetTotalDiscount gets a reference to the given NullableString and assigns it to the TotalDiscount field.
func (o *Order) SetTotalDiscount(v string) {
	o.TotalDiscount.Set(&v)
}
// SetTotalDiscountNil sets the value for TotalDiscount to be an explicit nil
func (o *Order) SetTotalDiscountNil() {
	o.TotalDiscount.Set(nil)
}

// UnsetTotalDiscount ensures that no value is present for TotalDiscount, not even an explicit nil
func (o *Order) UnsetTotalDiscount() {
	o.TotalDiscount.Unset()
}

// GetReferralId returns the ReferralId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Order) GetReferralId() int32 {
	if o == nil || o.ReferralId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ReferralId.Get()
}

// GetReferralIdOk returns a tuple with the ReferralId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Order) GetReferralIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferralId.Get(), o.ReferralId.IsSet()
}

// SetReferralId sets field value
func (o *Order) SetReferralId(v int32) {
	o.ReferralId.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Order) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Order) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Order) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Order) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Order) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Order) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Order) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["number"] = o.Number
	toSerialize["status"] = o.Status
	toSerialize["number_of_students"] = o.NumberOfStudents
	toSerialize["origin"] = o.Origin
	toSerialize["customer_comment"] = o.CustomerComment.Get()
	toSerialize["total_cost_excl"] = o.TotalCostExcl.Get()
	toSerialize["total_cost_incl"] = o.TotalCostIncl.Get()
	toSerialize["cost"] = o.Cost.Get()
	toSerialize["cost_scheme"] = o.CostScheme
	toSerialize["catalog_variant_id"] = o.CatalogVariantId
	toSerialize["creator_id"] = o.CreatorId.Get()
	toSerialize["account_id"] = o.AccountId
	if o.PaymentMethodId.IsSet() {
		toSerialize["payment_method_id"] = o.PaymentMethodId.Get()
	}
	toSerialize["payment_option_id"] = o.PaymentOptionId.Get()
	toSerialize["label_ids"] = o.LabelIds
	if o.DiscountCode.IsSet() {
		toSerialize["discount_code"] = o.DiscountCode.Get()
	}
	if o.TotalDiscount.IsSet() {
		toSerialize["total_discount"] = o.TotalDiscount.Get()
	}
	toSerialize["referral_id"] = o.ReferralId.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *Order) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"number",
		"status",
		"number_of_students",
		"origin",
		"customer_comment",
		"total_cost_excl",
		"total_cost_incl",
		"cost",
		"cost_scheme",
		"catalog_variant_id",
		"creator_id",
		"account_id",
		"payment_option_id",
		"label_ids",
		"referral_id",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrder := _Order{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrder)

	if err != nil {
		return err
	}

	*o = Order(varOrder)

	return err
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


