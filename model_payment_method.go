/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethod{}

// PaymentMethod struct for PaymentMethod
type PaymentMethod struct {
	// Unique identifier of the payment method.
	Id int32 `json:"id"`
	// Human readable name of the payment method.
	Name string `json:"name"`
	// The type of the integration.
	Gateway NullableString `json:"gateway"`
	// Unique identifier of the optionally linked plugin.
	PluginId NullableInt32 `json:"plugin_id"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethod PaymentMethod

// NewPaymentMethod instantiates a new PaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethod(id int32, name string, gateway NullableString, pluginId NullableInt32) *PaymentMethod {
	this := PaymentMethod{}
	this.Id = id
	this.Name = name
	this.Gateway = gateway
	this.PluginId = pluginId
	return &this
}

// NewPaymentMethodWithDefaults instantiates a new PaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodWithDefaults() *PaymentMethod {
	this := PaymentMethod{}
	return &this
}

// GetId returns the Id field value
func (o *PaymentMethod) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PaymentMethod) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PaymentMethod) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PaymentMethod) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PaymentMethod) SetName(v string) {
	o.Name = v
}

// GetGateway returns the Gateway field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PaymentMethod) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}

	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentMethod) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// SetGateway sets field value
func (o *PaymentMethod) SetGateway(v string) {
	o.Gateway.Set(&v)
}

// GetPluginId returns the PluginId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PaymentMethod) GetPluginId() int32 {
	if o == nil || o.PluginId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.PluginId.Get()
}

// GetPluginIdOk returns a tuple with the PluginId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentMethod) GetPluginIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PluginId.Get(), o.PluginId.IsSet()
}

// SetPluginId sets field value
func (o *PaymentMethod) SetPluginId(v int32) {
	o.PluginId.Set(&v)
}

func (o PaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["gateway"] = o.Gateway.Get()
	toSerialize["plugin_id"] = o.PluginId.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethod) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"gateway",
		"plugin_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentMethod := _PaymentMethod{}

	err = json.Unmarshal(data, &varPaymentMethod)

	if err != nil {
		return err
	}

	*o = PaymentMethod(varPaymentMethod)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "gateway")
		delete(additionalProperties, "plugin_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethod struct {
	value *PaymentMethod
	isSet bool
}

func (v NullablePaymentMethod) Get() *PaymentMethod {
	return v.value
}

func (v *NullablePaymentMethod) Set(val *PaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethod(val *PaymentMethod) *NullablePaymentMethod {
	return &NullablePaymentMethod{value: val, isSet: true}
}

func (v NullablePaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


