/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ProductWithIncludes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductWithIncludes{}

// ProductWithIncludes struct for ProductWithIncludes
type ProductWithIncludes struct {
	// Unique identifier of the catalog product.
	Id int32 `json:"id"`
	// Name of the product.
	Name string `json:"name"`
	// Slug of the product.
	Slug string `json:"slug"`
	// An array of integers representing unique identifier values associated with labels. 
	LabelIds []int32 `json:"label_ids"`
	CostScheme CostScheme `json:"cost_scheme"`
	// Cost of the product.
	Cost NullableString `json:"cost"`
	Currency Currency `json:"currency"`
	ProductableType ProductableType `json:"productable_type"`
	// Unique identifier of the productable.
	ProductableId int32 `json:"productable_id"`
	// URL to the original avatar image file.
	Avatar string `json:"avatar"`
	// Sorting position of the element. Lower is higher.
	Position int32 `json:"position"`
	// Conditions for this product with a fallback to the default course conditions of the educator.
	ConditionsOrDefault NullableString `json:"conditions_or_default"`
	// Identifier of the category of the course.
	CategoryId int32 `json:"category_id"`
	// Boolean showing if the product is published or not.
	IsPublished bool `json:"is_published"`
	// Boolean showing if the product is shown on the website or not.
	ShowOnWebsite bool `json:"show_on_website"`
	// URL to the signup page for this course.
	SignupUrl string `json:"signup_url"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
	CourseTabContents []CourseTabContent `json:"course_tab_contents,omitempty"`
	// The custom properties of the product.
	Custom map[string]interface{} `json:"custom,omitempty"`
	// The custom associations linked to the catalog product.  ![Custom Objects](https://img.shields.io/badge/Feature-Custom_objects-1d8127) ![Beta](https://img.shields.io/badge/Beta-7d15a3) 
	CustomAssociations []CustomAssociationWithRecords `json:"custom_associations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProductWithIncludes ProductWithIncludes

// NewProductWithIncludes instantiates a new ProductWithIncludes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductWithIncludes(id int32, name string, slug string, labelIds []int32, costScheme CostScheme, cost NullableString, currency Currency, productableType ProductableType, productableId int32, avatar string, position int32, conditionsOrDefault NullableString, categoryId int32, isPublished bool, showOnWebsite bool, signupUrl string, updatedAt time.Time, createdAt time.Time) *ProductWithIncludes {
	this := ProductWithIncludes{}
	this.Id = id
	this.Name = name
	this.Slug = slug
	this.LabelIds = labelIds
	this.CostScheme = costScheme
	this.Cost = cost
	this.Currency = currency
	this.ProductableType = productableType
	this.ProductableId = productableId
	this.Avatar = avatar
	this.Position = position
	this.ConditionsOrDefault = conditionsOrDefault
	this.CategoryId = categoryId
	this.IsPublished = isPublished
	this.ShowOnWebsite = showOnWebsite
	this.SignupUrl = signupUrl
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewProductWithIncludesWithDefaults instantiates a new ProductWithIncludes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWithIncludesWithDefaults() *ProductWithIncludes {
	this := ProductWithIncludes{}
	return &this
}

// GetId returns the Id field value
func (o *ProductWithIncludes) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProductWithIncludes) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ProductWithIncludes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProductWithIncludes) SetName(v string) {
	o.Name = v
}

// GetSlug returns the Slug field value
func (o *ProductWithIncludes) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *ProductWithIncludes) SetSlug(v string) {
	o.Slug = v
}

// GetLabelIds returns the LabelIds field value
func (o *ProductWithIncludes) GetLabelIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetLabelIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *ProductWithIncludes) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetCostScheme returns the CostScheme field value
func (o *ProductWithIncludes) GetCostScheme() CostScheme {
	if o == nil {
		var ret CostScheme
		return ret
	}

	return o.CostScheme
}

// GetCostSchemeOk returns a tuple with the CostScheme field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCostSchemeOk() (*CostScheme, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CostScheme, true
}

// SetCostScheme sets field value
func (o *ProductWithIncludes) SetCostScheme(v CostScheme) {
	o.CostScheme = v
}

// GetCost returns the Cost field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductWithIncludes) GetCost() string {
	if o == nil || o.Cost.Get() == nil {
		var ret string
		return ret
	}

	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductWithIncludes) GetCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// SetCost sets field value
func (o *ProductWithIncludes) SetCost(v string) {
	o.Cost.Set(&v)
}

// GetCurrency returns the Currency field value
func (o *ProductWithIncludes) GetCurrency() Currency {
	if o == nil {
		var ret Currency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCurrencyOk() (*Currency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ProductWithIncludes) SetCurrency(v Currency) {
	o.Currency = v
}

// GetProductableType returns the ProductableType field value
func (o *ProductWithIncludes) GetProductableType() ProductableType {
	if o == nil {
		var ret ProductableType
		return ret
	}

	return o.ProductableType
}

// GetProductableTypeOk returns a tuple with the ProductableType field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetProductableTypeOk() (*ProductableType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductableType, true
}

// SetProductableType sets field value
func (o *ProductWithIncludes) SetProductableType(v ProductableType) {
	o.ProductableType = v
}

// GetProductableId returns the ProductableId field value
func (o *ProductWithIncludes) GetProductableId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductableId
}

// GetProductableIdOk returns a tuple with the ProductableId field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetProductableIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductableId, true
}

// SetProductableId sets field value
func (o *ProductWithIncludes) SetProductableId(v int32) {
	o.ProductableId = v
}

// GetAvatar returns the Avatar field value
func (o *ProductWithIncludes) GetAvatar() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Avatar, true
}

// SetAvatar sets field value
func (o *ProductWithIncludes) SetAvatar(v string) {
	o.Avatar = v
}

// GetPosition returns the Position field value
func (o *ProductWithIncludes) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *ProductWithIncludes) SetPosition(v int32) {
	o.Position = v
}

// GetConditionsOrDefault returns the ConditionsOrDefault field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductWithIncludes) GetConditionsOrDefault() string {
	if o == nil || o.ConditionsOrDefault.Get() == nil {
		var ret string
		return ret
	}

	return *o.ConditionsOrDefault.Get()
}

// GetConditionsOrDefaultOk returns a tuple with the ConditionsOrDefault field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductWithIncludes) GetConditionsOrDefaultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConditionsOrDefault.Get(), o.ConditionsOrDefault.IsSet()
}

// SetConditionsOrDefault sets field value
func (o *ProductWithIncludes) SetConditionsOrDefault(v string) {
	o.ConditionsOrDefault.Set(&v)
}

// GetCategoryId returns the CategoryId field value
func (o *ProductWithIncludes) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *ProductWithIncludes) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetIsPublished returns the IsPublished field value
func (o *ProductWithIncludes) GetIsPublished() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetIsPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublished, true
}

// SetIsPublished sets field value
func (o *ProductWithIncludes) SetIsPublished(v bool) {
	o.IsPublished = v
}

// GetShowOnWebsite returns the ShowOnWebsite field value
func (o *ProductWithIncludes) GetShowOnWebsite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowOnWebsite
}

// GetShowOnWebsiteOk returns a tuple with the ShowOnWebsite field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetShowOnWebsiteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowOnWebsite, true
}

// SetShowOnWebsite sets field value
func (o *ProductWithIncludes) SetShowOnWebsite(v bool) {
	o.ShowOnWebsite = v
}

// GetSignupUrl returns the SignupUrl field value
func (o *ProductWithIncludes) GetSignupUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignupUrl
}

// GetSignupUrlOk returns a tuple with the SignupUrl field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetSignupUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignupUrl, true
}

// SetSignupUrl sets field value
func (o *ProductWithIncludes) SetSignupUrl(v string) {
	o.SignupUrl = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ProductWithIncludes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ProductWithIncludes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ProductWithIncludes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ProductWithIncludes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCourseTabContents returns the CourseTabContents field value if set, zero value otherwise.
func (o *ProductWithIncludes) GetCourseTabContents() []CourseTabContent {
	if o == nil || IsNil(o.CourseTabContents) {
		var ret []CourseTabContent
		return ret
	}
	return o.CourseTabContents
}

// GetCourseTabContentsOk returns a tuple with the CourseTabContents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCourseTabContentsOk() ([]CourseTabContent, bool) {
	if o == nil || IsNil(o.CourseTabContents) {
		return nil, false
	}
	return o.CourseTabContents, true
}

// HasCourseTabContents returns a boolean if a field has been set.
func (o *ProductWithIncludes) HasCourseTabContents() bool {
	if o != nil && !IsNil(o.CourseTabContents) {
		return true
	}

	return false
}

// SetCourseTabContents gets a reference to the given []CourseTabContent and assigns it to the CourseTabContents field.
func (o *ProductWithIncludes) SetCourseTabContents(v []CourseTabContent) {
	o.CourseTabContents = v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *ProductWithIncludes) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *ProductWithIncludes) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *ProductWithIncludes) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetCustomAssociations returns the CustomAssociations field value if set, zero value otherwise.
func (o *ProductWithIncludes) GetCustomAssociations() []CustomAssociationWithRecords {
	if o == nil || IsNil(o.CustomAssociations) {
		var ret []CustomAssociationWithRecords
		return ret
	}
	return o.CustomAssociations
}

// GetCustomAssociationsOk returns a tuple with the CustomAssociations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWithIncludes) GetCustomAssociationsOk() ([]CustomAssociationWithRecords, bool) {
	if o == nil || IsNil(o.CustomAssociations) {
		return nil, false
	}
	return o.CustomAssociations, true
}

// HasCustomAssociations returns a boolean if a field has been set.
func (o *ProductWithIncludes) HasCustomAssociations() bool {
	if o != nil && !IsNil(o.CustomAssociations) {
		return true
	}

	return false
}

// SetCustomAssociations gets a reference to the given []CustomAssociationWithRecords and assigns it to the CustomAssociations field.
func (o *ProductWithIncludes) SetCustomAssociations(v []CustomAssociationWithRecords) {
	o.CustomAssociations = v
}

func (o ProductWithIncludes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductWithIncludes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["slug"] = o.Slug
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["cost_scheme"] = o.CostScheme
	toSerialize["cost"] = o.Cost.Get()
	toSerialize["currency"] = o.Currency
	toSerialize["productable_type"] = o.ProductableType
	toSerialize["productable_id"] = o.ProductableId
	toSerialize["avatar"] = o.Avatar
	toSerialize["position"] = o.Position
	toSerialize["conditions_or_default"] = o.ConditionsOrDefault.Get()
	toSerialize["category_id"] = o.CategoryId
	toSerialize["is_published"] = o.IsPublished
	toSerialize["show_on_website"] = o.ShowOnWebsite
	toSerialize["signup_url"] = o.SignupUrl
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.CourseTabContents) {
		toSerialize["course_tab_contents"] = o.CourseTabContents
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.CustomAssociations) {
		toSerialize["custom_associations"] = o.CustomAssociations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProductWithIncludes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"slug",
		"label_ids",
		"cost_scheme",
		"cost",
		"currency",
		"productable_type",
		"productable_id",
		"avatar",
		"position",
		"conditions_or_default",
		"category_id",
		"is_published",
		"show_on_website",
		"signup_url",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductWithIncludes := _ProductWithIncludes{}

	err = json.Unmarshal(data, &varProductWithIncludes)

	if err != nil {
		return err
	}

	*o = ProductWithIncludes(varProductWithIncludes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "label_ids")
		delete(additionalProperties, "cost_scheme")
		delete(additionalProperties, "cost")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "productable_type")
		delete(additionalProperties, "productable_id")
		delete(additionalProperties, "avatar")
		delete(additionalProperties, "position")
		delete(additionalProperties, "conditions_or_default")
		delete(additionalProperties, "category_id")
		delete(additionalProperties, "is_published")
		delete(additionalProperties, "show_on_website")
		delete(additionalProperties, "signup_url")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "course_tab_contents")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "custom_associations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProductWithIncludes struct {
	value *ProductWithIncludes
	isSet bool
}

func (v NullableProductWithIncludes) Get() *ProductWithIncludes {
	return v.value
}

func (v *NullableProductWithIncludes) Set(val *ProductWithIncludes) {
	v.value = val
	v.isSet = true
}

func (v NullableProductWithIncludes) IsSet() bool {
	return v.isSet
}

func (v *NullableProductWithIncludes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductWithIncludes(val *ProductWithIncludes) *NullableProductWithIncludes {
	return &NullableProductWithIncludes{value: val, isSet: true}
}

func (v NullableProductWithIncludes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductWithIncludes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


