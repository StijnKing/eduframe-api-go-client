/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProgramEditionPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramEditionPayload{}

// ProgramEditionPayload struct for ProgramEditionPayload
type ProgramEditionPayload struct {
	// Unique identifier of associated program.
	ProgramId int32 `json:"program_id"`
	// Name of the program edition.
	Name string `json:"name"`
	// The price to be paid for this edition. Required if cost_scheme is student (default value) or order.
	Cost NullableFloat32 `json:"cost,omitempty"`
	// How should the edition be paid by default.
	CostScheme *string `json:"cost_scheme,omitempty"`
	// A number representing the minimum number of participants.
	MinParticipants NullableInt32 `json:"min_participants,omitempty"`
	// A number representing the maximum number of participants.
	MaxParticipants NullableInt32 `json:"max_participants,omitempty"`
	// Boolean representing the publishable status of the edition.
	IsPublished *bool `json:"is_published,omitempty"`
	// The custom properties of the edition.
	Custom map[string]interface{} `json:"custom,omitempty"`
	// Custom associations are a way to link custom records to a program edition.  ![Custom Objects](https://img.shields.io/badge/Feature-Custom_objects-1d8127) 
	CustomAssociations []CustomAssociationsRecordsPayload `json:"custom_associations,omitempty"`
}

type _ProgramEditionPayload ProgramEditionPayload

// NewProgramEditionPayload instantiates a new ProgramEditionPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramEditionPayload(programId int32, name string) *ProgramEditionPayload {
	this := ProgramEditionPayload{}
	this.ProgramId = programId
	this.Name = name
	return &this
}

// NewProgramEditionPayloadWithDefaults instantiates a new ProgramEditionPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramEditionPayloadWithDefaults() *ProgramEditionPayload {
	this := ProgramEditionPayload{}
	return &this
}

// GetProgramId returns the ProgramId field value
func (o *ProgramEditionPayload) GetProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProgramId
}

// GetProgramIdOk returns a tuple with the ProgramId field value
// and a boolean to check if the value has been set.
func (o *ProgramEditionPayload) GetProgramIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgramId, true
}

// SetProgramId sets field value
func (o *ProgramEditionPayload) SetProgramId(v int32) {
	o.ProgramId = v
}

// GetName returns the Name field value
func (o *ProgramEditionPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProgramEditionPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProgramEditionPayload) SetName(v string) {
	o.Name = v
}

// GetCost returns the Cost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgramEditionPayload) GetCost() float32 {
	if o == nil || IsNil(o.Cost.Get()) {
		var ret float32
		return ret
	}
	return *o.Cost.Get()
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramEditionPayload) GetCostOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cost.Get(), o.Cost.IsSet()
}

// HasCost returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasCost() bool {
	if o != nil && o.Cost.IsSet() {
		return true
	}

	return false
}

// SetCost gets a reference to the given NullableFloat32 and assigns it to the Cost field.
func (o *ProgramEditionPayload) SetCost(v float32) {
	o.Cost.Set(&v)
}
// SetCostNil sets the value for Cost to be an explicit nil
func (o *ProgramEditionPayload) SetCostNil() {
	o.Cost.Set(nil)
}

// UnsetCost ensures that no value is present for Cost, not even an explicit nil
func (o *ProgramEditionPayload) UnsetCost() {
	o.Cost.Unset()
}

// GetCostScheme returns the CostScheme field value if set, zero value otherwise.
func (o *ProgramEditionPayload) GetCostScheme() string {
	if o == nil || IsNil(o.CostScheme) {
		var ret string
		return ret
	}
	return *o.CostScheme
}

// GetCostSchemeOk returns a tuple with the CostScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramEditionPayload) GetCostSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.CostScheme) {
		return nil, false
	}
	return o.CostScheme, true
}

// HasCostScheme returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasCostScheme() bool {
	if o != nil && !IsNil(o.CostScheme) {
		return true
	}

	return false
}

// SetCostScheme gets a reference to the given string and assigns it to the CostScheme field.
func (o *ProgramEditionPayload) SetCostScheme(v string) {
	o.CostScheme = &v
}

// GetMinParticipants returns the MinParticipants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgramEditionPayload) GetMinParticipants() int32 {
	if o == nil || IsNil(o.MinParticipants.Get()) {
		var ret int32
		return ret
	}
	return *o.MinParticipants.Get()
}

// GetMinParticipantsOk returns a tuple with the MinParticipants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramEditionPayload) GetMinParticipantsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinParticipants.Get(), o.MinParticipants.IsSet()
}

// HasMinParticipants returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasMinParticipants() bool {
	if o != nil && o.MinParticipants.IsSet() {
		return true
	}

	return false
}

// SetMinParticipants gets a reference to the given NullableInt32 and assigns it to the MinParticipants field.
func (o *ProgramEditionPayload) SetMinParticipants(v int32) {
	o.MinParticipants.Set(&v)
}
// SetMinParticipantsNil sets the value for MinParticipants to be an explicit nil
func (o *ProgramEditionPayload) SetMinParticipantsNil() {
	o.MinParticipants.Set(nil)
}

// UnsetMinParticipants ensures that no value is present for MinParticipants, not even an explicit nil
func (o *ProgramEditionPayload) UnsetMinParticipants() {
	o.MinParticipants.Unset()
}

// GetMaxParticipants returns the MaxParticipants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgramEditionPayload) GetMaxParticipants() int32 {
	if o == nil || IsNil(o.MaxParticipants.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxParticipants.Get()
}

// GetMaxParticipantsOk returns a tuple with the MaxParticipants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramEditionPayload) GetMaxParticipantsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxParticipants.Get(), o.MaxParticipants.IsSet()
}

// HasMaxParticipants returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasMaxParticipants() bool {
	if o != nil && o.MaxParticipants.IsSet() {
		return true
	}

	return false
}

// SetMaxParticipants gets a reference to the given NullableInt32 and assigns it to the MaxParticipants field.
func (o *ProgramEditionPayload) SetMaxParticipants(v int32) {
	o.MaxParticipants.Set(&v)
}
// SetMaxParticipantsNil sets the value for MaxParticipants to be an explicit nil
func (o *ProgramEditionPayload) SetMaxParticipantsNil() {
	o.MaxParticipants.Set(nil)
}

// UnsetMaxParticipants ensures that no value is present for MaxParticipants, not even an explicit nil
func (o *ProgramEditionPayload) UnsetMaxParticipants() {
	o.MaxParticipants.Unset()
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *ProgramEditionPayload) GetIsPublished() bool {
	if o == nil || IsNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramEditionPayload) GetIsPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublished) {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasIsPublished() bool {
	if o != nil && !IsNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *ProgramEditionPayload) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *ProgramEditionPayload) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramEditionPayload) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *ProgramEditionPayload) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetCustomAssociations returns the CustomAssociations field value if set, zero value otherwise.
func (o *ProgramEditionPayload) GetCustomAssociations() []CustomAssociationsRecordsPayload {
	if o == nil || IsNil(o.CustomAssociations) {
		var ret []CustomAssociationsRecordsPayload
		return ret
	}
	return o.CustomAssociations
}

// GetCustomAssociationsOk returns a tuple with the CustomAssociations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramEditionPayload) GetCustomAssociationsOk() ([]CustomAssociationsRecordsPayload, bool) {
	if o == nil || IsNil(o.CustomAssociations) {
		return nil, false
	}
	return o.CustomAssociations, true
}

// HasCustomAssociations returns a boolean if a field has been set.
func (o *ProgramEditionPayload) HasCustomAssociations() bool {
	if o != nil && !IsNil(o.CustomAssociations) {
		return true
	}

	return false
}

// SetCustomAssociations gets a reference to the given []CustomAssociationsRecordsPayload and assigns it to the CustomAssociations field.
func (o *ProgramEditionPayload) SetCustomAssociations(v []CustomAssociationsRecordsPayload) {
	o.CustomAssociations = v
}

func (o ProgramEditionPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramEditionPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["program_id"] = o.ProgramId
	toSerialize["name"] = o.Name
	if o.Cost.IsSet() {
		toSerialize["cost"] = o.Cost.Get()
	}
	if !IsNil(o.CostScheme) {
		toSerialize["cost_scheme"] = o.CostScheme
	}
	if o.MinParticipants.IsSet() {
		toSerialize["min_participants"] = o.MinParticipants.Get()
	}
	if o.MaxParticipants.IsSet() {
		toSerialize["max_participants"] = o.MaxParticipants.Get()
	}
	if !IsNil(o.IsPublished) {
		toSerialize["is_published"] = o.IsPublished
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.CustomAssociations) {
		toSerialize["custom_associations"] = o.CustomAssociations
	}
	return toSerialize, nil
}

func (o *ProgramEditionPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"program_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramEditionPayload := _ProgramEditionPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramEditionPayload)

	if err != nil {
		return err
	}

	*o = ProgramEditionPayload(varProgramEditionPayload)

	return err
}

type NullableProgramEditionPayload struct {
	value *ProgramEditionPayload
	isSet bool
}

func (v NullableProgramEditionPayload) Get() *ProgramEditionPayload {
	return v.value
}

func (v *NullableProgramEditionPayload) Set(val *ProgramEditionPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramEditionPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramEditionPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramEditionPayload(val *ProgramEditionPayload) *NullableProgramEditionPayload {
	return &NullableProgramEditionPayload{value: val, isSet: true}
}

func (v NullableProgramEditionPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramEditionPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


