/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// checks if the ProgramEnrollmentWithIncludes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramEnrollmentWithIncludes{}

// ProgramEnrollmentWithIncludes struct for ProgramEnrollmentWithIncludes
type ProgramEnrollmentWithIncludes struct {
	// Unique identifier of the enrollment
	Id int32 `json:"id"`
	// The identifier of the associated student
	StudentId int32 `json:"student_id"`
	// The identifier of the associated edition
	EditionId int32 `json:"edition_id"`
	// The identifier of the associated personal program
	PersonalProgramId int32 `json:"personal_program_id"`
	// An array of integers representing unique identifier values associated with labels. 
	LabelIds []int32 `json:"label_ids"`
	// The identifier of the associated order
	OrderId NullableInt32 `json:"order_id"`
	// The state of the enrollment
	State string `json:"state"`
	GraduationState GraduationState `json:"graduation_state"`
	// The graduation date of the enrollment
	GraduationDate NullableString `json:"graduation_date"`
	Grade NullableGrade `json:"grade,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProgramEnrollmentWithIncludes ProgramEnrollmentWithIncludes

// NewProgramEnrollmentWithIncludes instantiates a new ProgramEnrollmentWithIncludes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramEnrollmentWithIncludes(id int32, studentId int32, editionId int32, personalProgramId int32, labelIds []int32, orderId NullableInt32, state string, graduationState GraduationState, graduationDate NullableString) *ProgramEnrollmentWithIncludes {
	this := ProgramEnrollmentWithIncludes{}
	this.Id = id
	this.StudentId = studentId
	this.EditionId = editionId
	this.PersonalProgramId = personalProgramId
	this.LabelIds = labelIds
	this.OrderId = orderId
	this.State = state
	this.GraduationState = graduationState
	this.GraduationDate = graduationDate
	return &this
}

// NewProgramEnrollmentWithIncludesWithDefaults instantiates a new ProgramEnrollmentWithIncludes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramEnrollmentWithIncludesWithDefaults() *ProgramEnrollmentWithIncludes {
	this := ProgramEnrollmentWithIncludes{}
	return &this
}

// GetId returns the Id field value
func (o *ProgramEnrollmentWithIncludes) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProgramEnrollmentWithIncludes) SetId(v int32) {
	o.Id = v
}

// GetStudentId returns the StudentId field value
func (o *ProgramEnrollmentWithIncludes) GetStudentId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StudentId
}

// GetStudentIdOk returns a tuple with the StudentId field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetStudentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StudentId, true
}

// SetStudentId sets field value
func (o *ProgramEnrollmentWithIncludes) SetStudentId(v int32) {
	o.StudentId = v
}

// GetEditionId returns the EditionId field value
func (o *ProgramEnrollmentWithIncludes) GetEditionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetEditionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *ProgramEnrollmentWithIncludes) SetEditionId(v int32) {
	o.EditionId = v
}

// GetPersonalProgramId returns the PersonalProgramId field value
func (o *ProgramEnrollmentWithIncludes) GetPersonalProgramId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PersonalProgramId
}

// GetPersonalProgramIdOk returns a tuple with the PersonalProgramId field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetPersonalProgramIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PersonalProgramId, true
}

// SetPersonalProgramId sets field value
func (o *ProgramEnrollmentWithIncludes) SetPersonalProgramId(v int32) {
	o.PersonalProgramId = v
}

// GetLabelIds returns the LabelIds field value
func (o *ProgramEnrollmentWithIncludes) GetLabelIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetLabelIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *ProgramEnrollmentWithIncludes) SetLabelIds(v []int32) {
	o.LabelIds = v
}

// GetOrderId returns the OrderId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ProgramEnrollmentWithIncludes) GetOrderId() int32 {
	if o == nil || o.OrderId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.OrderId.Get()
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramEnrollmentWithIncludes) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrderId.Get(), o.OrderId.IsSet()
}

// SetOrderId sets field value
func (o *ProgramEnrollmentWithIncludes) SetOrderId(v int32) {
	o.OrderId.Set(&v)
}

// GetState returns the State field value
func (o *ProgramEnrollmentWithIncludes) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ProgramEnrollmentWithIncludes) SetState(v string) {
	o.State = v
}

// GetGraduationState returns the GraduationState field value
func (o *ProgramEnrollmentWithIncludes) GetGraduationState() GraduationState {
	if o == nil {
		var ret GraduationState
		return ret
	}

	return o.GraduationState
}

// GetGraduationStateOk returns a tuple with the GraduationState field value
// and a boolean to check if the value has been set.
func (o *ProgramEnrollmentWithIncludes) GetGraduationStateOk() (*GraduationState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GraduationState, true
}

// SetGraduationState sets field value
func (o *ProgramEnrollmentWithIncludes) SetGraduationState(v GraduationState) {
	o.GraduationState = v
}

// GetGraduationDate returns the GraduationDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProgramEnrollmentWithIncludes) GetGraduationDate() string {
	if o == nil || o.GraduationDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.GraduationDate.Get()
}

// GetGraduationDateOk returns a tuple with the GraduationDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramEnrollmentWithIncludes) GetGraduationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GraduationDate.Get(), o.GraduationDate.IsSet()
}

// SetGraduationDate sets field value
func (o *ProgramEnrollmentWithIncludes) SetGraduationDate(v string) {
	o.GraduationDate.Set(&v)
}

// GetGrade returns the Grade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgramEnrollmentWithIncludes) GetGrade() Grade {
	if o == nil || IsNil(o.Grade.Get()) {
		var ret Grade
		return ret
	}
	return *o.Grade.Get()
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramEnrollmentWithIncludes) GetGradeOk() (*Grade, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grade.Get(), o.Grade.IsSet()
}

// HasGrade returns a boolean if a field has been set.
func (o *ProgramEnrollmentWithIncludes) HasGrade() bool {
	if o != nil && o.Grade.IsSet() {
		return true
	}

	return false
}

// SetGrade gets a reference to the given NullableGrade and assigns it to the Grade field.
func (o *ProgramEnrollmentWithIncludes) SetGrade(v Grade) {
	o.Grade.Set(&v)
}
// SetGradeNil sets the value for Grade to be an explicit nil
func (o *ProgramEnrollmentWithIncludes) SetGradeNil() {
	o.Grade.Set(nil)
}

// UnsetGrade ensures that no value is present for Grade, not even an explicit nil
func (o *ProgramEnrollmentWithIncludes) UnsetGrade() {
	o.Grade.Unset()
}

func (o ProgramEnrollmentWithIncludes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramEnrollmentWithIncludes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["student_id"] = o.StudentId
	toSerialize["edition_id"] = o.EditionId
	toSerialize["personal_program_id"] = o.PersonalProgramId
	toSerialize["label_ids"] = o.LabelIds
	toSerialize["order_id"] = o.OrderId.Get()
	toSerialize["state"] = o.State
	toSerialize["graduation_state"] = o.GraduationState
	toSerialize["graduation_date"] = o.GraduationDate.Get()
	if o.Grade.IsSet() {
		toSerialize["grade"] = o.Grade.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProgramEnrollmentWithIncludes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"student_id",
		"edition_id",
		"personal_program_id",
		"label_ids",
		"order_id",
		"state",
		"graduation_state",
		"graduation_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramEnrollmentWithIncludes := _ProgramEnrollmentWithIncludes{}

	err = json.Unmarshal(data, &varProgramEnrollmentWithIncludes)

	if err != nil {
		return err
	}

	*o = ProgramEnrollmentWithIncludes(varProgramEnrollmentWithIncludes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "student_id")
		delete(additionalProperties, "edition_id")
		delete(additionalProperties, "personal_program_id")
		delete(additionalProperties, "label_ids")
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "state")
		delete(additionalProperties, "graduation_state")
		delete(additionalProperties, "graduation_date")
		delete(additionalProperties, "grade")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProgramEnrollmentWithIncludes struct {
	value *ProgramEnrollmentWithIncludes
	isSet bool
}

func (v NullableProgramEnrollmentWithIncludes) Get() *ProgramEnrollmentWithIncludes {
	return v.value
}

func (v *NullableProgramEnrollmentWithIncludes) Set(val *ProgramEnrollmentWithIncludes) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramEnrollmentWithIncludes) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramEnrollmentWithIncludes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramEnrollmentWithIncludes(val *ProgramEnrollmentWithIncludes) *NullableProgramEnrollmentWithIncludes {
	return &NullableProgramEnrollmentWithIncludes{value: val, isSet: true}
}

func (v NullableProgramEnrollmentWithIncludes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramEnrollmentWithIncludes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


