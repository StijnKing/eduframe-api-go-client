/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Task type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Task{}

// Task struct for Task
type Task struct {
	// Unique identifier of the task.
	Id int32 `json:"id"`
	// Unique identifier of the user who created the task.
	CreatorId int32 `json:"creator_id"`
	// Timestamp of when the task was completed.
	CompletedAt NullableString `json:"completed_at"`
	// Unique identifier of the user who completed the task.
	CompletedById NullableInt32 `json:"completed_by_id"`
	// Unique identifier of the user who assigned the task.
	AssignedById NullableInt32 `json:"assigned_by_id"`
	// The title of the task.
	Name string `json:"name"`
	// A string representing the description of the task.
	Description NullableString `json:"description"`
	// Date when the task must be completed.
	DueDate NullableString `json:"due_date"`
	// Boolean if the task is starred.
	Starred bool `json:"starred"`
	// Unique identifier of the assigned user for the task.
	AssigneeId NullableInt32 `json:"assignee_id"`
	// Type of the subject.
	SubjectType NullableString `json:"subject_type"`
	// Identifier of the subject.
	SubjectId NullableInt32 `json:"subject_id"`
	// Timestamp of last update.
	UpdatedAt time.Time `json:"updated_at"`
	// Timestamp of creation.
	CreatedAt time.Time `json:"created_at"`
}

type _Task Task

// NewTask instantiates a new Task object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTask(id int32, creatorId int32, completedAt NullableString, completedById NullableInt32, assignedById NullableInt32, name string, description NullableString, dueDate NullableString, starred bool, assigneeId NullableInt32, subjectType NullableString, subjectId NullableInt32, updatedAt time.Time, createdAt time.Time) *Task {
	this := Task{}
	this.Id = id
	this.CreatorId = creatorId
	this.CompletedAt = completedAt
	this.CompletedById = completedById
	this.AssignedById = assignedById
	this.Name = name
	this.Description = description
	this.DueDate = dueDate
	this.Starred = starred
	this.AssigneeId = assigneeId
	this.SubjectType = subjectType
	this.SubjectId = subjectId
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewTaskWithDefaults instantiates a new Task object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskWithDefaults() *Task {
	this := Task{}
	return &this
}

// GetId returns the Id field value
func (o *Task) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Task) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Task) SetId(v int32) {
	o.Id = v
}

// GetCreatorId returns the CreatorId field value
func (o *Task) GetCreatorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *Task) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *Task) SetCreatorId(v int32) {
	o.CreatorId = v
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Task) GetCompletedAt() string {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret string
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetCompletedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *Task) SetCompletedAt(v string) {
	o.CompletedAt.Set(&v)
}

// GetCompletedById returns the CompletedById field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Task) GetCompletedById() int32 {
	if o == nil || o.CompletedById.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CompletedById.Get()
}

// GetCompletedByIdOk returns a tuple with the CompletedById field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetCompletedByIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedById.Get(), o.CompletedById.IsSet()
}

// SetCompletedById sets field value
func (o *Task) SetCompletedById(v int32) {
	o.CompletedById.Set(&v)
}

// GetAssignedById returns the AssignedById field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Task) GetAssignedById() int32 {
	if o == nil || o.AssignedById.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AssignedById.Get()
}

// GetAssignedByIdOk returns a tuple with the AssignedById field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetAssignedByIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssignedById.Get(), o.AssignedById.IsSet()
}

// SetAssignedById sets field value
func (o *Task) SetAssignedById(v int32) {
	o.AssignedById.Set(&v)
}

// GetName returns the Name field value
func (o *Task) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Task) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Task) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Task) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Task) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetDueDate returns the DueDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Task) GetDueDate() string {
	if o == nil || o.DueDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.DueDate.Get()
}

// GetDueDateOk returns a tuple with the DueDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetDueDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DueDate.Get(), o.DueDate.IsSet()
}

// SetDueDate sets field value
func (o *Task) SetDueDate(v string) {
	o.DueDate.Set(&v)
}

// GetStarred returns the Starred field value
func (o *Task) GetStarred() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Starred
}

// GetStarredOk returns a tuple with the Starred field value
// and a boolean to check if the value has been set.
func (o *Task) GetStarredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Starred, true
}

// SetStarred sets field value
func (o *Task) SetStarred(v bool) {
	o.Starred = v
}

// GetAssigneeId returns the AssigneeId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Task) GetAssigneeId() int32 {
	if o == nil || o.AssigneeId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AssigneeId.Get()
}

// GetAssigneeIdOk returns a tuple with the AssigneeId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetAssigneeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssigneeId.Get(), o.AssigneeId.IsSet()
}

// SetAssigneeId sets field value
func (o *Task) SetAssigneeId(v int32) {
	o.AssigneeId.Set(&v)
}

// GetSubjectType returns the SubjectType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Task) GetSubjectType() string {
	if o == nil || o.SubjectType.Get() == nil {
		var ret string
		return ret
	}

	return *o.SubjectType.Get()
}

// GetSubjectTypeOk returns a tuple with the SubjectType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetSubjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubjectType.Get(), o.SubjectType.IsSet()
}

// SetSubjectType sets field value
func (o *Task) SetSubjectType(v string) {
	o.SubjectType.Set(&v)
}

// GetSubjectId returns the SubjectId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Task) GetSubjectId() int32 {
	if o == nil || o.SubjectId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.SubjectId.Get()
}

// GetSubjectIdOk returns a tuple with the SubjectId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Task) GetSubjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubjectId.Get(), o.SubjectId.IsSet()
}

// SetSubjectId sets field value
func (o *Task) SetSubjectId(v int32) {
	o.SubjectId.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Task) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Task) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Task) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Task) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Task) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Task) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o Task) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Task) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["creator_id"] = o.CreatorId
	toSerialize["completed_at"] = o.CompletedAt.Get()
	toSerialize["completed_by_id"] = o.CompletedById.Get()
	toSerialize["assigned_by_id"] = o.AssignedById.Get()
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description.Get()
	toSerialize["due_date"] = o.DueDate.Get()
	toSerialize["starred"] = o.Starred
	toSerialize["assignee_id"] = o.AssigneeId.Get()
	toSerialize["subject_type"] = o.SubjectType.Get()
	toSerialize["subject_id"] = o.SubjectId.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *Task) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"creator_id",
		"completed_at",
		"completed_by_id",
		"assigned_by_id",
		"name",
		"description",
		"due_date",
		"starred",
		"assignee_id",
		"subject_type",
		"subject_id",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTask := _Task{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTask)

	if err != nil {
		return err
	}

	*o = Task(varTask)

	return err
}

type NullableTask struct {
	value *Task
	isSet bool
}

func (v NullableTask) Get() *Task {
	return v.value
}

func (v *NullableTask) Set(val *Task) {
	v.value = val
	v.isSet = true
}

func (v NullableTask) IsSet() bool {
	return v.isSet
}

func (v *NullableTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTask(val *Task) *NullableTask {
	return &NullableTask{value: val, isSet: true}
}

func (v NullableTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


