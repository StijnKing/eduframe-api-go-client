/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Thesis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Thesis{}

// Thesis struct for Thesis
type Thesis struct {
	// Unique identifier of the thesis.
	Id int32 `json:"id"`
	// The title of the thesis.
	Title NullableString `json:"title"`
	// The subtitle of the thesis.
	Subtitle NullableString `json:"subtitle"`
	// The keywords of the thesis.
	Keywords []string `json:"keywords"`
	// The abstract of the thesis.
	Abstract NullableString `json:"abstract"`
	// Array of authors of the thesis.
	Authors []string `json:"authors"`
	// Date of the program thesis.
	Date NullableString `json:"date"`
	// Array of supervisors of the thesis.
	Supervisors []string `json:"supervisors"`
	// Confidentiality level of the program thesis defaults to no.
	Confidentiality NullableString `json:"confidentiality"`
	// Locale of the program thesis.
	Locale NullableString `json:"locale"`
	// URL to the file of the thesis.
	FileUrl NullableString `json:"file_url"`
}

type _Thesis Thesis

// NewThesis instantiates a new Thesis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThesis(id int32, title NullableString, subtitle NullableString, keywords []string, abstract NullableString, authors []string, date NullableString, supervisors []string, confidentiality NullableString, locale NullableString, fileUrl NullableString) *Thesis {
	this := Thesis{}
	this.Id = id
	this.Title = title
	this.Subtitle = subtitle
	this.Keywords = keywords
	this.Abstract = abstract
	this.Authors = authors
	this.Date = date
	this.Supervisors = supervisors
	this.Confidentiality = confidentiality
	this.Locale = locale
	this.FileUrl = fileUrl
	return &this
}

// NewThesisWithDefaults instantiates a new Thesis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThesisWithDefaults() *Thesis {
	this := Thesis{}
	return &this
}

// GetId returns the Id field value
func (o *Thesis) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Thesis) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Thesis) SetId(v int32) {
	o.Id = v
}

// GetTitle returns the Title field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}

	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// SetTitle sets field value
func (o *Thesis) SetTitle(v string) {
	o.Title.Set(&v)
}

// GetSubtitle returns the Subtitle field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetSubtitle() string {
	if o == nil || o.Subtitle.Get() == nil {
		var ret string
		return ret
	}

	return *o.Subtitle.Get()
}

// GetSubtitleOk returns a tuple with the Subtitle field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetSubtitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subtitle.Get(), o.Subtitle.IsSet()
}

// SetSubtitle sets field value
func (o *Thesis) SetSubtitle(v string) {
	o.Subtitle.Set(&v)
}

// GetKeywords returns the Keywords field value
func (o *Thesis) GetKeywords() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value
// and a boolean to check if the value has been set.
func (o *Thesis) GetKeywordsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keywords, true
}

// SetKeywords sets field value
func (o *Thesis) SetKeywords(v []string) {
	o.Keywords = v
}

// GetAbstract returns the Abstract field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetAbstract() string {
	if o == nil || o.Abstract.Get() == nil {
		var ret string
		return ret
	}

	return *o.Abstract.Get()
}

// GetAbstractOk returns a tuple with the Abstract field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetAbstractOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Abstract.Get(), o.Abstract.IsSet()
}

// SetAbstract sets field value
func (o *Thesis) SetAbstract(v string) {
	o.Abstract.Set(&v)
}

// GetAuthors returns the Authors field value
func (o *Thesis) GetAuthors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Authors
}

// GetAuthorsOk returns a tuple with the Authors field value
// and a boolean to check if the value has been set.
func (o *Thesis) GetAuthorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authors, true
}

// SetAuthors sets field value
func (o *Thesis) SetAuthors(v []string) {
	o.Authors = v
}

// GetDate returns the Date field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetDate() string {
	if o == nil || o.Date.Get() == nil {
		var ret string
		return ret
	}

	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// SetDate sets field value
func (o *Thesis) SetDate(v string) {
	o.Date.Set(&v)
}

// GetSupervisors returns the Supervisors field value
func (o *Thesis) GetSupervisors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Supervisors
}

// GetSupervisorsOk returns a tuple with the Supervisors field value
// and a boolean to check if the value has been set.
func (o *Thesis) GetSupervisorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Supervisors, true
}

// SetSupervisors sets field value
func (o *Thesis) SetSupervisors(v []string) {
	o.Supervisors = v
}

// GetConfidentiality returns the Confidentiality field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetConfidentiality() string {
	if o == nil || o.Confidentiality.Get() == nil {
		var ret string
		return ret
	}

	return *o.Confidentiality.Get()
}

// GetConfidentialityOk returns a tuple with the Confidentiality field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetConfidentialityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Confidentiality.Get(), o.Confidentiality.IsSet()
}

// SetConfidentiality sets field value
func (o *Thesis) SetConfidentiality(v string) {
	o.Confidentiality.Set(&v)
}

// GetLocale returns the Locale field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetLocale() string {
	if o == nil || o.Locale.Get() == nil {
		var ret string
		return ret
	}

	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// SetLocale sets field value
func (o *Thesis) SetLocale(v string) {
	o.Locale.Set(&v)
}

// GetFileUrl returns the FileUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Thesis) GetFileUrl() string {
	if o == nil || o.FileUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.FileUrl.Get()
}

// GetFileUrlOk returns a tuple with the FileUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Thesis) GetFileUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileUrl.Get(), o.FileUrl.IsSet()
}

// SetFileUrl sets field value
func (o *Thesis) SetFileUrl(v string) {
	o.FileUrl.Set(&v)
}

func (o Thesis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Thesis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title.Get()
	toSerialize["subtitle"] = o.Subtitle.Get()
	toSerialize["keywords"] = o.Keywords
	toSerialize["abstract"] = o.Abstract.Get()
	toSerialize["authors"] = o.Authors
	toSerialize["date"] = o.Date.Get()
	toSerialize["supervisors"] = o.Supervisors
	toSerialize["confidentiality"] = o.Confidentiality.Get()
	toSerialize["locale"] = o.Locale.Get()
	toSerialize["file_url"] = o.FileUrl.Get()
	return toSerialize, nil
}

func (o *Thesis) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"subtitle",
		"keywords",
		"abstract",
		"authors",
		"date",
		"supervisors",
		"confidentiality",
		"locale",
		"file_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varThesis := _Thesis{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varThesis)

	if err != nil {
		return err
	}

	*o = Thesis(varThesis)

	return err
}

type NullableThesis struct {
	value *Thesis
	isSet bool
}

func (v NullableThesis) Get() *Thesis {
	return v.value
}

func (v *NullableThesis) Set(val *Thesis) {
	v.value = val
	v.isSet = true
}

func (v NullableThesis) IsSet() bool {
	return v.isSet
}

func (v *NullableThesis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThesis(val *Thesis) *NullableThesis {
	return &NullableThesis{value: val, isSet: true}
}

func (v NullableThesis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThesis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


