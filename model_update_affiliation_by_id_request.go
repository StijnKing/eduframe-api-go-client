/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateAffiliationByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAffiliationByIdRequest{}

// UpdateAffiliationByIdRequest struct for UpdateAffiliationByIdRequest
type UpdateAffiliationByIdRequest struct {
	// Boolean indicating if this user is a key contact of the account.
	KeyContact *bool `json:"key_contact,omitempty"`
	// Unique identifier of the associated user
	UserId *int32 `json:"user_id,omitempty"`
	// Unique identifier of the associated account
	AccountId *int32 `json:"account_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateAffiliationByIdRequest UpdateAffiliationByIdRequest

// NewUpdateAffiliationByIdRequest instantiates a new UpdateAffiliationByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAffiliationByIdRequest() *UpdateAffiliationByIdRequest {
	this := UpdateAffiliationByIdRequest{}
	return &this
}

// NewUpdateAffiliationByIdRequestWithDefaults instantiates a new UpdateAffiliationByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAffiliationByIdRequestWithDefaults() *UpdateAffiliationByIdRequest {
	this := UpdateAffiliationByIdRequest{}
	return &this
}

// GetKeyContact returns the KeyContact field value if set, zero value otherwise.
func (o *UpdateAffiliationByIdRequest) GetKeyContact() bool {
	if o == nil || IsNil(o.KeyContact) {
		var ret bool
		return ret
	}
	return *o.KeyContact
}

// GetKeyContactOk returns a tuple with the KeyContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAffiliationByIdRequest) GetKeyContactOk() (*bool, bool) {
	if o == nil || IsNil(o.KeyContact) {
		return nil, false
	}
	return o.KeyContact, true
}

// HasKeyContact returns a boolean if a field has been set.
func (o *UpdateAffiliationByIdRequest) HasKeyContact() bool {
	if o != nil && !IsNil(o.KeyContact) {
		return true
	}

	return false
}

// SetKeyContact gets a reference to the given bool and assigns it to the KeyContact field.
func (o *UpdateAffiliationByIdRequest) SetKeyContact(v bool) {
	o.KeyContact = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UpdateAffiliationByIdRequest) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAffiliationByIdRequest) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UpdateAffiliationByIdRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *UpdateAffiliationByIdRequest) SetUserId(v int32) {
	o.UserId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *UpdateAffiliationByIdRequest) GetAccountId() int32 {
	if o == nil || IsNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAffiliationByIdRequest) GetAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *UpdateAffiliationByIdRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *UpdateAffiliationByIdRequest) SetAccountId(v int32) {
	o.AccountId = &v
}

func (o UpdateAffiliationByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAffiliationByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyContact) {
		toSerialize["key_contact"] = o.KeyContact
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateAffiliationByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateAffiliationByIdRequest := _UpdateAffiliationByIdRequest{}

	err = json.Unmarshal(data, &varUpdateAffiliationByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateAffiliationByIdRequest(varUpdateAffiliationByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key_contact")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "account_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateAffiliationByIdRequest struct {
	value *UpdateAffiliationByIdRequest
	isSet bool
}

func (v NullableUpdateAffiliationByIdRequest) Get() *UpdateAffiliationByIdRequest {
	return v.value
}

func (v *NullableUpdateAffiliationByIdRequest) Set(val *UpdateAffiliationByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAffiliationByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAffiliationByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAffiliationByIdRequest(val *UpdateAffiliationByIdRequest) *NullableUpdateAffiliationByIdRequest {
	return &NullableUpdateAffiliationByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateAffiliationByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAffiliationByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


