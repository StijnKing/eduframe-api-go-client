/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateCatalogProductByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCatalogProductByIdRequest{}

// UpdateCatalogProductByIdRequest struct for UpdateCatalogProductByIdRequest
type UpdateCatalogProductByIdRequest struct {
	// Identifier of the category of the course.
	CategoryId *int32 `json:"category_id,omitempty"`
	// Boolean showing if the product is published or not.
	IsPublished *bool `json:"is_published,omitempty"`
	// The custom properties of the product.
	Custom map[string]interface{} `json:"custom,omitempty"`
	CourseTabContentsAttributes []UpdateCatalogProductByIdRequestCourseTabContentsAttributesInner `json:"course_tab_contents_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCatalogProductByIdRequest UpdateCatalogProductByIdRequest

// NewUpdateCatalogProductByIdRequest instantiates a new UpdateCatalogProductByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCatalogProductByIdRequest() *UpdateCatalogProductByIdRequest {
	this := UpdateCatalogProductByIdRequest{}
	return &this
}

// NewUpdateCatalogProductByIdRequestWithDefaults instantiates a new UpdateCatalogProductByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCatalogProductByIdRequestWithDefaults() *UpdateCatalogProductByIdRequest {
	this := UpdateCatalogProductByIdRequest{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *UpdateCatalogProductByIdRequest) GetCategoryId() int32 {
	if o == nil || IsNil(o.CategoryId) {
		var ret int32
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCatalogProductByIdRequest) GetCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CategoryId) {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *UpdateCatalogProductByIdRequest) HasCategoryId() bool {
	if o != nil && !IsNil(o.CategoryId) {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given int32 and assigns it to the CategoryId field.
func (o *UpdateCatalogProductByIdRequest) SetCategoryId(v int32) {
	o.CategoryId = &v
}

// GetIsPublished returns the IsPublished field value if set, zero value otherwise.
func (o *UpdateCatalogProductByIdRequest) GetIsPublished() bool {
	if o == nil || IsNil(o.IsPublished) {
		var ret bool
		return ret
	}
	return *o.IsPublished
}

// GetIsPublishedOk returns a tuple with the IsPublished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCatalogProductByIdRequest) GetIsPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublished) {
		return nil, false
	}
	return o.IsPublished, true
}

// HasIsPublished returns a boolean if a field has been set.
func (o *UpdateCatalogProductByIdRequest) HasIsPublished() bool {
	if o != nil && !IsNil(o.IsPublished) {
		return true
	}

	return false
}

// SetIsPublished gets a reference to the given bool and assigns it to the IsPublished field.
func (o *UpdateCatalogProductByIdRequest) SetIsPublished(v bool) {
	o.IsPublished = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *UpdateCatalogProductByIdRequest) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCatalogProductByIdRequest) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *UpdateCatalogProductByIdRequest) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *UpdateCatalogProductByIdRequest) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetCourseTabContentsAttributes returns the CourseTabContentsAttributes field value if set, zero value otherwise.
func (o *UpdateCatalogProductByIdRequest) GetCourseTabContentsAttributes() []UpdateCatalogProductByIdRequestCourseTabContentsAttributesInner {
	if o == nil || IsNil(o.CourseTabContentsAttributes) {
		var ret []UpdateCatalogProductByIdRequestCourseTabContentsAttributesInner
		return ret
	}
	return o.CourseTabContentsAttributes
}

// GetCourseTabContentsAttributesOk returns a tuple with the CourseTabContentsAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCatalogProductByIdRequest) GetCourseTabContentsAttributesOk() ([]UpdateCatalogProductByIdRequestCourseTabContentsAttributesInner, bool) {
	if o == nil || IsNil(o.CourseTabContentsAttributes) {
		return nil, false
	}
	return o.CourseTabContentsAttributes, true
}

// HasCourseTabContentsAttributes returns a boolean if a field has been set.
func (o *UpdateCatalogProductByIdRequest) HasCourseTabContentsAttributes() bool {
	if o != nil && !IsNil(o.CourseTabContentsAttributes) {
		return true
	}

	return false
}

// SetCourseTabContentsAttributes gets a reference to the given []UpdateCatalogProductByIdRequestCourseTabContentsAttributesInner and assigns it to the CourseTabContentsAttributes field.
func (o *UpdateCatalogProductByIdRequest) SetCourseTabContentsAttributes(v []UpdateCatalogProductByIdRequestCourseTabContentsAttributesInner) {
	o.CourseTabContentsAttributes = v
}

func (o UpdateCatalogProductByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCatalogProductByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryId) {
		toSerialize["category_id"] = o.CategoryId
	}
	if !IsNil(o.IsPublished) {
		toSerialize["is_published"] = o.IsPublished
	}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.CourseTabContentsAttributes) {
		toSerialize["course_tab_contents_attributes"] = o.CourseTabContentsAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCatalogProductByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateCatalogProductByIdRequest := _UpdateCatalogProductByIdRequest{}

	err = json.Unmarshal(data, &varUpdateCatalogProductByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateCatalogProductByIdRequest(varUpdateCatalogProductByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "category_id")
		delete(additionalProperties, "is_published")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "course_tab_contents_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCatalogProductByIdRequest struct {
	value *UpdateCatalogProductByIdRequest
	isSet bool
}

func (v NullableUpdateCatalogProductByIdRequest) Get() *UpdateCatalogProductByIdRequest {
	return v.value
}

func (v *NullableUpdateCatalogProductByIdRequest) Set(val *UpdateCatalogProductByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCatalogProductByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCatalogProductByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCatalogProductByIdRequest(val *UpdateCatalogProductByIdRequest) *NullableUpdateCatalogProductByIdRequest {
	return &NullableUpdateCatalogProductByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateCatalogProductByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCatalogProductByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


