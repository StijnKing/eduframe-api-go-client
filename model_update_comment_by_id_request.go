/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateCommentByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCommentByIdRequest{}

// UpdateCommentByIdRequest struct for UpdateCommentByIdRequest
type UpdateCommentByIdRequest struct {
	// A string representing the content of a comment.
	Content *string `json:"content,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCommentByIdRequest UpdateCommentByIdRequest

// NewUpdateCommentByIdRequest instantiates a new UpdateCommentByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCommentByIdRequest() *UpdateCommentByIdRequest {
	this := UpdateCommentByIdRequest{}
	return &this
}

// NewUpdateCommentByIdRequestWithDefaults instantiates a new UpdateCommentByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCommentByIdRequestWithDefaults() *UpdateCommentByIdRequest {
	this := UpdateCommentByIdRequest{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *UpdateCommentByIdRequest) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCommentByIdRequest) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *UpdateCommentByIdRequest) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *UpdateCommentByIdRequest) SetContent(v string) {
	o.Content = &v
}

func (o UpdateCommentByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCommentByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCommentByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateCommentByIdRequest := _UpdateCommentByIdRequest{}

	err = json.Unmarshal(data, &varUpdateCommentByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateCommentByIdRequest(varUpdateCommentByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "content")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCommentByIdRequest struct {
	value *UpdateCommentByIdRequest
	isSet bool
}

func (v NullableUpdateCommentByIdRequest) Get() *UpdateCommentByIdRequest {
	return v.value
}

func (v *NullableUpdateCommentByIdRequest) Set(val *UpdateCommentByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCommentByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCommentByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCommentByIdRequest(val *UpdateCommentByIdRequest) *NullableUpdateCommentByIdRequest {
	return &NullableUpdateCommentByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateCommentByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCommentByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


