/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateCourseLocationByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCourseLocationByIdRequest{}

// UpdateCourseLocationByIdRequest struct for UpdateCourseLocationByIdRequest
type UpdateCourseLocationByIdRequest struct {
	// Name of the location where the course is held.
	Name *string `json:"name,omitempty"`
	AddressAttributes NullableAddressPatchPayload `json:"address_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCourseLocationByIdRequest UpdateCourseLocationByIdRequest

// NewUpdateCourseLocationByIdRequest instantiates a new UpdateCourseLocationByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCourseLocationByIdRequest() *UpdateCourseLocationByIdRequest {
	this := UpdateCourseLocationByIdRequest{}
	return &this
}

// NewUpdateCourseLocationByIdRequestWithDefaults instantiates a new UpdateCourseLocationByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCourseLocationByIdRequestWithDefaults() *UpdateCourseLocationByIdRequest {
	this := UpdateCourseLocationByIdRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCourseLocationByIdRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCourseLocationByIdRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCourseLocationByIdRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCourseLocationByIdRequest) SetName(v string) {
	o.Name = &v
}

// GetAddressAttributes returns the AddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateCourseLocationByIdRequest) GetAddressAttributes() AddressPatchPayload {
	if o == nil || IsNil(o.AddressAttributes.Get()) {
		var ret AddressPatchPayload
		return ret
	}
	return *o.AddressAttributes.Get()
}

// GetAddressAttributesOk returns a tuple with the AddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateCourseLocationByIdRequest) GetAddressAttributesOk() (*AddressPatchPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressAttributes.Get(), o.AddressAttributes.IsSet()
}

// HasAddressAttributes returns a boolean if a field has been set.
func (o *UpdateCourseLocationByIdRequest) HasAddressAttributes() bool {
	if o != nil && o.AddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetAddressAttributes gets a reference to the given NullableAddressPatchPayload and assigns it to the AddressAttributes field.
func (o *UpdateCourseLocationByIdRequest) SetAddressAttributes(v AddressPatchPayload) {
	o.AddressAttributes.Set(&v)
}
// SetAddressAttributesNil sets the value for AddressAttributes to be an explicit nil
func (o *UpdateCourseLocationByIdRequest) SetAddressAttributesNil() {
	o.AddressAttributes.Set(nil)
}

// UnsetAddressAttributes ensures that no value is present for AddressAttributes, not even an explicit nil
func (o *UpdateCourseLocationByIdRequest) UnsetAddressAttributes() {
	o.AddressAttributes.Unset()
}

func (o UpdateCourseLocationByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCourseLocationByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.AddressAttributes.IsSet() {
		toSerialize["address_attributes"] = o.AddressAttributes.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCourseLocationByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateCourseLocationByIdRequest := _UpdateCourseLocationByIdRequest{}

	err = json.Unmarshal(data, &varUpdateCourseLocationByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateCourseLocationByIdRequest(varUpdateCourseLocationByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "address_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCourseLocationByIdRequest struct {
	value *UpdateCourseLocationByIdRequest
	isSet bool
}

func (v NullableUpdateCourseLocationByIdRequest) Get() *UpdateCourseLocationByIdRequest {
	return v.value
}

func (v *NullableUpdateCourseLocationByIdRequest) Set(val *UpdateCourseLocationByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCourseLocationByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCourseLocationByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCourseLocationByIdRequest(val *UpdateCourseLocationByIdRequest) *NullableUpdateCourseLocationByIdRequest {
	return &NullableUpdateCourseLocationByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateCourseLocationByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCourseLocationByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


