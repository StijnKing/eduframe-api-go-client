/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateEnrollmentByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateEnrollmentByIdRequest{}

// UpdateEnrollmentByIdRequest struct for UpdateEnrollmentByIdRequest
type UpdateEnrollmentByIdRequest struct {
	// If it is an enrollment of a fixed course, it equals the end date. For a flexible course, it returns the enrollment specific end date.
	EndDate NullableString `json:"end_date,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateEnrollmentByIdRequest UpdateEnrollmentByIdRequest

// NewUpdateEnrollmentByIdRequest instantiates a new UpdateEnrollmentByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateEnrollmentByIdRequest() *UpdateEnrollmentByIdRequest {
	this := UpdateEnrollmentByIdRequest{}
	return &this
}

// NewUpdateEnrollmentByIdRequestWithDefaults instantiates a new UpdateEnrollmentByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEnrollmentByIdRequestWithDefaults() *UpdateEnrollmentByIdRequest {
	this := UpdateEnrollmentByIdRequest{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateEnrollmentByIdRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret string
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateEnrollmentByIdRequest) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *UpdateEnrollmentByIdRequest) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableString and assigns it to the EndDate field.
func (o *UpdateEnrollmentByIdRequest) SetEndDate(v string) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *UpdateEnrollmentByIdRequest) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *UpdateEnrollmentByIdRequest) UnsetEndDate() {
	o.EndDate.Unset()
}

func (o UpdateEnrollmentByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateEnrollmentByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EndDate.IsSet() {
		toSerialize["end_date"] = o.EndDate.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateEnrollmentByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateEnrollmentByIdRequest := _UpdateEnrollmentByIdRequest{}

	err = json.Unmarshal(data, &varUpdateEnrollmentByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateEnrollmentByIdRequest(varUpdateEnrollmentByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "end_date")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateEnrollmentByIdRequest struct {
	value *UpdateEnrollmentByIdRequest
	isSet bool
}

func (v NullableUpdateEnrollmentByIdRequest) Get() *UpdateEnrollmentByIdRequest {
	return v.value
}

func (v *NullableUpdateEnrollmentByIdRequest) Set(val *UpdateEnrollmentByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEnrollmentByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEnrollmentByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEnrollmentByIdRequest(val *UpdateEnrollmentByIdRequest) *NullableUpdateEnrollmentByIdRequest {
	return &NullableUpdateEnrollmentByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateEnrollmentByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEnrollmentByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


