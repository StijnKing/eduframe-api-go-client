/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateGradeByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateGradeByIdRequest{}

// UpdateGradeByIdRequest struct for UpdateGradeByIdRequest
type UpdateGradeByIdRequest struct {
	// The grade awarded (at least one of grade and score is required)
	Grade NullableString `json:"grade,omitempty"`
	// The score awarded (at least one of grade and score is required)
	Score NullableFloat32 `json:"score,omitempty"`
	// Unique model identifier of the gradeable (enrollment / ...)
	GradeableId *int32 `json:"gradeable_id,omitempty"`
	// Model type of the gradeable (enrollment / ...)
	GradeableType *string `json:"gradeable_type,omitempty"`
	// Additional comment about the grade
	Comment NullableString `json:"comment,omitempty"`
	// Unique identifier of the enrollment
	EnrollmentId *int32 `json:"enrollment_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateGradeByIdRequest UpdateGradeByIdRequest

// NewUpdateGradeByIdRequest instantiates a new UpdateGradeByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGradeByIdRequest() *UpdateGradeByIdRequest {
	this := UpdateGradeByIdRequest{}
	return &this
}

// NewUpdateGradeByIdRequestWithDefaults instantiates a new UpdateGradeByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGradeByIdRequestWithDefaults() *UpdateGradeByIdRequest {
	this := UpdateGradeByIdRequest{}
	return &this
}

// GetGrade returns the Grade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateGradeByIdRequest) GetGrade() string {
	if o == nil || IsNil(o.Grade.Get()) {
		var ret string
		return ret
	}
	return *o.Grade.Get()
}

// GetGradeOk returns a tuple with the Grade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateGradeByIdRequest) GetGradeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grade.Get(), o.Grade.IsSet()
}

// HasGrade returns a boolean if a field has been set.
func (o *UpdateGradeByIdRequest) HasGrade() bool {
	if o != nil && o.Grade.IsSet() {
		return true
	}

	return false
}

// SetGrade gets a reference to the given NullableString and assigns it to the Grade field.
func (o *UpdateGradeByIdRequest) SetGrade(v string) {
	o.Grade.Set(&v)
}
// SetGradeNil sets the value for Grade to be an explicit nil
func (o *UpdateGradeByIdRequest) SetGradeNil() {
	o.Grade.Set(nil)
}

// UnsetGrade ensures that no value is present for Grade, not even an explicit nil
func (o *UpdateGradeByIdRequest) UnsetGrade() {
	o.Grade.Unset()
}

// GetScore returns the Score field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateGradeByIdRequest) GetScore() float32 {
	if o == nil || IsNil(o.Score.Get()) {
		var ret float32
		return ret
	}
	return *o.Score.Get()
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateGradeByIdRequest) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Score.Get(), o.Score.IsSet()
}

// HasScore returns a boolean if a field has been set.
func (o *UpdateGradeByIdRequest) HasScore() bool {
	if o != nil && o.Score.IsSet() {
		return true
	}

	return false
}

// SetScore gets a reference to the given NullableFloat32 and assigns it to the Score field.
func (o *UpdateGradeByIdRequest) SetScore(v float32) {
	o.Score.Set(&v)
}
// SetScoreNil sets the value for Score to be an explicit nil
func (o *UpdateGradeByIdRequest) SetScoreNil() {
	o.Score.Set(nil)
}

// UnsetScore ensures that no value is present for Score, not even an explicit nil
func (o *UpdateGradeByIdRequest) UnsetScore() {
	o.Score.Unset()
}

// GetGradeableId returns the GradeableId field value if set, zero value otherwise.
func (o *UpdateGradeByIdRequest) GetGradeableId() int32 {
	if o == nil || IsNil(o.GradeableId) {
		var ret int32
		return ret
	}
	return *o.GradeableId
}

// GetGradeableIdOk returns a tuple with the GradeableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGradeByIdRequest) GetGradeableIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GradeableId) {
		return nil, false
	}
	return o.GradeableId, true
}

// HasGradeableId returns a boolean if a field has been set.
func (o *UpdateGradeByIdRequest) HasGradeableId() bool {
	if o != nil && !IsNil(o.GradeableId) {
		return true
	}

	return false
}

// SetGradeableId gets a reference to the given int32 and assigns it to the GradeableId field.
func (o *UpdateGradeByIdRequest) SetGradeableId(v int32) {
	o.GradeableId = &v
}

// GetGradeableType returns the GradeableType field value if set, zero value otherwise.
func (o *UpdateGradeByIdRequest) GetGradeableType() string {
	if o == nil || IsNil(o.GradeableType) {
		var ret string
		return ret
	}
	return *o.GradeableType
}

// GetGradeableTypeOk returns a tuple with the GradeableType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGradeByIdRequest) GetGradeableTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GradeableType) {
		return nil, false
	}
	return o.GradeableType, true
}

// HasGradeableType returns a boolean if a field has been set.
func (o *UpdateGradeByIdRequest) HasGradeableType() bool {
	if o != nil && !IsNil(o.GradeableType) {
		return true
	}

	return false
}

// SetGradeableType gets a reference to the given string and assigns it to the GradeableType field.
func (o *UpdateGradeByIdRequest) SetGradeableType(v string) {
	o.GradeableType = &v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateGradeByIdRequest) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateGradeByIdRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *UpdateGradeByIdRequest) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *UpdateGradeByIdRequest) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *UpdateGradeByIdRequest) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *UpdateGradeByIdRequest) UnsetComment() {
	o.Comment.Unset()
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise.
func (o *UpdateGradeByIdRequest) GetEnrollmentId() int32 {
	if o == nil || IsNil(o.EnrollmentId) {
		var ret int32
		return ret
	}
	return *o.EnrollmentId
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGradeByIdRequest) GetEnrollmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EnrollmentId) {
		return nil, false
	}
	return o.EnrollmentId, true
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *UpdateGradeByIdRequest) HasEnrollmentId() bool {
	if o != nil && !IsNil(o.EnrollmentId) {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given int32 and assigns it to the EnrollmentId field.
func (o *UpdateGradeByIdRequest) SetEnrollmentId(v int32) {
	o.EnrollmentId = &v
}

func (o UpdateGradeByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateGradeByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Grade.IsSet() {
		toSerialize["grade"] = o.Grade.Get()
	}
	if o.Score.IsSet() {
		toSerialize["score"] = o.Score.Get()
	}
	if !IsNil(o.GradeableId) {
		toSerialize["gradeable_id"] = o.GradeableId
	}
	if !IsNil(o.GradeableType) {
		toSerialize["gradeable_type"] = o.GradeableType
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if !IsNil(o.EnrollmentId) {
		toSerialize["enrollment_id"] = o.EnrollmentId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateGradeByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateGradeByIdRequest := _UpdateGradeByIdRequest{}

	err = json.Unmarshal(data, &varUpdateGradeByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateGradeByIdRequest(varUpdateGradeByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "grade")
		delete(additionalProperties, "score")
		delete(additionalProperties, "gradeable_id")
		delete(additionalProperties, "gradeable_type")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "enrollment_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateGradeByIdRequest struct {
	value *UpdateGradeByIdRequest
	isSet bool
}

func (v NullableUpdateGradeByIdRequest) Get() *UpdateGradeByIdRequest {
	return v.value
}

func (v *NullableUpdateGradeByIdRequest) Set(val *UpdateGradeByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGradeByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGradeByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGradeByIdRequest(val *UpdateGradeByIdRequest) *NullableUpdateGradeByIdRequest {
	return &NullableUpdateGradeByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateGradeByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGradeByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


