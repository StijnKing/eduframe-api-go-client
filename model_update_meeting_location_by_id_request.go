/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateMeetingLocationByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMeetingLocationByIdRequest{}

// UpdateMeetingLocationByIdRequest struct for UpdateMeetingLocationByIdRequest
type UpdateMeetingLocationByIdRequest struct {
	// Name of the meeting location.
	Name *string `json:"name,omitempty"`
	// Unique identifier of the course location.
	CourseLocationId *int32 `json:"course_location_id,omitempty"`
	// Capacity of the meeting location
	Capacity NullableFloat32 `json:"capacity,omitempty"`
	AddressAttributes NullableAddressPatchPayload `json:"address_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateMeetingLocationByIdRequest UpdateMeetingLocationByIdRequest

// NewUpdateMeetingLocationByIdRequest instantiates a new UpdateMeetingLocationByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMeetingLocationByIdRequest() *UpdateMeetingLocationByIdRequest {
	this := UpdateMeetingLocationByIdRequest{}
	return &this
}

// NewUpdateMeetingLocationByIdRequestWithDefaults instantiates a new UpdateMeetingLocationByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMeetingLocationByIdRequestWithDefaults() *UpdateMeetingLocationByIdRequest {
	this := UpdateMeetingLocationByIdRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateMeetingLocationByIdRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMeetingLocationByIdRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMeetingLocationByIdRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateMeetingLocationByIdRequest) SetName(v string) {
	o.Name = &v
}

// GetCourseLocationId returns the CourseLocationId field value if set, zero value otherwise.
func (o *UpdateMeetingLocationByIdRequest) GetCourseLocationId() int32 {
	if o == nil || IsNil(o.CourseLocationId) {
		var ret int32
		return ret
	}
	return *o.CourseLocationId
}

// GetCourseLocationIdOk returns a tuple with the CourseLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMeetingLocationByIdRequest) GetCourseLocationIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CourseLocationId) {
		return nil, false
	}
	return o.CourseLocationId, true
}

// HasCourseLocationId returns a boolean if a field has been set.
func (o *UpdateMeetingLocationByIdRequest) HasCourseLocationId() bool {
	if o != nil && !IsNil(o.CourseLocationId) {
		return true
	}

	return false
}

// SetCourseLocationId gets a reference to the given int32 and assigns it to the CourseLocationId field.
func (o *UpdateMeetingLocationByIdRequest) SetCourseLocationId(v int32) {
	o.CourseLocationId = &v
}

// GetCapacity returns the Capacity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMeetingLocationByIdRequest) GetCapacity() float32 {
	if o == nil || IsNil(o.Capacity.Get()) {
		var ret float32
		return ret
	}
	return *o.Capacity.Get()
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMeetingLocationByIdRequest) GetCapacityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Capacity.Get(), o.Capacity.IsSet()
}

// HasCapacity returns a boolean if a field has been set.
func (o *UpdateMeetingLocationByIdRequest) HasCapacity() bool {
	if o != nil && o.Capacity.IsSet() {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given NullableFloat32 and assigns it to the Capacity field.
func (o *UpdateMeetingLocationByIdRequest) SetCapacity(v float32) {
	o.Capacity.Set(&v)
}
// SetCapacityNil sets the value for Capacity to be an explicit nil
func (o *UpdateMeetingLocationByIdRequest) SetCapacityNil() {
	o.Capacity.Set(nil)
}

// UnsetCapacity ensures that no value is present for Capacity, not even an explicit nil
func (o *UpdateMeetingLocationByIdRequest) UnsetCapacity() {
	o.Capacity.Unset()
}

// GetAddressAttributes returns the AddressAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMeetingLocationByIdRequest) GetAddressAttributes() AddressPatchPayload {
	if o == nil || IsNil(o.AddressAttributes.Get()) {
		var ret AddressPatchPayload
		return ret
	}
	return *o.AddressAttributes.Get()
}

// GetAddressAttributesOk returns a tuple with the AddressAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMeetingLocationByIdRequest) GetAddressAttributesOk() (*AddressPatchPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressAttributes.Get(), o.AddressAttributes.IsSet()
}

// HasAddressAttributes returns a boolean if a field has been set.
func (o *UpdateMeetingLocationByIdRequest) HasAddressAttributes() bool {
	if o != nil && o.AddressAttributes.IsSet() {
		return true
	}

	return false
}

// SetAddressAttributes gets a reference to the given NullableAddressPatchPayload and assigns it to the AddressAttributes field.
func (o *UpdateMeetingLocationByIdRequest) SetAddressAttributes(v AddressPatchPayload) {
	o.AddressAttributes.Set(&v)
}
// SetAddressAttributesNil sets the value for AddressAttributes to be an explicit nil
func (o *UpdateMeetingLocationByIdRequest) SetAddressAttributesNil() {
	o.AddressAttributes.Set(nil)
}

// UnsetAddressAttributes ensures that no value is present for AddressAttributes, not even an explicit nil
func (o *UpdateMeetingLocationByIdRequest) UnsetAddressAttributes() {
	o.AddressAttributes.Unset()
}

func (o UpdateMeetingLocationByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMeetingLocationByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CourseLocationId) {
		toSerialize["course_location_id"] = o.CourseLocationId
	}
	if o.Capacity.IsSet() {
		toSerialize["capacity"] = o.Capacity.Get()
	}
	if o.AddressAttributes.IsSet() {
		toSerialize["address_attributes"] = o.AddressAttributes.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateMeetingLocationByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateMeetingLocationByIdRequest := _UpdateMeetingLocationByIdRequest{}

	err = json.Unmarshal(data, &varUpdateMeetingLocationByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateMeetingLocationByIdRequest(varUpdateMeetingLocationByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "course_location_id")
		delete(additionalProperties, "capacity")
		delete(additionalProperties, "address_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateMeetingLocationByIdRequest struct {
	value *UpdateMeetingLocationByIdRequest
	isSet bool
}

func (v NullableUpdateMeetingLocationByIdRequest) Get() *UpdateMeetingLocationByIdRequest {
	return v.value
}

func (v *NullableUpdateMeetingLocationByIdRequest) Set(val *UpdateMeetingLocationByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMeetingLocationByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMeetingLocationByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMeetingLocationByIdRequest(val *UpdateMeetingLocationByIdRequest) *NullableUpdateMeetingLocationByIdRequest {
	return &NullableUpdateMeetingLocationByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateMeetingLocationByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMeetingLocationByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


