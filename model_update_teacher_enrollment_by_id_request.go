/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
)

// checks if the UpdateTeacherEnrollmentByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTeacherEnrollmentByIdRequest{}

// UpdateTeacherEnrollmentByIdRequest struct for UpdateTeacherEnrollmentByIdRequest
type UpdateTeacherEnrollmentByIdRequest struct {
	// Unique identifier of the planned course.
	PlannedCourseId *int32 `json:"planned_course_id,omitempty"`
	// Unique identifier of the teacher.
	TeacherId *int32 `json:"teacher_id,omitempty"`
	// Unique identifier of the teacher role.  ![Teacher Roles](https://img.shields.io/badge/Feature-Teacher_Roles-blue) 
	TeacherRoleId *int32 `json:"teacher_role_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateTeacherEnrollmentByIdRequest UpdateTeacherEnrollmentByIdRequest

// NewUpdateTeacherEnrollmentByIdRequest instantiates a new UpdateTeacherEnrollmentByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTeacherEnrollmentByIdRequest() *UpdateTeacherEnrollmentByIdRequest {
	this := UpdateTeacherEnrollmentByIdRequest{}
	return &this
}

// NewUpdateTeacherEnrollmentByIdRequestWithDefaults instantiates a new UpdateTeacherEnrollmentByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTeacherEnrollmentByIdRequestWithDefaults() *UpdateTeacherEnrollmentByIdRequest {
	this := UpdateTeacherEnrollmentByIdRequest{}
	return &this
}

// GetPlannedCourseId returns the PlannedCourseId field value if set, zero value otherwise.
func (o *UpdateTeacherEnrollmentByIdRequest) GetPlannedCourseId() int32 {
	if o == nil || IsNil(o.PlannedCourseId) {
		var ret int32
		return ret
	}
	return *o.PlannedCourseId
}

// GetPlannedCourseIdOk returns a tuple with the PlannedCourseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTeacherEnrollmentByIdRequest) GetPlannedCourseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PlannedCourseId) {
		return nil, false
	}
	return o.PlannedCourseId, true
}

// HasPlannedCourseId returns a boolean if a field has been set.
func (o *UpdateTeacherEnrollmentByIdRequest) HasPlannedCourseId() bool {
	if o != nil && !IsNil(o.PlannedCourseId) {
		return true
	}

	return false
}

// SetPlannedCourseId gets a reference to the given int32 and assigns it to the PlannedCourseId field.
func (o *UpdateTeacherEnrollmentByIdRequest) SetPlannedCourseId(v int32) {
	o.PlannedCourseId = &v
}

// GetTeacherId returns the TeacherId field value if set, zero value otherwise.
func (o *UpdateTeacherEnrollmentByIdRequest) GetTeacherId() int32 {
	if o == nil || IsNil(o.TeacherId) {
		var ret int32
		return ret
	}
	return *o.TeacherId
}

// GetTeacherIdOk returns a tuple with the TeacherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTeacherEnrollmentByIdRequest) GetTeacherIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TeacherId) {
		return nil, false
	}
	return o.TeacherId, true
}

// HasTeacherId returns a boolean if a field has been set.
func (o *UpdateTeacherEnrollmentByIdRequest) HasTeacherId() bool {
	if o != nil && !IsNil(o.TeacherId) {
		return true
	}

	return false
}

// SetTeacherId gets a reference to the given int32 and assigns it to the TeacherId field.
func (o *UpdateTeacherEnrollmentByIdRequest) SetTeacherId(v int32) {
	o.TeacherId = &v
}

// GetTeacherRoleId returns the TeacherRoleId field value if set, zero value otherwise.
func (o *UpdateTeacherEnrollmentByIdRequest) GetTeacherRoleId() int32 {
	if o == nil || IsNil(o.TeacherRoleId) {
		var ret int32
		return ret
	}
	return *o.TeacherRoleId
}

// GetTeacherRoleIdOk returns a tuple with the TeacherRoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTeacherEnrollmentByIdRequest) GetTeacherRoleIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TeacherRoleId) {
		return nil, false
	}
	return o.TeacherRoleId, true
}

// HasTeacherRoleId returns a boolean if a field has been set.
func (o *UpdateTeacherEnrollmentByIdRequest) HasTeacherRoleId() bool {
	if o != nil && !IsNil(o.TeacherRoleId) {
		return true
	}

	return false
}

// SetTeacherRoleId gets a reference to the given int32 and assigns it to the TeacherRoleId field.
func (o *UpdateTeacherEnrollmentByIdRequest) SetTeacherRoleId(v int32) {
	o.TeacherRoleId = &v
}

func (o UpdateTeacherEnrollmentByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTeacherEnrollmentByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PlannedCourseId) {
		toSerialize["planned_course_id"] = o.PlannedCourseId
	}
	if !IsNil(o.TeacherId) {
		toSerialize["teacher_id"] = o.TeacherId
	}
	if !IsNil(o.TeacherRoleId) {
		toSerialize["teacher_role_id"] = o.TeacherRoleId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateTeacherEnrollmentByIdRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateTeacherEnrollmentByIdRequest := _UpdateTeacherEnrollmentByIdRequest{}

	err = json.Unmarshal(data, &varUpdateTeacherEnrollmentByIdRequest)

	if err != nil {
		return err
	}

	*o = UpdateTeacherEnrollmentByIdRequest(varUpdateTeacherEnrollmentByIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "planned_course_id")
		delete(additionalProperties, "teacher_id")
		delete(additionalProperties, "teacher_role_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateTeacherEnrollmentByIdRequest struct {
	value *UpdateTeacherEnrollmentByIdRequest
	isSet bool
}

func (v NullableUpdateTeacherEnrollmentByIdRequest) Get() *UpdateTeacherEnrollmentByIdRequest {
	return v.value
}

func (v *NullableUpdateTeacherEnrollmentByIdRequest) Set(val *UpdateTeacherEnrollmentByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTeacherEnrollmentByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTeacherEnrollmentByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTeacherEnrollmentByIdRequest(val *UpdateTeacherEnrollmentByIdRequest) *NullableUpdateTeacherEnrollmentByIdRequest {
	return &NullableUpdateTeacherEnrollmentByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateTeacherEnrollmentByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTeacherEnrollmentByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


