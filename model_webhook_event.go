/*
Eduframe - API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eduframe

import (
	"encoding/json"
	"fmt"
)

// WebhookEvent Webhook events on which you can subscribe
type WebhookEvent string

// List of WebhookEvent
const (
	WEBHOOKEVENT_ACCOUNT_CREATED WebhookEvent = "account.created"
	WEBHOOKEVENT_ACCOUNT_DELETED WebhookEvent = "account.deleted"
	WEBHOOKEVENT_ACCOUNT_UPDATED WebhookEvent = "account.updated"
	WEBHOOKEVENT_CATALOG_VARIANT_CREATED WebhookEvent = "catalog_variant.created"
	WEBHOOKEVENT_CATALOG_VARIANT_DELETED WebhookEvent = "catalog_variant.deleted"
	WEBHOOKEVENT_CATALOG_VARIANT_UPDATED WebhookEvent = "catalog_variant.updated"
	WEBHOOKEVENT_CATEGORY_CREATED WebhookEvent = "category.created"
	WEBHOOKEVENT_CATEGORY_DELETED WebhookEvent = "category.deleted"
	WEBHOOKEVENT_CATEGORY_UPDATED WebhookEvent = "category.updated"
	WEBHOOKEVENT_COURSE_CREATED WebhookEvent = "course.created"
	WEBHOOKEVENT_COURSE_DELETED WebhookEvent = "course.deleted"
	WEBHOOKEVENT_COURSE_UPDATED WebhookEvent = "course.updated"
	WEBHOOKEVENT_COURSE_LOCATION_CREATED WebhookEvent = "course_location.created"
	WEBHOOKEVENT_COURSE_LOCATION_DELETED WebhookEvent = "course_location.deleted"
	WEBHOOKEVENT_COURSE_LOCATION_UPDATED WebhookEvent = "course_location.updated"
	WEBHOOKEVENT_COURSE_VARIANT_CREATED WebhookEvent = "course_variant.created"
	WEBHOOKEVENT_COURSE_VARIANT_DELETED WebhookEvent = "course_variant.deleted"
	WEBHOOKEVENT_COURSE_VARIANT_UPDATED WebhookEvent = "course_variant.updated"
	WEBHOOKEVENT_CUSTOM_FIELD_OPTION_CREATED WebhookEvent = "custom_field_option.created"
	WEBHOOKEVENT_CUSTOM_FIELD_OPTION_DELETED WebhookEvent = "custom_field_option.deleted"
	WEBHOOKEVENT_CUSTOM_FIELD_OPTION_UPDATED WebhookEvent = "custom_field_option.updated"
	WEBHOOKEVENT_CUSTOM_RECORD_CREATED WebhookEvent = "custom_record.created"
	WEBHOOKEVENT_CUSTOM_RECORD_DELETED WebhookEvent = "custom_record.deleted"
	WEBHOOKEVENT_CUSTOM_RECORD_UPDATED WebhookEvent = "custom_record.updated"
	WEBHOOKEVENT_EDUCATOR_CREATED WebhookEvent = "educator.created"
	WEBHOOKEVENT_EDUCATOR_DELETED WebhookEvent = "educator.deleted"
	WEBHOOKEVENT_EDUCATOR_UPDATED WebhookEvent = "educator.updated"
	WEBHOOKEVENT_ENROLLMENT_CREATED WebhookEvent = "enrollment.created"
	WEBHOOKEVENT_ENROLLMENT_DELETED WebhookEvent = "enrollment.deleted"
	WEBHOOKEVENT_ENROLLMENT_UPDATED WebhookEvent = "enrollment.updated"
	WEBHOOKEVENT_INVOICE_CREATED WebhookEvent = "invoice.created"
	WEBHOOKEVENT_INVOICE_DELETED WebhookEvent = "invoice.deleted"
	WEBHOOKEVENT_INVOICE_UPDATED WebhookEvent = "invoice.updated"
	WEBHOOKEVENT_INVOICE_VAT_CREATED WebhookEvent = "invoice_vat.created"
	WEBHOOKEVENT_INVOICE_VAT_DELETED WebhookEvent = "invoice_vat.deleted"
	WEBHOOKEVENT_INVOICE_VAT_UPDATED WebhookEvent = "invoice_vat.updated"
	WEBHOOKEVENT_LABEL_CREATED WebhookEvent = "label.created"
	WEBHOOKEVENT_LABEL_DELETED WebhookEvent = "label.deleted"
	WEBHOOKEVENT_LABEL_UPDATED WebhookEvent = "label.updated"
	WEBHOOKEVENT_LEAD_CREATED WebhookEvent = "lead.created"
	WEBHOOKEVENT_LEAD_DELETED WebhookEvent = "lead.deleted"
	WEBHOOKEVENT_LEAD_UPDATED WebhookEvent = "lead.updated"
	WEBHOOKEVENT_MEETING_CREATED WebhookEvent = "meeting.created"
	WEBHOOKEVENT_MEETING_DELETED WebhookEvent = "meeting.deleted"
	WEBHOOKEVENT_MEETING_TEACHER_ATTENDEES_CHANGED WebhookEvent = "meeting.teacher_attendees_changed"
	WEBHOOKEVENT_MEETING_UPDATED WebhookEvent = "meeting.updated"
	WEBHOOKEVENT_MEETING_LOCATION_CREATED WebhookEvent = "meeting_location.created"
	WEBHOOKEVENT_MEETING_LOCATION_DELETED WebhookEvent = "meeting_location.deleted"
	WEBHOOKEVENT_MEETING_LOCATION_UPDATED WebhookEvent = "meeting_location.updated"
	WEBHOOKEVENT_ORDER_APPROVED WebhookEvent = "order.approved"
	WEBHOOKEVENT_ORDER_CANCELED WebhookEvent = "order.canceled"
	WEBHOOKEVENT_ORDER_CREATED WebhookEvent = "order.created"
	WEBHOOKEVENT_ORDER_DELETED WebhookEvent = "order.deleted"
	WEBHOOKEVENT_ORDER_DENIED WebhookEvent = "order.denied"
	WEBHOOKEVENT_ORDER_UPDATED WebhookEvent = "order.updated"
	WEBHOOKEVENT_PAYMENT_CREATED WebhookEvent = "payment.created"
	WEBHOOKEVENT_PAYMENT_DELETED WebhookEvent = "payment.deleted"
	WEBHOOKEVENT_PAYMENT_UPDATED WebhookEvent = "payment.updated"
	WEBHOOKEVENT_PLANNED_COURSE_CANCELED WebhookEvent = "planned_course.canceled"
	WEBHOOKEVENT_PLANNED_COURSE_CREATED WebhookEvent = "planned_course.created"
	WEBHOOKEVENT_PLANNED_COURSE_DELETED WebhookEvent = "planned_course.deleted"
	WEBHOOKEVENT_PLANNED_COURSE_TEACHER_ATTENDEES_CHANGED WebhookEvent = "planned_course.teacher_attendees_changed"
	WEBHOOKEVENT_PLANNED_COURSE_UPDATED WebhookEvent = "planned_course.updated"
	WEBHOOKEVENT_PLANNING_EVENT_CREATED WebhookEvent = "planning_event.created"
	WEBHOOKEVENT_PLANNING_EVENT_DELETED WebhookEvent = "planning_event.deleted"
	WEBHOOKEVENT_PLANNING_EVENT_TEACHER_ATTENDEES_CHANGED WebhookEvent = "planning_event.teacher_attendees_changed"
	WEBHOOKEVENT_PLANNING_EVENT_UPDATED WebhookEvent = "planning_event.updated"
	WEBHOOKEVENT_PRODUCT_CREATED WebhookEvent = "product.created"
	WEBHOOKEVENT_PRODUCT_DELETED WebhookEvent = "product.deleted"
	WEBHOOKEVENT_PRODUCT_UPDATED WebhookEvent = "product.updated"
	WEBHOOKEVENT_PROGRAM_CREATED WebhookEvent = "program.created"
	WEBHOOKEVENT_PROGRAM_DELETED WebhookEvent = "program.deleted"
	WEBHOOKEVENT_PROGRAM_UPDATED WebhookEvent = "program.updated"
	WEBHOOKEVENT_PROGRAM_EDITION_CREATED WebhookEvent = "program_edition.created"
	WEBHOOKEVENT_PROGRAM_EDITION_DELETED WebhookEvent = "program_edition.deleted"
	WEBHOOKEVENT_PROGRAM_EDITION_UPDATED WebhookEvent = "program_edition.updated"
	WEBHOOKEVENT_PROGRAM_ENROLLMENT_CANCEL WebhookEvent = "program_enrollment.cancel"
	WEBHOOKEVENT_PROGRAM_ENROLLMENT_CREATED WebhookEvent = "program_enrollment.created"
	WEBHOOKEVENT_PROGRAM_ENROLLMENT_GRADUATION_REVOKED WebhookEvent = "program_enrollment.graduation_revoked"
	WEBHOOKEVENT_PROGRAM_ENROLLMENT_PASS WebhookEvent = "program_enrollment.pass"
	WEBHOOKEVENT_PROGRAM_ENROLLMENT_UPDATED WebhookEvent = "program_enrollment.updated"
	WEBHOOKEVENT_TEACHER_CREATED WebhookEvent = "teacher.created"
	WEBHOOKEVENT_TEACHER_DELETED WebhookEvent = "teacher.deleted"
	WEBHOOKEVENT_TEACHER_UPDATED WebhookEvent = "teacher.updated"
	WEBHOOKEVENT_TEACHER_ROLE_CREATED WebhookEvent = "teacher_role.created"
	WEBHOOKEVENT_TEACHER_ROLE_DELETED WebhookEvent = "teacher_role.deleted"
	WEBHOOKEVENT_TEACHER_ROLE_UPDATED WebhookEvent = "teacher_role.updated"
	WEBHOOKEVENT_USER_CREATED WebhookEvent = "user.created"
	WEBHOOKEVENT_USER_DELETED WebhookEvent = "user.deleted"
	WEBHOOKEVENT_USER_MERGED WebhookEvent = "user.merged"
	WEBHOOKEVENT_USER_UPDATED WebhookEvent = "user.updated"
)

// All allowed values of WebhookEvent enum
var AllowedWebhookEventEnumValues = []WebhookEvent{
	"account.created",
	"account.deleted",
	"account.updated",
	"catalog_variant.created",
	"catalog_variant.deleted",
	"catalog_variant.updated",
	"category.created",
	"category.deleted",
	"category.updated",
	"course.created",
	"course.deleted",
	"course.updated",
	"course_location.created",
	"course_location.deleted",
	"course_location.updated",
	"course_variant.created",
	"course_variant.deleted",
	"course_variant.updated",
	"custom_field_option.created",
	"custom_field_option.deleted",
	"custom_field_option.updated",
	"custom_record.created",
	"custom_record.deleted",
	"custom_record.updated",
	"educator.created",
	"educator.deleted",
	"educator.updated",
	"enrollment.created",
	"enrollment.deleted",
	"enrollment.updated",
	"invoice.created",
	"invoice.deleted",
	"invoice.updated",
	"invoice_vat.created",
	"invoice_vat.deleted",
	"invoice_vat.updated",
	"label.created",
	"label.deleted",
	"label.updated",
	"lead.created",
	"lead.deleted",
	"lead.updated",
	"meeting.created",
	"meeting.deleted",
	"meeting.teacher_attendees_changed",
	"meeting.updated",
	"meeting_location.created",
	"meeting_location.deleted",
	"meeting_location.updated",
	"order.approved",
	"order.canceled",
	"order.created",
	"order.deleted",
	"order.denied",
	"order.updated",
	"payment.created",
	"payment.deleted",
	"payment.updated",
	"planned_course.canceled",
	"planned_course.created",
	"planned_course.deleted",
	"planned_course.teacher_attendees_changed",
	"planned_course.updated",
	"planning_event.created",
	"planning_event.deleted",
	"planning_event.teacher_attendees_changed",
	"planning_event.updated",
	"product.created",
	"product.deleted",
	"product.updated",
	"program.created",
	"program.deleted",
	"program.updated",
	"program_edition.created",
	"program_edition.deleted",
	"program_edition.updated",
	"program_enrollment.cancel",
	"program_enrollment.created",
	"program_enrollment.graduation_revoked",
	"program_enrollment.pass",
	"program_enrollment.updated",
	"teacher.created",
	"teacher.deleted",
	"teacher.updated",
	"teacher_role.created",
	"teacher_role.deleted",
	"teacher_role.updated",
	"user.created",
	"user.deleted",
	"user.merged",
	"user.updated",
}

func (v *WebhookEvent) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WebhookEvent(value)
	for _, existing := range AllowedWebhookEventEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WebhookEvent", value)
}

// NewWebhookEventFromValue returns a pointer to a valid WebhookEvent
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWebhookEventFromValue(v string) (*WebhookEvent, error) {
	ev := WebhookEvent(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WebhookEvent: valid values are %v", v, AllowedWebhookEventEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WebhookEvent) IsValid() bool {
	for _, existing := range AllowedWebhookEventEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WebhookEvent value
func (v WebhookEvent) Ptr() *WebhookEvent {
	return &v
}

type NullableWebhookEvent struct {
	value *WebhookEvent
	isSet bool
}

func (v NullableWebhookEvent) Get() *WebhookEvent {
	return v.value
}

func (v *NullableWebhookEvent) Set(val *WebhookEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEvent(val *WebhookEvent) *NullableWebhookEvent {
	return &NullableWebhookEvent{value: val, isSet: true}
}

func (v NullableWebhookEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

